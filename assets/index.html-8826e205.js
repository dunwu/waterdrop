import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as p,c as l,a as n,b as s,d as a,e as o}from"./app-f29527f5.js";const r={},i=n("h1",{id:"docker-compose",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#docker-compose","aria-hidden":"true"},"#"),s(" Docker Compose")],-1),d={href:"https://github.com/docker/compose",target:"_blank",rel:"noopener noreferrer"},u=n("code",null,"OpenStack",-1),k=n("code",null,"Heat",-1),m=o('<h2 id="一、compose-简介" tabindex="-1"><a class="header-anchor" href="#一、compose-简介" aria-hidden="true">#</a> 一、Compose 简介</h2><p><strong><code>Compose</code> 的定位是：定义和运行多个 Docker 容器的应用</strong>。 使用一个 <code>Dockerfile</code> 模板文件，可以让用户很方便的定义一个单独的应用容器。然而，在日常工作中，经常会碰到需要多个容器相互配合来完成某项任务的情况。例如要实现一个 Web 项目，除了 Web 服务容器本身，往往还需要再加上后端的数据库服务容器，甚至还包括负载均衡容器等。</p><p><code>Compose</code> 恰好满足了这样的需求。它允许用户通过一个单独的 <code>docker-compose.yml</code> 模板文件（YAML 格式）来定义一组相关联的应用容器为一个项目（project）。</p><p><code>Compose</code> 中有两个重要的概念：</p><ul><li><strong>服务 (<code>service</code>)</strong>：一个应用的容器，实际上可以包括若干运行相同镜像的容器实例。</li><li><strong>项目 (<code>project</code>)</strong>：由一组关联的应用容器组成的一个完整业务单元，在 <code>docker-compose.yml</code> 文件中定义。</li></ul><p><code>Compose</code> 的默认管理对象是项目，通过子命令对项目中的一组容器进行便捷地生命周期管理。</p><h2 id="二、安装卸载" tabindex="-1"><a class="header-anchor" href="#二、安装卸载" aria-hidden="true">#</a> 二、安装卸载</h2><p><code>Compose</code> 支持 Linux、macOS、Windows10 三大平台。</p><p>Linux 安装方式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">curl</span> <span class="token parameter variable">-L</span> https://github.com/docker/compose/releases/download/1.24.1/docker-compose-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> <span class="token parameter variable">-s</span><span class="token variable">`</span></span>-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> <span class="token parameter variable">-m</span><span class="token variable">`</span></span> <span class="token operator">&gt;</span> /usr/local/bin/docker-compose\n<span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>',10),h={href:"https://docs.docker.com/compose/install/",target:"_blank",rel:"noopener noreferrer"},v=o(`<h2 id="三、快速入门" tabindex="-1"><a class="header-anchor" href="#三、快速入门" aria-hidden="true">#</a> 三、快速入门</h2><h3 id="web-应用" tabindex="-1"><a class="header-anchor" href="#web-应用" aria-hidden="true">#</a> web 应用</h3><p>新建文件夹，在该目录中编写 <code>app.py</code> 文件</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask
<span class="token keyword">from</span> redis <span class="token keyword">import</span> Redis

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
redis <span class="token operator">=</span> Redis<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&#39;redis&#39;</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">6379</span><span class="token punctuation">)</span>

<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    count <span class="token operator">=</span> redis<span class="token punctuation">.</span>incr<span class="token punctuation">(</span><span class="token string">&#39;hits&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Hello World! 该页面已被访问 {} 次。\\n&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&quot;0.0.0.0&quot;</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile</h3><p>编写 <code>Dockerfile</code> 文件，内容为</p><div class="language-docker line-numbers-mode" data-ext="docker"><pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> python:3.6-alpine</span>
<span class="token instruction"><span class="token keyword">ADD</span> . /code</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /code</span>
<span class="token instruction"><span class="token keyword">RUN</span> pip install redis flask</span>
<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">&quot;python&quot;</span>, <span class="token string">&quot;app.py&quot;</span>]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="docker-compose-yml" tabindex="-1"><a class="header-anchor" href="#docker-compose-yml" aria-hidden="true">#</a> docker-compose.yml</h3><p>编写 <code>docker-compose.yml</code> 文件，这个是 Compose 使用的主模板文件。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>

  <span class="token key atrule">web</span><span class="token punctuation">:</span>
    <span class="token key atrule">build</span><span class="token punctuation">:</span> .
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
     <span class="token punctuation">-</span> <span class="token string">&quot;5000:5000&quot;</span>

  <span class="token key atrule">redis</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">&quot;redis:alpine&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行-compose-项目" tabindex="-1"><a class="header-anchor" href="#运行-compose-项目" aria-hidden="true">#</a> 运行 compose 项目</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker-compose</span> up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时访问本地 <code>5000</code> 端口，每次刷新页面，计数就会加 1。</p><h2 id="四、命令" tabindex="-1"><a class="header-anchor" href="#四、命令" aria-hidden="true">#</a> 四、命令</h2>`,14),b=n("p",null,"🔔 请参考：",-1),_={href:"https://docs.docker.com/compose/reference/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://yeasy.gitbooks.io/docker_practice/content/compose/commands.html",target:"_blank",rel:"noopener noreferrer"},g=n("h2",{id:"五、模板文件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#五、模板文件","aria-hidden":"true"},"#"),s(" 五、模板文件")],-1),y=n("blockquote",null,[n("p",null,[n("code",null,"docker-compose.yml"),s(" 文件是 Docker Compose 的模板文件，其作用类似于 Dockerfile 和 Docker。")])],-1),x={href:"https://docs.docker.com/compose/env-file/",target:"_blank",rel:"noopener noreferrer"},D=n("h2",{id:"参考资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),s(" 参考资料")],-1),w=n("strong",null,"官方",-1),C={href:"https://github.com/docker/compose",target:"_blank",rel:"noopener noreferrer"},q={href:"https://docs.docker.com/compose/",target:"_blank",rel:"noopener noreferrer"},L=n("strong",null,"教程",-1),R={href:"https://yeasy.gitbooks.io/docker_practice/content/compose/",target:"_blank",rel:"noopener noreferrer"};function N(W,I){const e=c("ExternalLinkIcon");return p(),l("div",null,[i,n("blockquote",null,[n("p",null,[n("a",d,[s("compose"),a(e)]),s(" 项目是 Docker 官方的开源项目，负责实现对 Docker 容器集群的快速编排。从功能上看，跟 "),u,s(" 中的 "),k,s(" 十分类似。")])]),m,n("blockquote",null,[n("p",null,[s("🔔 详情请参考："),n("a",h,[s("Install Docker Compose"),a(e)])])]),v,n("blockquote",null,[b,n("ul",null,[n("li",null,[n("a",_,[s("Compose 官方命令说明文档"),a(e)])]),n("li",null,[n("a",f,[s("Compose 命令说明中文文档"),a(e)])])])]),g,y,n("p",null,[n("a",x,[s("docker-compose.yml 支持的默认环境变量官方文档"),a(e)])]),D,n("ul",null,[n("li",null,[w,n("ul",null,[n("li",null,[n("a",C,[s("Docker Compose Github"),a(e)])]),n("li",null,[n("a",q,[s("Docker Compose 官方文档"),a(e)])])])]),n("li",null,[L,n("ul",null,[n("li",null,[n("a",R,[s("Docker — 从入门到实践 - Docker Compose 项目"),a(e)])])])])])])}const B=t(r,[["render",N],["__file","index.html.vue"]]);export{B as default};
