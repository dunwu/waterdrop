const e=JSON.parse('{"key":"v-328b134c","path":"/pages/9fda1b48/","title":"Java IO 之简介","lang":"zh-CN","frontmatter":{"title":"Java IO 之简介","date":"2020-11-21T16:36:40.000Z","order":1,"permalink":"/pages/9fda1b48/","category":["Java","JavaCore","IO"],"tag":["Java","JavaCore","IO"],"description":"Java IO 之简介 IO 即 Input/Output（输入和输出），指的是：计算机内存与外部设备之间拷贝数据的过程。由于 CPU 访问内存的速度远远高于外部设备，因此 CPU 是先把外部设备的数据读到内存里，然后再进行处理。 UNIX I/O 模型 UNIX 系统下的 I/O 模型有 5 种： 同步阻塞 I/O 同步非阻塞 I/O I/O 多路复用 信号驱动 I/O 异步 I/O","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/9fda1b48/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Java IO 之简介"}],["meta",{"property":"og:description","content":"Java IO 之简介 IO 即 Input/Output（输入和输出），指的是：计算机内存与外部设备之间拷贝数据的过程。由于 CPU 访问内存的速度远远高于外部设备，因此 CPU 是先把外部设备的数据读到内存里，然后再进行处理。 UNIX I/O 模型 UNIX 系统下的 I/O 模型有 5 种： 同步阻塞 I/O 同步非阻塞 I/O I/O 多路复用 信号驱动 I/O 异步 I/O"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-14T13:48:12.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JavaCore"}],["meta",{"property":"article:tag","content":"IO"}],["meta",{"property":"article:published_time","content":"2020-11-21T16:36:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-14T13:48:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java IO 之简介\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-11-21T16:36:40.000Z\\",\\"dateModified\\":\\"2025-09-14T13:48:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"UNIX I/O 模型","slug":"unix-i-o-模型","link":"#unix-i-o-模型","children":[{"level":3,"title":"同步阻塞 I/O","slug":"同步阻塞-i-o","link":"#同步阻塞-i-o","children":[]},{"level":3,"title":"同步非阻塞 I/O","slug":"同步非阻塞-i-o","link":"#同步非阻塞-i-o","children":[]},{"level":3,"title":"I/O 多路复用","slug":"i-o-多路复用","link":"#i-o-多路复用","children":[]},{"level":3,"title":"信号驱动 I/O","slug":"信号驱动-i-o","link":"#信号驱动-i-o","children":[]},{"level":3,"title":"异步 I/O","slug":"异步-i-o","link":"#异步-i-o","children":[]}]},{"level":2,"title":"Java IO 模型","slug":"java-io-模型","link":"#java-io-模型","children":[{"level":3,"title":"BIO（blocking IO）","slug":"bio-blocking-io","link":"#bio-blocking-io","children":[]},{"level":3,"title":"NIO（non-blocking IO）","slug":"nio-non-blocking-io","link":"#nio-non-blocking-io","children":[]},{"level":3,"title":"AIO（Asynchronous IO）","slug":"aio-asynchronous-io","link":"#aio-asynchronous-io","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757857692000,"updatedTime":1757857692000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":6.68,"words":2004},"filePathRelative":"01.Java/01.JavaCore/IO/Java_IO_简介.md","localizedDate":"2020年11月21日","excerpt":"<h1> Java IO 之简介</h1>\\n<p>IO 即 <code>Input/Output</code>（输入和输出），指的是：<strong>计算机内存与外部设备之间拷贝数据的过程</strong>。由于 CPU 访问内存的速度远远高于外部设备，因此 CPU 是先把外部设备的数据读到内存里，然后再进行处理。</p>\\n<h2> UNIX I/O 模型</h2>\\n<p>UNIX 系统下的 I/O 模型有 5 种：</p>\\n<ul>\\n<li>同步阻塞 I/O</li>\\n<li>同步非阻塞 I/O</li>\\n<li>I/O 多路复用</li>\\n<li>信号驱动 I/O</li>\\n<li>异步 I/O</li>\\n</ul>","autoDesc":true}');export{e as data};
