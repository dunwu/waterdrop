const t=JSON.parse('{"key":"v-4feddc22","path":"/pages/e9e0fd6b/","title":"B+树","lang":"zh-CN","frontmatter":{"title":"B+树","date":"2022-03-13T22:37:27.000Z","order":3,"permalink":"/pages/e9e0fd6b/","category":["数据结构和算法","树"],"tag":["数据结构","树","二叉树","B+ 树"],"description":"B+树 什么是 B+树 B+树是在二叉查找树的基础上进行了改造：树中的节点并不存储数据本身，而是只是作为索引。每个叶子节点串在一条链表上，链表中的数据是从小到大有序的。 img 改造之后，如果我们要求某个区间的数据。我们只需要拿区间的起始值，在树中进行查找，当查找到某个叶子节点之后，我们再顺着链表往后遍历，直到链表中的结点数据值大于区间的终止值为止。所有遍历到的数据，就是符合区间值的所有数据。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/e9e0fd6b/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"B+树"}],["meta",{"property":"og:description","content":"B+树 什么是 B+树 B+树是在二叉查找树的基础上进行了改造：树中的节点并不存储数据本身，而是只是作为索引。每个叶子节点串在一条链表上，链表中的数据是从小到大有序的。 img 改造之后，如果我们要求某个区间的数据。我们只需要拿区间的起始值，在树中进行查找，当查找到某个叶子节点之后，我们再顺着链表往后遍历，直到链表中的结点数据值大于区间的终止值为止。所有遍历到的数据，就是符合区间值的所有数据。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-10T14:20:20.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:tag","content":"树"}],["meta",{"property":"article:tag","content":"二叉树"}],["meta",{"property":"article:tag","content":"B+ 树"}],["meta",{"property":"article:published_time","content":"2022-03-13T22:37:27.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-10T14:20:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"B+树\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-13T22:37:27.000Z\\",\\"dateModified\\":\\"2025-03-10T14:20:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"什么是 B+树","slug":"什么是-b-树","link":"#什么是-b-树","children":[]},{"level":2,"title":"为什么需要 B+树","slug":"为什么需要-b-树","link":"#为什么需要-b-树","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1741616420000,"updatedTime":1741616420000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":4.65,"words":1394},"filePathRelative":"11.数据结构和算法/B+树.md","localizedDate":"2022年3月13日","excerpt":"<h1> B+树</h1>\\n<h2> 什么是 B+树</h2>\\n<p>B+树是在二叉查找树的基础上进行了改造：树中的节点并不存储数据本身，而是只是作为索引。每个叶子节点串在一条链表上，链表中的数据是从小到大有序的。</p>\\n<figure><img src=\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20220311092926.jpg\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>img</figcaption></figure>\\n<p>改造之后，如果我们要求某个区间的数据。我们只需要拿区间的起始值，在树中进行查找，当查找到某个叶子节点之后，我们再顺着链表往后遍历，直到链表中的结点数据值大于区间的终止值为止。所有遍历到的数据，就是符合区间值的所有数据。</p>","autoDesc":true}');export{t as data};
