const a=JSON.parse('{"key":"v-3151623e","path":"/pages/deea6eca/","title":"Java 并发","lang":"zh-CN","frontmatter":{"title":"Java 并发","date":"2020-06-04T13:51:01.000Z","permalink":"/pages/deea6eca/","hidden":true,"index":false,"dir":{"order":5,"link":true},"category":["Java","JavaCore","并发"],"tag":["Java","JavaCore","并发"],"description":"Java 并发 Java 并发总结、整理 Java 并发编程相关知识点。 并发编程并非 Java 语言所独有，而是一种成熟的编程范式，Java 只是用自己的方式实现了并发工作模型。学习 Java 并发编程，应该先熟悉并发的基本概念，然后进一步了解并发的特性以及其特性所面临的问题。掌握了这些，当学习 Java 并发工具时，才会明白它们各自是为了解决什么问题，为什么要这样设计。通过这样由点到面的学习方式，更容易融会贯通，将并发知识形成体系化。 📖 内容 Java 并发简介 - 关键词：并发、线程、安全性、活跃性、性能、死锁、活锁 Java 并发之内存模型 - 关键词：JMM、Happens-Before、内存屏障、volatile、synchronized、final、指令重排序 Java 并发之线程 - 关键词：Thread、Runnable、Callable、Future、FutureTask、线程生命周期 Java 并发之锁 - 关键词：锁、Lock、Condition、ReentrantLock、ReentrantReadWriteLock、StampedLock Java 并发之无锁 - 关键词：CAS、ThreadLocal、Immutability、Copy-on-Write Java 并发之 AQS - 关键词：AQS、独占锁、共享锁 Java 并发之容器 - 关键词：ConcurrentHashMap、CopyOnWriteArrayList Java 并发之线程池 - 关键词：Executor、ExecutorService、ThreadPoolExecutor、Executors Java 并发之同步工具 - 关键词：Semaphore、CountDownLatch、CyclicBarrier Java 并发之分工工具 - 关键词：FutureTask、CompletableFuture、CompletionStage、CompletionService、ForkJoinPool","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/deea6eca/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Java 并发"}],["meta",{"property":"og:description","content":"Java 并发 Java 并发总结、整理 Java 并发编程相关知识点。 并发编程并非 Java 语言所独有，而是一种成熟的编程范式，Java 只是用自己的方式实现了并发工作模型。学习 Java 并发编程，应该先熟悉并发的基本概念，然后进一步了解并发的特性以及其特性所面临的问题。掌握了这些，当学习 Java 并发工具时，才会明白它们各自是为了解决什么问题，为什么要这样设计。通过这样由点到面的学习方式，更容易融会贯通，将并发知识形成体系化。 📖 内容 Java 并发简介 - 关键词：并发、线程、安全性、活跃性、性能、死锁、活锁 Java 并发之内存模型 - 关键词：JMM、Happens-Before、内存屏障、volatile、synchronized、final、指令重排序 Java 并发之线程 - 关键词：Thread、Runnable、Callable、Future、FutureTask、线程生命周期 Java 并发之锁 - 关键词：锁、Lock、Condition、ReentrantLock、ReentrantReadWriteLock、StampedLock Java 并发之无锁 - 关键词：CAS、ThreadLocal、Immutability、Copy-on-Write Java 并发之 AQS - 关键词：AQS、独占锁、共享锁 Java 并发之容器 - 关键词：ConcurrentHashMap、CopyOnWriteArrayList Java 并发之线程池 - 关键词：Executor、ExecutorService、ThreadPoolExecutor、Executors Java 并发之同步工具 - 关键词：Semaphore、CountDownLatch、CyclicBarrier Java 并发之分工工具 - 关键词：FutureTask、CompletableFuture、CompletionStage、CompletionService、ForkJoinPool"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-13T09:46:18.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JavaCore"}],["meta",{"property":"article:tag","content":"并发"}],["meta",{"property":"article:published_time","content":"2020-06-04T13:51:01.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-13T09:46:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 并发\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-04T13:51:01.000Z\\",\\"dateModified\\":\\"2025-09-13T09:46:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"📖 内容","slug":"📖-内容","link":"#📖-内容","children":[]},{"level":2,"title":"📚 资料","slug":"📚-资料","link":"#📚-资料","children":[]},{"level":2,"title":"🚪 传送","slug":"🚪-传送","link":"#🚪-传送","children":[]}],"git":{"createdTime":1719355973000,"updatedTime":1757756778000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":13}]},"readingTime":{"minutes":1.88,"words":563},"filePathRelative":"01.Java/01.JavaCore/05.并发/README.md","localizedDate":"2020年6月4日","excerpt":"<h1> Java 并发</h1>\\n<blockquote>\\n<p>Java 并发总结、整理 Java 并发编程相关知识点。</p>\\n<p>并发编程并非 Java 语言所独有，而是一种成熟的编程范式，Java 只是用自己的方式实现了并发工作模型。学习 Java 并发编程，应该先熟悉并发的基本概念，然后进一步了解并发的特性以及其特性所面临的问题。掌握了这些，当学习 Java 并发工具时，才会明白它们各自是为了解决什么问题，为什么要这样设计。通过这样由点到面的学习方式，更容易融会贯通，将并发知识形成体系化。</p>\\n</blockquote>\\n<h2> 📖 内容</h2>\\n<ul>\\n<li><a href=\\"/waterdrop/01.Java/01.JavaCore/05.%E5%B9%B6%E5%8F%91/Java_%E5%B9%B6%E5%8F%91_%E7%AE%80%E4%BB%8B.html\\" target=\\"blank\\">Java 并发简介</a> - 关键词：并发、线程、安全性、活跃性、性能、死锁、活锁</li>\\n<li><a href=\\"/waterdrop/01.Java/01.JavaCore/05.%E5%B9%B6%E5%8F%91/Java_%E5%B9%B6%E5%8F%91_%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.html\\" target=\\"blank\\">Java 并发之内存模型</a> - 关键词：JMM、Happens-Before、内存屏障、volatile、synchronized、final、指令重排序</li>\\n<li><a href=\\"/waterdrop/01.Java/01.JavaCore/05.%E5%B9%B6%E5%8F%91/Java_%E5%B9%B6%E5%8F%91_%E7%BA%BF%E7%A8%8B.html\\" target=\\"blank\\">Java 并发之线程</a> - 关键词：Thread、Runnable、Callable、Future、FutureTask、线程生命周期</li>\\n<li><a href=\\"/waterdrop/01.Java/01.JavaCore/05.%E5%B9%B6%E5%8F%91/Java_%E5%B9%B6%E5%8F%91_%E9%94%81.html\\" target=\\"blank\\">Java 并发之锁</a> - 关键词：锁、Lock、Condition、ReentrantLock、ReentrantReadWriteLock、StampedLock</li>\\n<li><a href=\\"/waterdrop/01.Java/01.JavaCore/05.%E5%B9%B6%E5%8F%91/Java_%E5%B9%B6%E5%8F%91_%E6%97%A0%E9%94%81.html\\" target=\\"blank\\">Java 并发之无锁</a> - 关键词：CAS、ThreadLocal、Immutability、Copy-on-Write</li>\\n<li><a href=\\"/waterdrop/01.Java/01.JavaCore/05.%E5%B9%B6%E5%8F%91/Java_%E5%B9%B6%E5%8F%91_AQS.html\\" target=\\"blank\\">Java 并发之 AQS</a> - 关键词：AQS、独占锁、共享锁</li>\\n<li><a href=\\"/waterdrop/01.Java/01.JavaCore/05.%E5%B9%B6%E5%8F%91/Java_%E5%B9%B6%E5%8F%91_%E5%AE%B9%E5%99%A8.html\\" target=\\"blank\\">Java 并发之容器</a> - 关键词：ConcurrentHashMap、CopyOnWriteArrayList</li>\\n<li><a href=\\"/waterdrop/01.Java/01.JavaCore/05.%E5%B9%B6%E5%8F%91/Java_%E5%B9%B6%E5%8F%91_%E7%BA%BF%E7%A8%8B%E6%B1%A0.html\\" target=\\"blank\\">Java 并发之线程池</a> - 关键词：Executor、ExecutorService、ThreadPoolExecutor、Executors</li>\\n<li><a href=\\"/waterdrop/01.Java/01.JavaCore/05.%E5%B9%B6%E5%8F%91/Java_%E5%B9%B6%E5%8F%91_%E5%90%8C%E6%AD%A5%E5%B7%A5%E5%85%B7.html\\" target=\\"blank\\">Java 并发之同步工具</a> - 关键词：Semaphore、CountDownLatch、CyclicBarrier</li>\\n<li><a href=\\"/waterdrop/01.Java/01.JavaCore/05.%E5%B9%B6%E5%8F%91/Java_%E5%B9%B6%E5%8F%91_%E5%88%86%E5%B7%A5%E5%B7%A5%E5%85%B7.html\\" target=\\"blank\\">Java 并发之分工工具</a> - 关键词：FutureTask、CompletableFuture、CompletionStage、CompletionService、ForkJoinPool</li>\\n</ul>","autoDesc":true}');export{a as data};
