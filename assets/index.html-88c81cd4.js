import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as i,c,f as o,a as e,d as r,b as t,e as s}from"./app-f29527f5.js";const h={},d=e("h1",{id:"elasticsearch-简介",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#elasticsearch-简介","aria-hidden":"true"},"#"),t(" Elasticsearch 简介")],-1),u=e("div",{class:"hint-container info"},[e("p",{class:"hint-container-title"},"概述"),e("p",null,"Elasticsearch 是一个基于 Lucene 的搜索和数据分析工具，它提供了一个分布式服务。Elasticsearch 是遵从 Apache 开源条款的一款开源产品，是当前主流的企业级搜索引擎。"),e("p",null,"本文简单介绍了 Elasticsearch 的功能、特性、简史、概念，可以让读者在短时间内对于 Elasticsearch 有一个初步的认识。")],-1),g=e("h2",{id:"什么是-elasticsearch",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#什么是-elasticsearch","aria-hidden":"true"},"#"),t(" 什么是 Elasticsearch？")],-1),p=e("figure",null,[e("img",{src:"https://raw.githubusercontent.com/dunwu/images/master/snap/202411241734774.png",alt:"Elasticsearch",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Elasticsearch")],-1),_={href:"https://github.com/elastic/elasticsearch",target:"_blank",rel:"noopener noreferrer"},f=e("strong",null,"Elasticsearch",-1),E=e("strong",null,"搜索和分析引擎",-1),m={href:"https://github.com/elastic/elasticsearch",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/apache/lucene-solr",target:"_blank",rel:"noopener noreferrer"},w=s(`<p>Elasticsearch 是<strong>面向文档</strong>的，它将复杂数据结构序列化为 <strong>JSON</strong> 形式存储。</p><p>Elasticsearch 提供<strong>近实时</strong>（Near Realtime，缩写 NRT）的<strong>全文搜索</strong>。近实时是指：</p><ul><li>从写入数据到数据可以被搜索，存在较小的延迟（大概是 1s）。</li><li>基于 Elasticsearch 执行搜索和分析可以达到秒级。</li></ul><h2 id="为什么使用-elasticsearch" tabindex="-1"><a class="header-anchor" href="#为什么使用-elasticsearch" aria-hidden="true">#</a> 为什么使用 Elasticsearch？</h2><p>Elasticsearch 是基于 Lucene 的，那么为什么不是直接使用 Lucene 呢？</p><p>Lucene 可以说是当下最先进、高性能、全功能的搜索引擎库。</p><p>但是，Lucene 仅仅只是一个库。为了充分发挥其功能，需要使用 Java 并将 Lucene 直接集成到应用程序中。 Lucene 非常复杂，了解其工作原理并不容易。</p><p>Elasticsearch 也是使用 Java 编写的，它的内部使用 Lucene 做索引与搜索，但是它的目的是使全文检索变得简单，<strong>通过隐藏 Lucene 的复杂性，取而代之的提供一套简单一致的 RESTful API</strong>。</p><p>然而，Elasticsearch 不仅仅是 Lucene，并且也不仅仅只是一个全文搜索引擎。 它可以被下面这样准确的形容：</p><ul><li>一个分布式的实时文档数据库，每个字段可以被索引与搜索。</li><li>一个分布式实时分析搜索引擎。</li><li>支持扩展为上百个服务节点的集群，并支持 PB 级别的半结构化数据。</li></ul><h2 id="elasticsearch-有哪些应用场景" tabindex="-1"><a class="header-anchor" href="#elasticsearch-有哪些应用场景" aria-hidden="true">#</a> Elasticsearch 有哪些应用场景？</h2><p>Elasticsearch 的主要功能如下：</p><ul><li><strong>海量数据的分布式存储及集群管理</strong></li><li><strong>提供丰富的近实时搜索能力</strong></li><li><strong>海量数据的近实时分析（聚合）</strong></li></ul><p>Elasticsearch 被广泛应用于以下场景：</p><ul><li><strong>搜索</strong><ul><li><strong>全文检索</strong> - Elasticsearch 通过快速搜索大型数据集，使复杂的搜索查询变得更加容易。它对于需要即时和相关搜索结果的网站、应用程序或企业特别有用。</li><li><strong>自动补全和拼写纠正</strong> - 可以在用户输入内容时，实时提供自动补全和拼写纠正，以增加用户体验并提高搜索效率。</li><li><strong>地理空间搜索</strong> - 使用地理空间查询搜索位置并计算空间关系。</li></ul></li><li><strong>可观测性</strong><ul><li><strong>日志、指标和链路追踪</strong> - 收集、存储和分析来自应用程序、系统和服务的日志、指标和追踪。</li><li><strong>性能监控</strong> - 监控和分析业务关键性能指标。</li><li><strong>OpenTelemetry</strong> - 使用 OpenTelemetry 标准，将遥测数据采集到 Elastic Stack。</li></ul></li></ul><h2 id="elasticsearch-简史" tabindex="-1"><a class="header-anchor" href="#elasticsearch-简史" aria-hidden="true">#</a> Elasticsearch 简史</h2><p>Elasticsearch 里程碑版本：</p><ul><li>1.0（2014 年）</li><li>5.0（2016 年） <ul><li>Lucene 6.x</li><li>默认打分机制从 TD-IDF 改为 BM25</li><li>增加 Keyword 类型</li></ul></li><li>6.0（2017 年） <ul><li>Lucene 7.x</li><li>跨集群复制</li><li>索引生命周期管理</li><li>SQL 的支持</li></ul></li><li>7.0（2019 年） <ul><li>Lucene 8.0</li><li>移除 Type</li><li>ECK （用于支持 K8S）</li><li>集群协调</li><li>High Level Rest Client</li><li>Script Score 查询</li></ul></li><li>8.0（2022 年） <ul><li>Lucene 9.0</li><li>向量搜索</li><li>支持 OpenTelemetry</li></ul></li></ul><h2 id="elasticsearch-概念" tabindex="-1"><a class="header-anchor" href="#elasticsearch-概念" aria-hidden="true">#</a> Elasticsearch 概念</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>index -&gt; type -&gt; mapping -&gt; document -&gt; field
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Elasticsearch 集群的核心概念如下：</p><ul><li><strong>Cluster（集群）</strong> - <strong>由多个协同工作的 ES 实例组合成的集合称为集群</strong>。集群架构使得 ES 具备了高可用性和可扩展性。</li><li><strong>Node（节点）</strong> - <strong>单个 ES 服务实例称为 Node，本质上就是一个 Java 进程</strong>。每个节点都有各自的名字，默认是随机分配的，也可以通过 <code>node.name</code> 指定。</li><li><strong>Shard（分片）</strong> - 当单台机器不足以存储大量数据时，Elasticsearch 可以将一个索引中的数据切分为多个 <strong><code>分片（shard）</code></strong> 。 <strong><code>分片（shard）</code></strong> 分布在多台服务器上存储。有了 shard 就可以横向扩展，存储更多数据，让搜索和分析等操作分布到多台服务器上去执行，提升吞吐量和性能。每个 shard 都是一个 lucene index。</li><li><strong>Replica（副本）</strong> - 任何一个服务器随时可能故障或宕机，此时 shard 可能就会丢失，因此可以为每个 shard 创建多个 <strong><code>副本（replica）</code></strong>。replica 可以在 shard 故障时提供备用服务，保证数据不丢失，多个 replica 还可以提升搜索操作的吞吐量和性能。primary shard（建立索引时一次设置，不能修改，默认 5 个），replica shard（随时修改数量，默认 1 个），默认每个索引 10 个 shard，5 个 primary shard，5 个 replica shard，最小的高可用配置，是 2 台服务器。</li></ul><p>Elasticsearch 数据的核心概念如下：</p>`,23),x=e("li",null,[e("strong",null,"Index（索引）"),t(" - 在 ES 中，"),e("strong",null,"可以将索引视为文档（document）的集合"),t("。 "),e("ul",null,[e("li",null,"ES 会为所有字段建立索引，经过处理后写入一个倒排索引（Inverted Index）。查找数据的时候，直接查找该索引。"),e("li",null,"所以，ES 数据管理的顶层单位就叫做 Index（索引）。它是单个数据库的同义词。每个 Index （即数据库）的名字必须是小写。")])],-1),k=e("strong",null,"Type（类型）",-1),S=e("code",null,"类型（type）",-1),L=e("code",null,"id",-1),y={href:"https://www.elastic.co/guide/en/Elasticsearch/guide/current/mapping.html",target:"_blank",rel:"noopener noreferrer"},I=e("code",null,"products",-1),v=e("code",null,"logs",-1),T=e("li",null,"注意：ES 7.x 版已彻底移除 Type。",-1),N=e("li",null,[e("strong",null,"Document（文档）"),t(" - Index 里面单条的记录称为 Document。文档是一组字段。每个文档都有一个唯一的 ID。")],-1),K=e("li",null,[e("strong",null,"Field（字段）"),t(" - 包含数据的键值对。默认情况下，Elasticsearch 对每个字段中的所有数据建立索引，并且每个索引字段都具有专用的优化数据结构。")],-1),B={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-fields.html",target:"_blank",rel:"noopener noreferrer"},D=e("strong",null,"Metadata Field（元数据字段）",-1),J=e("code",null,"_",-1),R={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-index-field.html",target:"_blank",rel:"noopener noreferrer"},A=e("code",null,"_index",-1),C={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html",target:"_blank",rel:"noopener noreferrer"},O=e("code",null,"_id",-1),P={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-source-field.html",target:"_blank",rel:"noopener noreferrer"},V=e("code",null,"_source",-1),z=s('<p>ES 核心概念 vs. DB 核心概念：</p><table><thead><tr><th>ES</th><th>DB</th></tr></thead><tbody><tr><td>索引（index）</td><td>数据库（database）</td></tr><tr><td>类型（type，6.0 废弃，7.0 移除）</td><td>数据表（table）</td></tr><tr><td>文档（docuemnt）</td><td>行（row）</td></tr><tr><td>字符（field）</td><td>列（column）</td></tr><tr><td>映射（mapping）</td><td>表结构（schema）</td></tr></tbody></table><h2 id="elastic-stack" tabindex="-1"><a class="header-anchor" href="#elastic-stack" aria-hidden="true">#</a> Elastic Stack</h2><p>Elastic Stack 通常被用来作为日志采集、检索、可视化的解决方案。</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/202411231210104.png" alt="ELK" tabindex="0" loading="lazy"><figcaption>ELK</figcaption></figure>',5),F={href:"https://www.elastic.co/elasticsearch",target:"_blank",rel:"noopener noreferrer"},M={href:"https://www.elastic.co/products/logstash",target:"_blank",rel:"noopener noreferrer"},H={href:"https://www.elastic.co/kibana",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://www.elastic.co/elasticsearch",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.elastic.co/logstash",target:"_blank",rel:"noopener noreferrer"},q={href:"https://www.elastic.co/kibana",target:"_blank",rel:"noopener noreferrer"},G={href:"https://www.elastic.co/beats",target:"_blank",rel:"noopener noreferrer"},U=e("p",null,"此外，基于 Elastic Stack，其技术生态还可以和一些主流的分布式中间件进行集成，以应对各种不同的场景。",-1),W=e("figure",null,[e("img",{src:"https://raw.githubusercontent.com/dunwu/images/master/snap/202411231211496.png",alt:"Elastic Stack",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Elastic Stack")],-1),X=e("h2",{id:"参考资料",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),t(" 参考资料")],-1),Y={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/elasticsearch-intro.html",target:"_blank",rel:"noopener noreferrer"};function Z($,ee){const l=n("ExternalLinkIcon");return i(),c("div",null,[d,u,o(" more "),g,p,e("p",null,[e("a",_,[f,r(l)]),t(" 是一个开源的分布式"),E,t("。")]),e("p",null,[e("a",m,[t("Elasticsearch"),r(l)]),t(),e("strong",null,[t("基于搜索库 "),e("a",b,[t("Lucene"),r(l)]),t(" 开发")]),t("。Elasticsearch 隐藏了 Lucene 的复杂性，提供了简单易用的 REST API / Java API 接口（另外还有其他语言的 API 接口）。")]),w,e("ul",null,[x,e("li",null,[k,t(" - 每个索引里可以有一个或者多个类型（type）。"),S,t(" 是 Index 的一个逻辑分类。 "),e("ul",null,[e("li",null,[t("不同的 Type 应该有相似的结构（schema），举例来说，"),L,t("字段不能在这个组是字符串，在另一个组是数值。这是与关系型数据库的表的 "),e("a",y,[t("一个区别"),r(l)]),t("。性质完全不同的数据（比如"),I,t("和"),v,t("）应该存成两个 Index，而不是一个 Index 里面的两个 Type（虽然可以做到）。")]),T])]),N,K,e("li",null,[e("a",B,[D,r(l)]),t(" - 存储有关文档的信息的系统字段。元数据字段都以 "),J,t(" 开头。常见元数据字段： "),e("ul",null,[e("li",null,[e("a",R,[A,r(l)]),t(" - 文档所属的索引")]),e("li",null,[e("a",C,[O,r(l)]),t(" - 文档的 ID")]),e("li",null,[e("a",P,[V,r(l)]),t(" - 表示文档原文的 JSON")])])])]),z,e("p",null,[t("Elastic Stack 也常被称为 ELK，这是 Elastic 公司旗下三款产品 "),e("a",F,[t("Elasticsearch"),r(l)]),t(" 、"),e("a",M,[t("Logstash"),r(l)]),t(" 、"),e("a",H,[t("Kibana"),r(l)]),t(" 的首字母组合。")]),e("ul",null,[e("li",null,[e("a",Q,[t("Elasticsearch"),r(l)]),t(" 负责存储数据，并提供对数据的检索和分析。")]),e("li",null,[e("a",j,[t("Logstash"),r(l)]),t(" 传输和处理你的日志、事务或其他数据。")]),e("li",null,[e("a",q,[t("Kibana"),r(l)]),t(" 将 Elasticsearch 的数据分析并渲染为可视化的报表。")])]),e("p",null,[t("Elastic Stack，在 ELK 的基础上扩展了一些新的产品。如："),e("a",G,[t("Beats"),r(l)]),t("，这是针对不同类型数据的轻量级采集器套件。")]),U,W,X,e("ul",null,[e("li",null,[e("a",Y,[t("Elasticsearch 官方文档之基础知识"),r(l)])])])])}const re=a(h,[["render",Z],["__file","index.html.vue"]]);export{re as default};
