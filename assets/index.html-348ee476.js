const e=JSON.parse('{"key":"v-0cda90a2","path":"/pages/05034104/","title":"系统伸缩性架构","lang":"zh-CN","frontmatter":{"title":"系统伸缩性架构","date":"2018-07-05T15:11:00.000Z","order":5,"permalink":"/pages/05034104/","category":["设计","架构","综合"],"tag":["架构","伸缩性"],"description":"系统伸缩性架构 伸缩性架构是指不需要改变系统的软硬件设计，仅通过改变部署服务器数量就可以扩大或缩小系统的服务处理能力。 系统架构的伸缩性设计 不同功能进行物理分离实现伸缩 纵向分离（分层后分离） - 将业务处理流程上的不同部分分离部署，实现系统伸缩性。 横向分离（业务分割后分离） - 将不同的业务模块分离部署，实现系统伸缩性。 单一功能通过集群规模实现伸缩","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/05034104/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"系统伸缩性架构"}],["meta",{"property":"og:description","content":"系统伸缩性架构 伸缩性架构是指不需要改变系统的软硬件设计，仅通过改变部署服务器数量就可以扩大或缩小系统的服务处理能力。 系统架构的伸缩性设计 不同功能进行物理分离实现伸缩 纵向分离（分层后分离） - 将业务处理流程上的不同部分分离部署，实现系统伸缩性。 横向分离（业务分割后分离） - 将不同的业务模块分离部署，实现系统伸缩性。 单一功能通过集群规模实现伸缩"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-15T00:29:21.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"架构"}],["meta",{"property":"article:tag","content":"伸缩性"}],["meta",{"property":"article:published_time","content":"2018-07-05T15:11:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-15T00:29:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"系统伸缩性架构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-07-05T15:11:00.000Z\\",\\"dateModified\\":\\"2025-09-15T00:29:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"系统架构的伸缩性设计","slug":"系统架构的伸缩性设计","link":"#系统架构的伸缩性设计","children":[{"level":3,"title":"不同功能进行物理分离实现伸缩","slug":"不同功能进行物理分离实现伸缩","link":"#不同功能进行物理分离实现伸缩","children":[]},{"level":3,"title":"单一功能通过集群规模实现伸缩","slug":"单一功能通过集群规模实现伸缩","link":"#单一功能通过集群规模实现伸缩","children":[]}]},{"level":2,"title":"应用服务器集群的伸缩性设计","slug":"应用服务器集群的伸缩性设计","link":"#应用服务器集群的伸缩性设计","children":[{"level":3,"title":"HTTP 重定向负载均衡","slug":"http-重定向负载均衡","link":"#http-重定向负载均衡","children":[]},{"level":3,"title":"DNS 域名解析负载均衡","slug":"dns-域名解析负载均衡","link":"#dns-域名解析负载均衡","children":[]},{"level":3,"title":"反向代理负载均衡","slug":"反向代理负载均衡","link":"#反向代理负载均衡","children":[]},{"level":3,"title":"IP 负载均衡","slug":"ip-负载均衡","link":"#ip-负载均衡","children":[]},{"level":3,"title":"数据链路层负载均衡","slug":"数据链路层负载均衡","link":"#数据链路层负载均衡","children":[]},{"level":3,"title":"负载均衡算法","slug":"负载均衡算法","link":"#负载均衡算法","children":[]}]},{"level":2,"title":"分布式缓存集群的伸缩性设计","slug":"分布式缓存集群的伸缩性设计","link":"#分布式缓存集群的伸缩性设计","children":[]},{"level":2,"title":"数据存储服务集群的伸缩性设计","slug":"数据存储服务集群的伸缩性设计","link":"#数据存储服务集群的伸缩性设计","children":[{"level":3,"title":"关系型数据库的伸缩性设计","slug":"关系型数据库的伸缩性设计","link":"#关系型数据库的伸缩性设计","children":[]},{"level":3,"title":"NoSql 数据库的伸缩性设计","slug":"nosql-数据库的伸缩性设计","link":"#nosql-数据库的伸缩性设计","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757896161000,"updatedTime":1757896161000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":7.14,"words":2143},"filePathRelative":"03.设计/架构/综合/系统伸缩性架构.md","localizedDate":"2018年7月5日","excerpt":"<h1> 系统伸缩性架构</h1>\\n<blockquote>\\n<p>伸缩性架构是指不需要改变系统的软硬件设计，仅通过改变部署服务器数量就可以扩大或缩小系统的服务处理能力。</p>\\n</blockquote>\\n<h2> 系统架构的伸缩性设计</h2>\\n<h3> 不同功能进行物理分离实现伸缩</h3>\\n<ul>\\n<li><strong>纵向分离（分层后分离）</strong> - 将业务处理流程上的不同部分分离部署，实现系统伸缩性。</li>\\n<li><strong>横向分离（业务分割后分离）</strong> - 将不同的业务模块分离部署，实现系统伸缩性。</li>\\n</ul>\\n<h3> 单一功能通过集群规模实现伸缩</h3>","autoDesc":true}');export{e as data};
