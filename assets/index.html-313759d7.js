const e=JSON.parse('{"key":"v-6bc8f943","path":"/pages/49aa0157/","title":"跳表","lang":"zh-CN","frontmatter":{"title":"跳表","date":"2020-10-23T09:21:13.000Z","order":4,"permalink":"/pages/49aa0157/","category":["算法"],"tag":["数据结构和算法","跳表"],"description":"跳表 什么是跳表 对于一个有序数组，可以使用高效的二分查找法，其时间复杂度为 O(log n)。 但是，即使是有序的链表，也只能使用低效的顺序查找，其时间复杂度为 O(n)。 img","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/49aa0157/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"跳表"}],["meta",{"property":"og:description","content":"跳表 什么是跳表 对于一个有序数组，可以使用高效的二分查找法，其时间复杂度为 O(log n)。 但是，即使是有序的链表，也只能使用低效的顺序查找，其时间复杂度为 O(n)。 img"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-13T15:15:47.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"数据结构和算法"}],["meta",{"property":"article:tag","content":"跳表"}],["meta",{"property":"article:published_time","content":"2020-10-23T09:21:13.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-13T15:15:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"跳表\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-10-23T09:21:13.000Z\\",\\"dateModified\\":\\"2025-09-13T15:15:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"什么是跳表","slug":"什么是跳表","link":"#什么是跳表","children":[{"level":3,"title":"跳表的时间复杂度","slug":"跳表的时间复杂度","link":"#跳表的时间复杂度","children":[]},{"level":3,"title":"跳表的空间复杂度","slug":"跳表的空间复杂度","link":"#跳表的空间复杂度","children":[]}]},{"level":2,"title":"跳表的操作","slug":"跳表的操作","link":"#跳表的操作","children":[{"level":3,"title":"高效的动态插入和删除","slug":"高效的动态插入和删除","link":"#高效的动态插入和删除","children":[]},{"level":3,"title":"跳表索引动态更新","slug":"跳表索引动态更新","link":"#跳表索引动态更新","children":[]}]},{"level":2,"title":"为什么需要跳表","slug":"为什么需要跳表","link":"#为什么需要跳表","children":[]},{"level":2,"title":"跳表的应用场景","slug":"跳表的应用场景","link":"#跳表的应用场景","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757776547000,"updatedTime":1757776547000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":5.79,"words":1736},"filePathRelative":"11.算法/跳表.md","localizedDate":"2020年10月23日","excerpt":"<h1> 跳表</h1>\\n<h2> 什么是跳表</h2>\\n<p>对于一个有序数组，可以使用高效的二分查找法，其时间复杂度为 <code>O(log n)</code>。</p>\\n<p>但是，即使是有序的链表，也只能使用低效的顺序查找，其时间复杂度为 <code>O(n)</code>。</p>\\n<figure><img src=\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20220323113532.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>img</figcaption></figure>","autoDesc":true}');export{e as data};
