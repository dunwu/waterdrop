const e=JSON.parse('{"key":"v-1aa3d464","path":"/pages/53415678/","title":"大型系统核心技术","lang":"zh-CN","frontmatter":{"title":"大型系统核心技术","date":"2018-07-09T00:00:00.000Z","order":"08","permalink":"/pages/53415678/","category":["设计","架构","综合"],"tag":["架构","分布式"],"description":"大型系统核心技术 大型系统的设计目标就是为了快速、高效、稳定的处理海量的数据以及高并发的请求。 单机服务受限于硬件，客观存在着资源瓶颈，难以应对不断增长的数据量和请求量，为了打破瓶颈，大型系统基本上都被设计为分布式系统。 分布式系统由于其面临的共性问题，在很多场景下的解决方案往往也存在着共性。因此，我们会发现，很多优秀的大型系统在设计方案上存在着很多的共同点。 本文主要讨论应对分布式系统共性问题的解决方案，这既可以加深对分布式系统运作原理的理解，也可以作为设计大型分布式系统时的借鉴。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/53415678/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"大型系统核心技术"}],["meta",{"property":"og:description","content":"大型系统核心技术 大型系统的设计目标就是为了快速、高效、稳定的处理海量的数据以及高并发的请求。 单机服务受限于硬件，客观存在着资源瓶颈，难以应对不断增长的数据量和请求量，为了打破瓶颈，大型系统基本上都被设计为分布式系统。 分布式系统由于其面临的共性问题，在很多场景下的解决方案往往也存在着共性。因此，我们会发现，很多优秀的大型系统在设计方案上存在着很多的共同点。 本文主要讨论应对分布式系统共性问题的解决方案，这既可以加深对分布式系统运作原理的理解，也可以作为设计大型分布式系统时的借鉴。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-18T15:46:22.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"架构"}],["meta",{"property":"article:tag","content":"分布式"}],["meta",{"property":"article:published_time","content":"2018-07-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-18T15:46:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"大型系统核心技术\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-07-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-18T15:46:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"分布式事务","slug":"分布式事务","link":"#分布式事务","children":[]},{"level":2,"title":"分布式锁","slug":"分布式锁","link":"#分布式锁","children":[{"level":3,"title":"基于数据库实现分布式锁","slug":"基于数据库实现分布式锁","link":"#基于数据库实现分布式锁","children":[]},{"level":3,"title":"基于 Redis 实现分布式锁","slug":"基于-redis-实现分布式锁","link":"#基于-redis-实现分布式锁","children":[]},{"level":3,"title":"基于 ZooKeeper 实现分布式锁","slug":"基于-zookeeper-实现分布式锁","link":"#基于-zookeeper-实现分布式锁","children":[]}]},{"level":2,"title":"分布式 Session","slug":"分布式-session","link":"#分布式-session","children":[{"level":3,"title":"Sticky Sessions","slug":"sticky-sessions","link":"#sticky-sessions","children":[]},{"level":3,"title":"Session Replication","slug":"session-replication","link":"#session-replication","children":[]},{"level":3,"title":"Session Server","slug":"session-server","link":"#session-server","children":[]}]},{"level":2,"title":"分布式存储","slug":"分布式存储","link":"#分布式存储","children":[]},{"level":2,"title":"分布式缓存","slug":"分布式缓存","link":"#分布式缓存","children":[]},{"level":2,"title":"分布式计算","slug":"分布式计算","link":"#分布式计算","children":[]},{"level":2,"title":"负载均衡","slug":"负载均衡","link":"#负载均衡","children":[{"level":3,"title":"算法","slug":"算法","link":"#算法","children":[]},{"level":3,"title":"实现","slug":"实现-3","link":"#实现-3","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1654694926000,"updatedTime":1718725582000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":4}]},"readingTime":{"minutes":13.06,"words":3918},"filePathRelative":"03.设计/01.架构/00.综合/08.大型系统核心技术.md","localizedDate":"2018年7月9日","excerpt":"<h1> 大型系统核心技术</h1>\\n<blockquote>\\n<p>大型系统的设计目标就是为了快速、高效、稳定的处理海量的数据以及高并发的请求。</p>\\n<p>单机服务受限于硬件，客观存在着资源瓶颈，难以应对不断增长的数据量和请求量，为了打破瓶颈，大型系统基本上都被设计为分布式系统。</p>\\n<p>分布式系统由于其面临的共性问题，在很多场景下的解决方案往往也存在着共性。因此，我们会发现，很多优秀的大型系统在设计方案上存在着很多的共同点。</p>\\n<p>本文主要讨论应对分布式系统共性问题的解决方案，这既可以加深对分布式系统运作原理的理解，也可以作为设计大型分布式系统时的借鉴。</p>\\n</blockquote>","autoDesc":true}');export{e as data};
