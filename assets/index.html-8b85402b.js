const e=JSON.parse('{"key":"v-ea4857f6","path":"/pages/3a9971fd/","title":"DevOps 简介","lang":"zh-CN","frontmatter":{"title":"DevOps 简介","date":"2022-06-01T09:57:41.000Z","order":1,"permalink":"/pages/3a9971fd/","category":["DevOps","综合"],"tag":["DevOps"],"description":"DevOps 简介 什么是 DevOps 什么是 DevOps？DevOps 集文化理念、实践和工具于一身，它强调团队授权、跨团队沟通和协作以及技术自动化，其最终目标是优化质量和交付。 DevOps 理念，旨在打破开发工程师和运维工程师的壁垒，强调两个团队合而为一，在产品的整个生命周期（从开发、测试、部署再到运维、运营）内相互协作，工程师不再限于单一职能。 DevOps 始于 2007 年左右，当时的开发和运维对传统的软件开发模式提出了担忧：在这种模式下，编写代码的开发人员与负责部署的运维人员分开工作。 DevOps 一词是开发（development）和运维（operations）这两个词的组合，反映了将二者合而为一的过程。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/3a9971fd/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"DevOps 简介"}],["meta",{"property":"og:description","content":"DevOps 简介 什么是 DevOps 什么是 DevOps？DevOps 集文化理念、实践和工具于一身，它强调团队授权、跨团队沟通和协作以及技术自动化，其最终目标是优化质量和交付。 DevOps 理念，旨在打破开发工程师和运维工程师的壁垒，强调两个团队合而为一，在产品的整个生命周期（从开发、测试、部署再到运维、运营）内相互协作，工程师不再限于单一职能。 DevOps 始于 2007 年左右，当时的开发和运维对传统的软件开发模式提出了担忧：在这种模式下，编写代码的开发人员与负责部署的运维人员分开工作。 DevOps 一词是开发（development）和运维（operations）这两个词的组合，反映了将二者合而为一的过程。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-18T15:46:22.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"DevOps"}],["meta",{"property":"article:published_time","content":"2022-06-01T09:57:41.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-18T15:46:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DevOps 简介\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-06-01T09:57:41.000Z\\",\\"dateModified\\":\\"2024-06-18T15:46:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"什么是 DevOps","slug":"什么是-devops","link":"#什么是-devops","children":[{"level":3,"title":"DevOps 如何工作","slug":"devops-如何工作","link":"#devops-如何工作","children":[]},{"level":3,"title":"DevOps 的生命周期","slug":"devops-的生命周期","link":"#devops-的生命周期","children":[]},{"level":3,"title":"DevOps 的优势","slug":"devops-的优势","link":"#devops-的优势","children":[]}]},{"level":2,"title":"DevOps 工具","slug":"devops-工具","link":"#devops-工具","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1654089184000,"updatedTime":1718725582000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":5}]},"readingTime":{"minutes":7.11,"words":2134},"filePathRelative":"04.DevOps/00.综合/01.DevOps简介.md","localizedDate":"2022年6月1日","excerpt":"<h1> DevOps 简介</h1>\\n<h2> 什么是 DevOps</h2>\\n<p>什么是 DevOps？<strong>DevOps 集文化理念、实践和工具于一身，它强调团队授权、跨团队沟通和协作以及技术自动化，其最终目标是优化质量和交付</strong>。</p>\\n<p>DevOps 理念，旨在打破开发工程师和运维工程师的壁垒，强调两个团队合而为一，在产品的整个生命周期（从开发、测试、部署再到运维、运营）内相互协作，工程师不再限于单一职能。</p>\\n<p>DevOps 始于 2007 年左右，当时的开发和运维对传统的软件开发模式提出了担忧：在这种模式下，编写代码的开发人员与负责部署的运维人员分开工作。 DevOps 一词是开发（development）和运维（operations）这两个词的组合，反映了将二者合而为一的过程。</p>","autoDesc":true}');export{e as data};
