import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as r,f as l,a as n,b as e,d as s,e as o}from"./app-129c6ad1.js";const i={},d=o('<h1 id="mongodb-索引" tabindex="-1"><a class="header-anchor" href="#mongodb-索引" aria-hidden="true">#</a> MongoDB 索引</h1><div class="hint-container info"><p class="hint-container-title">概述</p><p>索引通常能够极大的提高查询的效率。如果<strong>没有索引</strong>，MongoDB 在读取数据时<strong>必须扫描 collection 中的每个 document</strong> 并选取那些符合查询条件的记录。这种扫描全集合的查询是非常低效的，特别是在处理大量的数据时。查询可能要花费几十秒甚至几分钟，这种性能开销是不可接受的。索引可提高查询性能，但<strong>添加索引会影响写入操作的性能</strong>。对于写入读取率高的集合，由于每次插入操作都必须同时更新所有索引，因此会带来较高的索引成本。</p><p>本文介绍了 MongoDB 的基本索引操作、索引类型，和设置索引的策略。掌握了 MongoDB 索引的要点，有助于提高访问 MongoDB 数据的效率。</p></div>',2),u=n("h2",{id:"索引简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#索引简介","aria-hidden":"true"},"#"),e(" 索引简介")],-1),h=n("p",null,[e("索引通常能够极大的提高查询的效率。如果"),n("strong",null,"没有索引"),e("，MongoDB 在读取数据时"),n("strong",null,"必须扫描 collection 中的每个 document"),e(" 并选取那些符合查询条件的记录。这种扫描全集合的查询是非常低效的，特别是在处理大量的数据时。查询可能要花费几十秒甚至几分钟，这种性能开销是不可接受的。索引可提高查询性能，但"),n("strong",null,"添加索引会影响写入操作的性能"),e("。对于写入读取率高的集合，由于每次插入操作都必须同时更新所有索引，因此会带来较高的索引成本。")],-1),k={href:"https://en.wikipedia.org/wiki/B-tree",target:"_blank",rel:"noopener noreferrer"},g=n("strong",null,"MongoDB 还可使用索引中的顺序来返回排序后的结果",-1),m=n("p",null,[n("strong",null,"MongoDB 在 collection 数据级别上定义索引"),e("。")],-1),_=n("figure",null,[n("img",{src:"https://raw.githubusercontent.com/dunwu/images/master/snap/20200921210621.svg",alt:"MongoDB 索引",tabindex:"0",loading:"lazy"}),n("figcaption",null,"MongoDB 索引")],-1),b=n("h3",{id:"默认索引",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#默认索引","aria-hidden":"true"},"#"),e(" 默认索引")],-1),f={href:"https://www.mongodb.com/zh-cn/docs/manual/core/index-unique/#std-label-index-type-unique",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"_id",-1),w={href:"https://www.mongodb.com/zh-cn/docs/manual/core/document/#std-label-document-id-field",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"_id",-1),y=n("code",null,"_id",-1),B=o(`<h2 id="索引操作" tabindex="-1"><a class="header-anchor" href="#索引操作" aria-hidden="true">#</a> 索引操作</h2><h3 id="创建索引" tabindex="-1"><a class="header-anchor" href="#创建索引" aria-hidden="true">#</a> 创建索引</h3><p><strong>MongoDB 使用 <code>createIndex()</code> 方法来创建索引</strong>。</p><p><code>createIndex()</code> 语法如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>collection<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token operator">&lt;</span>key and index type specification<span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">callback</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),z={href:"https://www.mongodb.com/zh-cn/docs/manual/core/indexes/create-index/",target:"_blank",rel:"noopener noreferrer"},M=n("h3",{id:"删除索引",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#删除索引","aria-hidden":"true"},"#"),e(" 删除索引")],-1),D=n("p",null,"MongoDB 提供了两个方法来删除索引：",-1),j={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/method/db.collection.dropIndex/#mongodb-method-db.collection.dropIndex",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"db.collection.dropIndex()",-1),I={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/method/db.collection.dropIndexes/#mongodb-method-db.collection.dropIndexes",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"db.collection.dropIndexes()",-1),V={href:"https://www.mongodb.com/zh-cn/docs/manual/core/indexes/drop-index/",target:"_blank",rel:"noopener noreferrer"},C=o('<h2 id="索引类型" tabindex="-1"><a class="header-anchor" href="#索引类型" aria-hidden="true">#</a> 索引类型</h2><p>MongoDB 支持多种类型的索引，适用于不同的场景。</p><h3 id="单字段索引" tabindex="-1"><a class="header-anchor" href="#单字段索引" aria-hidden="true">#</a> 单字段索引</h3><p>单个字段索引收集集合内每个文档中单个字段的数据，并对其排序。</p><p>下图显示了单个字段 <code>score</code> 上的一个索引：</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/202503052211281.svg" alt="单字段索引" tabindex="0" loading="lazy"><figcaption>单字段索引</figcaption></figure>',6),E={href:"https://www.mongodb.com/zh-cn/docs/manual/core/indexes/index-types/index-single/#std-label-indexes-single-field",target:"_blank",rel:"noopener noreferrer"},$=o('<h3 id="复合索引" tabindex="-1"><a class="header-anchor" href="#复合索引" aria-hidden="true">#</a> 复合索引</h3><p>复合索引从集合中每个文档的两个或多个字段收集数据并对其排序。数据先按索引中的第一个字段分组，再按每个后续字段分组。</p><p>例如，下图显示了一个复合索引，其中文档首先按 <code>userid</code> 分组并以升序（按字母顺序）排序。然后，每个 <code>userid</code> 的 <code>scores</code> 按降序排序：</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/202503052213721.svg" alt="复合索引" tabindex="0" loading="lazy"><figcaption>复合索引</figcaption></figure>',4),L={href:"https://www.mongodb.com/zh-cn/docs/manual/core/indexes/index-types/index-compound/#std-label-index-type-compound",target:"_blank",rel:"noopener noreferrer"},S=n("h3",{id:"多键索引",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#多键索引","aria-hidden":"true"},"#"),e(" 多键索引")],-1),A=n("p",null,"多键索引收集数组中存储的数据并进行排序。",-1),G=n("p",null,"无需显式指定多键类型。对包含数组值的字段创建索引时，MongoDB 会自动将该索引设为多键索引。",-1),R=n("p",null,[e("下图显示了 "),n("code",null,"addr.zip"),e(" 字段的多键索引：")],-1),T=n("figure",null,[n("img",{src:"https://raw.githubusercontent.com/dunwu/images/master/snap/202503052214522.svg",alt:"多键索引",tabindex:"0",loading:"lazy"}),n("figcaption",null,"多键索引")],-1),F={href:"https://www.mongodb.com/zh-cn/docs/manual/core/indexes/index-types/index-multikey/#std-label-index-type-multikey",target:"_blank",rel:"noopener noreferrer"},H=n("h3",{id:"文本索引",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#文本索引","aria-hidden":"true"},"#"),e(" 文本索引")],-1),J=n("p",null,"文本索引支持对包含字符串内容的字段进行文本搜索查询。",-1),K={href:"https://www.mongodb.com/zh-cn/docs/manual/core/indexes/index-types/index-text/#std-label-index-type-text",target:"_blank",rel:"noopener noreferrer"},O=n("h3",{id:"地理空间索引",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#地理空间索引","aria-hidden":"true"},"#"),e(" 地理空间索引")],-1),P=n("p",null,"地理空间索引可提高对地理空间坐标数据进行查询的性能。",-1),Q=n("p",null,"MongoDB 提供两种类型的地理空间索引：",-1),U={href:"https://www.mongodb.com/zh-cn/docs/manual/core/indexes/index-types/geospatial/2d/#std-label-2d-index",target:"_blank",rel:"noopener noreferrer"},W={href:"https://www.mongodb.com/zh-cn/docs/manual/core/indexes/index-types/geospatial/2dsphere/#std-label-2dsphere-index",target:"_blank",rel:"noopener noreferrer"},X={href:"https://www.mongodb.com/zh-cn/docs/manual/core/indexes/index-types/index-geospatial/#std-label-geospatial-index",target:"_blank",rel:"noopener noreferrer"},Y=n("h3",{id:"哈希索引",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#哈希索引","aria-hidden":"true"},"#"),e(" 哈希索引")],-1),Z={href:"https://www.mongodb.com/zh-cn/docs/manual/core/hashed-sharding/#std-label-sharding-hashed-sharding",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://www.mongodb.com/zh-cn/docs/manual/core/indexes/index-types/index-hashed/#std-label-index-type-hashed",target:"_blank",rel:"noopener noreferrer"},en=n("h2",{id:"索引策略",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#索引策略","aria-hidden":"true"},"#"),e(" 索引策略")],-1),an=n("p",null,"索引通常能够极大的提高查询的效率，但如果索引设置不合理，可能无法提升查询效率。创建索引时，需要考虑以下因素：",-1),sn=n("ul",null,[n("li",null,[n("strong",null,"查询频率"),e(" - 优先考虑那些经常用于查询的字段。")]),n("li",null,[n("strong",null,"选择性"),e(" - 选择性是指查询使用索引缩小结果范围的能力。为确保选择性，编写查询时应限制索引字段或字段可能包含的文档数。根据索引数据编写具有适当选择性的查询。")]),n("li",null,[n("strong",null,"索引大小"),e(" - 索引的大小会影响数据库的内存占用和查询性能。")])],-1),on={href:"https://www.mongodb.com/docs/manual/core/indexes/index-types/index-compound/#std-label-index-type-compound",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://www.mongodb.com/zh-cn/docs/manual/core/indexes/index-types/index-compound/#std-label-index-type-compound",target:"_blank",rel:"noopener noreferrer"},pn=o(`<h3 id="相等" tabindex="-1"><a class="header-anchor" href="#相等" aria-hidden="true">#</a> 相等</h3><p>“<strong>相等</strong>”指单个值的精确匹配。索引搜索可高效利用精确匹配来限制完成某一查询而需检查的文档数。相等匹配的索引键可以按任何顺序显示。但是，为了满足与索引的相等匹配，完全匹配的所有索引键必须位于任何其他索引字段之前。<strong>MongoDB 无需按特定顺序排列完全匹配字段</strong>。</p><p>【示例】相等匹配查询</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>cars<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">model</span><span class="token operator">:</span> <span class="token string">&#39;Cordoba&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>cars<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">model</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$eq</span><span class="token operator">:</span> <span class="token string">&#39;Cordoba&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="排序" tabindex="-1"><a class="header-anchor" href="#排序" aria-hidden="true">#</a> 排序</h3><p>当查询字段是索引键的子集时，索引可以支持排序操作。仅当查询包含排序键之前的所有前缀键的相等条件时，才支持对索引键子集进行排序操作。</p><p>【示例】利用索引优化排序查询</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 按 model 进行排序</span>
db<span class="token punctuation">.</span>cars<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">manufacturer</span><span class="token operator">:</span> <span class="token string">&#39;GM&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">model</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 为提高查询性能，可以创建如下索引</span>
db<span class="token punctuation">.</span>cars<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">manufacturer</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">model</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>排序键的排列顺序必须与其在索引中出现的顺序相同</strong>。例如，索引键模式 <code>{ a: 1, b: 1 }</code> 可以支持对 <code>{ a: 1, b: 1 }</code> 排序，但不支持对 <code>{ b: 1, a: 1 }</code> 排序。</p><h3 id="范围" tabindex="-1"><a class="header-anchor" href="#范围" aria-hidden="true">#</a> 范围</h3><p>“范围”过滤器会扫描字段。此扫描不要求精确匹配，因此范围过滤器会松散绑定到索引键。为提高查询效率，应尽可能缩小范围边界，并使用等值匹配来限制必须扫描的文档数。MongoDB 无法对范围过滤器的结果进行索引排序。将范围过滤器置于排序谓词之后，以便 MongoDB 可使用非阻塞索引排序。</p><p>【示例】范围查询</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>cars<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gte</span><span class="token operator">:</span> <span class="token number">15000</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>cars<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
db<span class="token punctuation">.</span>cars<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">priorAccidents</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$ne</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),cn={href:"https://www.mongodb.com/zh-cn/docs/manual/applications/indexes/",target:"_blank",rel:"noopener noreferrer"},rn=n("h2",{id:"参考资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),e(" 参考资料")],-1),ln={href:"https://www.mongodb.com/zh-cn/docs/manual/indexes/",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://zhuanlan.zhihu.com/p/77971681",target:"_blank",rel:"noopener noreferrer"};function un(hn,kn){const a=p("ExternalLinkIcon");return c(),r("div",null,[d,l(" more "),u,h,n("p",null,[e("索引是一种特殊的数据结构，它以易于遍历的形式存储一小部分集合数据集。"),n("strong",null,[e("MongoDB 索引使用 "),n("a",k,[e("B-tree"),s(a)]),e(" 数据结构")]),e("。索引可存储某个特定字段或多个字段的值，并按字段的值进行排序。索引条目的排序支持高效的相等匹配和基于范围的查询操作。此外，"),g,e("。")]),m,_,b,n("p",null,[e("MongoDB 在创建集合时会在 "),n("a",f,[x,s(a)]),e(" 字段上创建一个 "),n("a",w,[e("唯一索引"),s(a)]),e("。"),v,e(" 索引可防止客户端插入两个具有相同 "),y,e(" 字段值的文档。无法删除此索引。")]),B,n("blockquote",null,[n("p",null,[e("扩展阅读："),n("a",z,[e("创建索引"),s(a)])])]),M,D,n("ul",null,[n("li",null,[n("a",j,[q,s(a)]),e(" - 从集合中删除特定索引。")]),n("li",null,[n("a",I,[N,s(a)]),e(" - 从集合或索引数组中删除所有可移动索引（如果指定）。")])]),n("blockquote",null,[n("p",null,[e("扩展阅读："),n("a",V,[e("删除索引"),s(a)])])]),C,n("blockquote",null,[n("p",null,[e("要了解详情，请参阅 "),n("a",E,[e("单字段索引"),s(a)]),e("。")])]),$,n("blockquote",null,[n("p",null,[e("要了解详情，请参阅 "),n("a",L,[e("复合索引"),s(a)]),e("。")])]),S,A,G,R,T,n("blockquote",null,[n("p",null,[e("要了解详情，请参阅 "),n("a",F,[e("多键索引"),s(a)]),e("。")])]),H,J,n("blockquote",null,[n("p",null,[e("要了解详情，请参阅 "),n("a",K,[e("自管理部署上的文本索引。"),s(a)])])]),O,P,Q,n("ul",null,[n("li",null,[e("使用平面几何返回结果的 "),n("a",U,[e("2d 索引"),s(a)]),e("。")]),n("li",null,[e("使用球面几何返回结果的 "),n("a",W,[e("2dsphere 索引"),s(a)]),e("。")])]),n("blockquote",null,[n("p",null,[e("要了解详情，请参阅 "),n("a",X,[e("地理空间索引"),s(a)]),e("。")])]),Y,n("p",null,[e("哈希索引支持 "),n("a",Z,[e("哈希分片"),s(a)]),e("。哈希索引对字段值的哈希值进行索引。")]),n("blockquote",null,[n("p",null,[e("要了解详情，请参阅 "),n("a",nn,[e("哈希索引"),s(a)]),e("。")])]),en,an,sn,n("p",null,[e("引用多个字段的索引是 "),n("a",on,[e("复合索引"),s(a)]),e("。复合索引可以显著缩短查询响应时间。索引键与文档字段相对应。大多数情况下，"),n("strong",null,[e("应用 ESR（相等、排序、范围）规则来排列索引键有助于创建更有效的 "),n("a",tn,[e("复合索引"),s(a)])]),e("。")]),pn,n("blockquote",null,[n("p",null,[e("扩展阅读："),n("a",cn,[e("MongoDB 官方文档之索引策略"),s(a)])])]),rn,n("ul",null,[n("li",null,[n("a",ln,[e("MongoDB 官方文档之索引"),s(a)])]),n("li",null,[n("a",dn,[e("你真的会用索引么？[Mongo]"),s(a)])])])])}const _n=t(i,[["render",un],["__file","index.html.vue"]]);export{_n as default};
