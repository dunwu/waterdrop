const e=JSON.parse('{"key":"v-60821d01","path":"/pages/1a985363/","title":"Spring 校验","lang":"zh-CN","frontmatter":{"title":"Spring 校验","date":"2022-12-22T17:42:28.000Z","order":21,"permalink":"/pages/1a985363/","category":["Java","框架","Spring","Spring核心"],"tag":["Java","框架","Spring"],"description":"Spring 校验 Java API 规范(JSR303)定义了Bean校验的标准validation-api，但没有提供实现。hibernate validation是对这个规范的实现，并增加了校验注解如@Email、@Length等。Spring Validation是对hibernate validation的二次封装，用于支持spring mvc参数自动校验。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/1a985363/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Spring 校验"}],["meta",{"property":"og:description","content":"Spring 校验 Java API 规范(JSR303)定义了Bean校验的标准validation-api，但没有提供实现。hibernate validation是对这个规范的实现，并增加了校验注解如@Email、@Length等。Spring Validation是对hibernate validation的二次封装，用于支持spring mvc参数自动校验。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-15T00:29:21.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"框架"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:published_time","content":"2022-12-22T17:42:28.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-15T00:29:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring 校验\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-12-22T17:42:28.000Z\\",\\"dateModified\\":\\"2025-09-15T00:29:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"快速入门","slug":"快速入门","link":"#快速入门","children":[{"level":3,"title":"引入依赖","slug":"引入依赖","link":"#引入依赖","children":[]},{"level":3,"title":"校验示例","slug":"校验示例","link":"#校验示例","children":[]},{"level":3,"title":"统一异常处理","slug":"统一异常处理","link":"#统一异常处理","children":[]}]},{"level":2,"title":"进阶使用","slug":"进阶使用","link":"#进阶使用","children":[{"level":3,"title":"分组校验","slug":"分组校验","link":"#分组校验","children":[]},{"level":3,"title":"嵌套校验","slug":"嵌套校验","link":"#嵌套校验","children":[]},{"level":3,"title":"自定义校验注解","slug":"自定义校验注解","link":"#自定义校验注解","children":[]},{"level":3,"title":"自定义校验","slug":"自定义校验","link":"#自定义校验","children":[]},{"level":3,"title":"快速失败(Fail Fast)","slug":"快速失败-fail-fast","link":"#快速失败-fail-fast","children":[]}]},{"level":2,"title":"Spring 校验原理","slug":"spring-校验原理","link":"#spring-校验原理","children":[{"level":3,"title":"Spring 校验使用场景","slug":"spring-校验使用场景","link":"#spring-校验使用场景","children":[]},{"level":3,"title":"Validator 接口设计","slug":"validator-接口设计","link":"#validator-接口设计","children":[]},{"level":3,"title":"Errors 接口设计","slug":"errors-接口设计","link":"#errors-接口设计","children":[]},{"level":3,"title":"Errors 文案来源","slug":"errors-文案来源","link":"#errors-文案来源","children":[]},{"level":3,"title":"spring web 校验原理","slug":"spring-web-校验原理","link":"#spring-web-校验原理","children":[]}]},{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757896161000,"updatedTime":1757896161000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":8.99,"words":2696},"filePathRelative":"01.Java/13.框架/Spring/Spring核心/Spring校验.md","localizedDate":"2022年12月22日","excerpt":"<h1> Spring 校验</h1>\\n<p>Java API 规范(<code>JSR303</code>)定义了<code>Bean</code>校验的标准<code>validation-api</code>，但没有提供实现。<code>hibernate validation</code>是对这个规范的实现，并增加了校验注解如<code>@Email</code>、<code>@Length</code>等。<code>Spring Validation</code>是对<code>hibernate validation</code>的二次封装，用于支持<code>spring mvc</code>参数自动校验。</p>","autoDesc":true}');export{e as data};
