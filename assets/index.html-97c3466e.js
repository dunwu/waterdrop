import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as l,a as n,d as e,b as s,e as t}from"./app-a833d615.js";const r={},i=n("h1",{id:"elasticsearch-搜索-上",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#elasticsearch-搜索-上","aria-hidden":"true"},"#"),s(" Elasticsearch 搜索（上）")],-1),u=n("h2",{id:"搜索简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#搜索简介","aria-hidden":"true"},"#"),s(" 搜索简介")],-1),d=n("p",null,"Elasticsearch 支持多种搜索：",-1),k={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/term-level-queries.html",target:"_blank",rel:"noopener noreferrer"},v=n("strong",null,"精确搜索（词项搜索）",-1),m={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/full-text-queries.html",target:"_blank",rel:"noopener noreferrer"},q=n("strong",null,"全文搜索",-1),b=n("strong",null,"向量搜索",-1),h={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/knn-search.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/semantic-search.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"_search API",-1),f=n("code",null,"query",-1),w={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html",target:"_blank",rel:"noopener noreferrer"},x=t(`<p>Elasticsearch 支持两种搜索方式：URI Query 和 Request Body Query（DSL）</p><details class="hint-container details"><summary>URI Query 示例</summary><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>GET /kibana_sample_data_ecommerce/_search?q<span class="token operator">=</span>customer_first_name:Eddie
GET /kibana*/_search?q<span class="token operator">=</span>customer_first_name:Eddie
GET /_all/_search?q<span class="token operator">=</span>customer_first_name:Eddie
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>Request Body Query（DSL）示例</summary><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>POST /kibana_sample_data_ecommerce/_search
<span class="token punctuation">{</span>
	<span class="token string">&quot;query&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
		<span class="token string">&quot;match_all&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>当文档存储在 Elasticsearch 中时，它会在 1 秒内近乎实时地被索引和完全搜索。</p><p>Elasticsearch 基于 Lucene 开发，并引入了分段搜索的概念。分段类似于倒排索引，但 Lucene 中的单词 <code>index</code> 表示“段的集合加上提交点”。提交后，将向提交点添加新分段并清除缓冲区。</p><p>位于 Elasticsearch 和磁盘之间的是文件系统缓存。内存中索引缓冲区的文档会被写入新的分段，然后写入文件系统缓存，然后才刷新到磁盘。</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/202503110724002.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Lucene 允许写入和打开新分段，使其包含的文档对搜索可见，而无需执行完全提交。这是一个比提交到磁盘要轻松得多的过程，并且可以频繁地完成而不会降低性能。</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/202503110725002.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在 Elasticsearch 中，写入和打开新分段的这一过程称为刷新。刷新使自上次刷新以来对索引执行的所有操作都可用于搜索。</p><p>默认情况下，Elasticsearch 每秒定期刷新一次索引，但仅限于在过去 30 秒内收到一个或多个搜索请求的索引。这就是我们说 Elasticsearch 具有近实时搜索能力的原因：文档更改不会立即对搜索可见，但会在此时间范围内变得可见。</p><h2 id="排序" tabindex="-1"><a class="header-anchor" href="#排序" aria-hidden="true">#</a> 排序</h2><p>在 Elasticsearch 中，默认排序是**按照相关性的评分（<code>_score</code>）**进行降序排序。<code>_score</code> 是浮点数类型，<code>_score</code> 评分越高，相关性越高。评分模型的选择可以通过 <code>similarity</code> 参数在映射中指定。</p><p>在 5.4 版本以前，默认的相关性算法是 TF-IDF。TF 是<strong>词频</strong>（term frequency），IDF 是<strong>逆文档频率</strong>（inverse document frequency）。一个简短的解释是，一个词条出现在某个文档中的次数越多，它就越相关；但是，如果该词条出现在不同的文档的次数越多，它就越不相关。5.4 版本以后，默认的相关性算法 BM25。</p><p>此外，也可以通过 <code>sort</code> 自定排序规则，如：按照字段的值排序、多级排序、多值字段排序、基于 geo（地理位置）排序以及自定义脚本排序。</p><details class="hint-container details"><summary>排序示例</summary><p>单字段排序</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /kibana_sample_data_ecommerce/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;match_all&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token property">&quot;order_date&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token property">&quot;order&quot;</span><span class="token operator">:</span> <span class="token string">&quot;desc&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多字段排序</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /kibana_sample_data_ecommerce/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;match_all&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token property">&quot;order_date&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token property">&quot;order&quot;</span><span class="token operator">:</span> <span class="token string">&quot;desc&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;_doc&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;order&quot;</span><span class="token operator">:</span> <span class="token string">&quot;asc&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;_score&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span> <span class="token property">&quot;order&quot;</span><span class="token operator">:</span> <span class="token string">&quot;desc&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,16),j={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/sort-search-results.html",target:"_blank",rel:"noopener noreferrer"},E=t('<h2 id="分页" tabindex="-1"><a class="header-anchor" href="#分页" aria-hidden="true">#</a> 分页</h2><p>默认情况下，Elasticsearch 搜索会返回前 10 个匹配的匹配项。</p><p>Elasticsearch 支持三种分页查询方式。</p><ul><li>from + size</li><li>search after</li><li>scroll</li></ul><h3 id="from-size" tabindex="-1"><a class="header-anchor" href="#from-size" aria-hidden="true">#</a> from + size</h3><p>可以使用 <code>from</code> 和 <code>size</code> 参数分别指定起始页和每页记录数。</p><p>当一个查询：from = 990, size = 10，会在每个分片上先获取 1000 个文档。然后，通过协调节点聚合所有结果。最后，再通过排序选取前 1000 个文档。</p>',7),B=n("strong",null,"深分页",-1),S={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-max-result-window",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"index.max_result_window",-1),z=t(`<details class="hint-container details"><summary>from + size 分页查询示例</summary><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /kibana_sample_data_ecommerce/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;from&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;match_all&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="scroll" tabindex="-1"><a class="header-anchor" href="#scroll" aria-hidden="true">#</a> scroll</h3><p>scroll 搜索方式类似于 RDBMS 中的游标，只允许向下翻页。每次下一页查询后，使用返回结果的 scroll id 来作为下一次翻页的标记。</p><p>scroll 在搜索初始化阶段会生成快照，后续数据的变化无法及时体现在查询结果，因此更加适合一次性批量查询或非实时数据的分页查询。</p><p>启用游标查询时，需要注意设定期望的过期时间（scroll = 1m），以降低维持游标查询窗口所需消耗的资源。</p>`,5),U={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/paginate-search-results.html#search-after",target:"_blank",rel:"noopener noreferrer"},X=n("code",null,"search_after",-1),P=t(`<details class="hint-container details"><summary>scroll 分页查询示例</summary><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /kibana_sample_data_ecommerce/_search?scroll=1m
<span class="token punctuation">{</span>
  <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;match&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;currency&quot;</span><span class="token operator">:</span> <span class="token string">&quot;EUR&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>响应结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;_scroll_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAmTkWRTMzNmxBYmZUbUdsdFNqMnJoTl84Zw==&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;took&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 略</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">4675</span><span class="token punctuation">,</span>
      <span class="token property">&quot;relation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;max_score&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 略</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,1),R={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/paginate-search-results.html",target:"_blank",rel:"noopener noreferrer"},J=t(`<h3 id="search-after" tabindex="-1"><a class="header-anchor" href="#search-after" aria-hidden="true">#</a> search after</h3><p>search after 搜索方式不支持指定页数，只能向下翻页；并且需要指定 sort，并保证值是唯一的。然后，可以反复使用上次结果中最后一个文档的 sort 值进行查询。</p><p>search after 实现的思路同 scroll 方式基本一致，通过记录上一次分页的位置标识，来进行下一次分页查询。相比于 scroll 方式，它的优点是可以实时获取数据的变化，解决了查询快照导致的查询结果延迟问题。</p><details class="hint-container details"><summary>search after 分页查询示例</summary><p>第一次查询</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>
POST /kibana_sample_data_ecommerce/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;match_all&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token property">&quot;order_date&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token property">&quot;order&quot;</span><span class="token operator">:</span> <span class="token string">&quot;desc&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>响应结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;took&quot;</span><span class="token operator">:</span> <span class="token number">2609</span><span class="token punctuation">,</span>
  <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 略</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">4675</span><span class="token punctuation">,</span>
      <span class="token property">&quot;relation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;max_score&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">// 略多条记录</span>
      <span class="token comment">// 最后一条记录</span>
      <span class="token punctuation">{</span>
        <span class="token comment">// 略</span>
        <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1642893235000</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上次查询的响应中获取 <code>sort</code> 值，然后将 sort 值插入 search after 数组：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /kibana_sample_data_ecommerce/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;match_all&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;search_after&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token number">1642893235000</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;order_date&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;order&quot;</span><span class="token operator">:</span> <span class="token string">&quot;desc&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="限定字段" tabindex="-1"><a class="header-anchor" href="#限定字段" aria-hidden="true">#</a> 限定字段</h2>`,5),A={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-source-field.html",target:"_blank",rel:"noopener noreferrer"},I=n("code",null,"_source",-1),N={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-fields.html#search-fields-param",target:"_blank",rel:"noopener noreferrer"},O=n("code",null,"fields",-1),Y={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-fields.html#source-filtering",target:"_blank",rel:"noopener noreferrer"},K=n("code",null,"_source",-1),L=t(`<h2 id="折叠搜索结果" tabindex="-1"><a class="header-anchor" href="#折叠搜索结果" aria-hidden="true">#</a> 折叠搜索结果</h2><p>Elasticsearch 中，可以通过 collapse 对搜索结果进行分组，且每个分组只显示该分组的一个代表文档。</p><details class="hint-container details"><summary>collapse 查询示例</summary><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /kibana_sample_data_ecommerce/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;match_all&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;collapse&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;field&quot;</span><span class="token operator">:</span> <span class="token string">&quot;day_of_week&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>响应结果：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;took&quot;</span><span class="token operator">:</span> <span class="token number">106</span><span class="token punctuation">,</span>
  <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;skipped&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">4675</span><span class="token punctuation">,</span>
      <span class="token property">&quot;relation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;max_score&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;kibana_sample_data_ecommerce&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yZUtBX4BU8KXl1YJRBrH&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;day_of_week&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Monday&quot;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;kibana_sample_data_ecommerce&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ypUtBX4BU8KXl1YJRBrH&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;day_of_week&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Sunday&quot;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;kibana_sample_data_ecommerce&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1JUtBX4BU8KXl1YJRBrH&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;day_of_week&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Tuesday&quot;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;kibana_sample_data_ecommerce&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1ZUtBX4BU8KXl1YJRBrH&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;day_of_week&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Wednesday&quot;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;kibana_sample_data_ecommerce&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2JUtBX4BU8KXl1YJRBrH&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;day_of_week&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Saturday&quot;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;kibana_sample_data_ecommerce&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2ZUtBX4BU8KXl1YJRBrH&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;day_of_week&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Thursday&quot;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;kibana_sample_data_ecommerce&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;35UtBX4BU8KXl1YJRBrI&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;day_of_week&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Friday&quot;</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="过滤搜索结果" tabindex="-1"><a class="header-anchor" href="#过滤搜索结果" aria-hidden="true">#</a> 过滤搜索结果</h2><p>使用带有 <code>filter</code> 子句的布尔查询，可以过滤搜索和聚合的结果。</p>`,5),D={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/filter-search-results.html#post-filter",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"post_filter",-1),H=t(`<details class="hint-container details"><summary>filter 示例</summary><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /kibana_sample_data_ecommerce/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;bool&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;filter&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;range&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;taxful_total_price&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;gte&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;lte&quot;</span><span class="token operator">:</span> <span class="token number">10</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="高亮" tabindex="-1"><a class="header-anchor" href="#高亮" aria-hidden="true">#</a> 高亮</h2><p>Elasticsearch 的高亮（highlight）可以从搜索结果中的一个或多个字段中获取突出显示的摘要，以便向用户显示查询匹配的位置。当请求突出显示（即高亮）时，响应结果的 <code>highlight</code> 字段中包括高亮的字段和高亮的片段。Elasticsearch 默认会用 <code>&lt;em&gt;&lt;/em&gt;</code> 标签标记关键字。</p><p>Elasticsearch 提供了三种高亮器，分别是<strong>默认的 highlighter 高亮器</strong>、<strong>postings-highlighter 高亮器</strong> 和 <strong>fast-vector-highlighter 高亮器</strong>。</p><details class="hint-container details"><summary>高亮结果示例</summary><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /kibana_sample_data_ecommerce/_search
<span class="token punctuation">{</span>
  <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;match_all&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;highlight&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;pre_tags&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token string">&quot;&lt;strong&gt;&quot;</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;post_tags&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token string">&quot;&lt;/strong&gt;&quot;</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,5),Z={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/highlighting.html",target:"_blank",rel:"noopener noreferrer"},M=n("h2",{id:"分片路由搜索",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#分片路由搜索","aria-hidden":"true"},"#"),s(" 分片路由搜索")],-1),Q=n("p",null,[s("Elasticsearch 可以在多个节点上的多个分片中存储索引数据的副本。在运行搜索请求时，Elasticsearch 会选择包含索引数据副本的节点，并将搜索请求转发到该节点的分片。此过程称为"),n("strong",null,"路由"),s("。")],-1),V={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html#search-preference",target:"_blank",rel:"noopener noreferrer"},G=n("code",null,"preference",-1),W={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-shard-routing.html",target:"_blank",rel:"noopener noreferrer"},C=n("h2",{id:"查询规则",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#查询规则","aria-hidden":"true"},"#"),s(" 查询规则")],-1),$=n("p",null,"Elasticsearch 允许自定义查询规则来进行搜索。",-1),nn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-using-query-rules.html",target:"_blank",rel:"noopener noreferrer"},sn=n("h2",{id:"搜索模板",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#搜索模板","aria-hidden":"true"},"#"),s(" 搜索模板")],-1),an=n("p",null,"搜索模板是可以使用不同变量运行的存储搜索。",-1),en={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html",target:"_blank",rel:"noopener noreferrer"},tn=n("h2",{id:"参考资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),s(" 参考资料")],-1),on={href:"https://time.geekbang.org/course/detail/100030501-102659",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-with-elasticsearch.html",target:"_blank",rel:"noopener noreferrer"};function cn(ln,rn){const a=p("ExternalLinkIcon");return c(),l("div",null,[i,u,d,n("ul",null,[n("li",null,[n("a",k,[v,e(a)]),s("：搜索数值、日期、IP 或字符串的精确值或范围。")]),n("li",null,[n("a",m,[q,e(a)]),s("：搜索非结构化文本数据并查找与查询项最匹配的文档。")]),n("li",null,[b,s("：存储向量，并使用 ANN 或 "),n("a",h,[s("KNN"),e(a)]),s(" 搜索来查找相似的向量，从而支持 "),n("a",_,[s("语义搜索"),e(a)]),s(" 等场景。")])]),n("p",null,[s("可以使用 "),n("a",g,[y,e(a)]),s(" 来搜索和聚合 Elasticsearch 数据流或索引中的数据。API 的 "),f,s(" 请求采用 "),n("a",w,[s("DSL"),e(a)]),s(" 语义来进行查询。")]),x,n("blockquote",null,[n("p",null,[s("详情参考："),n("a",j,[s("Sort search results"),e(a)])])]),E,n("p",null,[s("页数越深，占用内存越多。为了避免"),B,s("问题，ES 默认限定最多搜索 10000 个文档，可以通过 "),n("a",S,[T,e(a)]),s(" 进行设置。")]),z,n("blockquote",null,[n("p",null,[s("注意：Elasticsearch 官方不再建议使用 scroll 查询方式进行深分页，而是推荐使用 "),n("a",U,[X,e(a)]),s(" 和时间点（PIT）一起使用。")])]),P,n("blockquote",null,[n("p",null,[s("详情参考："),n("a",R,[s("Paginate search results"),e(a)])])]),J,n("p",null,[s("默认情况下，搜索响应中的每个点击都包含 "),n("a",A,[I,e(a)]),s("，该字段保存了原始文本的 JSON 对象。有两种推荐的方法可以从搜索查询中检索所选字段：")]),n("ul",null,[n("li",null,[s("使用 "),n("a",N,[O,e(a)]),s(" 选项指定响应结果中返回的值。")]),n("li",null,[s("如果需要在查询时返回原始文本数据，可以使用 "),n("a",Y,[K,e(a)]),s(" 选项。")])]),L,n("p",null,[s("使用 "),n("a",D,[F,e(a)]),s(" 可以过滤搜索的结果，但不能过滤聚合结果。")]),H,n("blockquote",null,[n("p",null,[s("详情参考："),n("a",Z,[s("Highlighting"),e(a)])])]),M,Q,n("p",null,[s("默认情况下，Elasticsearch 使用自适应副本选择来路由搜索请求。默认情况下，自适应副本选择从所有符合条件的节点和分片中进行选择。如果要限制符合搜索请求条件的节点和分片集，可以使用 "),n("a",V,[G,e(a)]),s(" 查询参数。")]),n("blockquote",null,[n("p",null,[s("详情参考："),n("a",W,[s("Search shard routing"),e(a)])])]),C,$,n("blockquote",null,[n("p",null,[s("详情参考："),n("a",nn,[s("Searching with query rules"),e(a)])])]),sn,an,n("blockquote",null,[n("p",null,[s("详情参考："),n("a",en,[s("Search templates"),e(a)])])]),tn,n("ul",null,[n("li",null,[n("a",on,[s("极客时间教程 - Elasticsearch 核心技术与实战"),e(a)])]),n("li",null,[n("a",pn,[s("Elasticsearch 官方文档之搜索数据"),e(a)])])])])}const kn=o(r,[["render",cn],["__file","index.html.vue"]]);export{kn as default};
