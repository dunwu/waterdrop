const e=JSON.parse('{"key":"v-33acafe6","path":"/pages/54b7538d/","title":"SpringBoot 之属性加载详解","lang":"zh-CN","frontmatter":{"title":"SpringBoot 之属性加载详解","date":"2019-01-10T11:55:54.000Z","order":32,"permalink":"/pages/54b7538d/","category":["Java","框架","Spring","Spring核心"],"tag":["Java","框架","Spring","SpringBoot"],"description":"SpringBoot 之属性加载详解 加载 property 顺序 Spring Boot 加载 property 顺序如下： Devtools 全局配置 (当 devtools 被激活 ~/.spring-boot-devtools.properties). 测试环境中的 @TestPropertySource 注解配置 测试环境中的属性 properties：@SpringBootTest 和 测试注解. 命令行参数 SPRING_APPLICATION_JSON 属性 ServletConfig 初始化参数 ServletContext 初始化参数 JNDI attributes from 通过 java:comp/env 配置的 JNDI 属性 Java 系统属性 (System.getProperties()) 操作系统环境比那里 RandomValuePropertySource 加载 random.* 形式的属性 jar 包外的 application-{profile}.properties 或 application-{profile}.yml 配置 jar 包内的 application-{profile}.properties 或 application-{profile}.yml 配置 jar 包外的 application.properties 或 application.yml 配置 jar 包内的 application.properties 或 application.yml 配置 @PropertySource 绑定的配置 默认属性 (通过 SpringApplication.setDefaultProperties 指定)","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/54b7538d/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"SpringBoot 之属性加载详解"}],["meta",{"property":"og:description","content":"SpringBoot 之属性加载详解 加载 property 顺序 Spring Boot 加载 property 顺序如下： Devtools 全局配置 (当 devtools 被激活 ~/.spring-boot-devtools.properties). 测试环境中的 @TestPropertySource 注解配置 测试环境中的属性 properties：@SpringBootTest 和 测试注解. 命令行参数 SPRING_APPLICATION_JSON 属性 ServletConfig 初始化参数 ServletContext 初始化参数 JNDI attributes from 通过 java:comp/env 配置的 JNDI 属性 Java 系统属性 (System.getProperties()) 操作系统环境比那里 RandomValuePropertySource 加载 random.* 形式的属性 jar 包外的 application-{profile}.properties 或 application-{profile}.yml 配置 jar 包内的 application-{profile}.properties 或 application-{profile}.yml 配置 jar 包外的 application.properties 或 application.yml 配置 jar 包内的 application.properties 或 application.yml 配置 @PropertySource 绑定的配置 默认属性 (通过 SpringApplication.setDefaultProperties 指定)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-19T00:24:17.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"框架"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"SpringBoot"}],["meta",{"property":"article:published_time","content":"2019-01-10T11:55:54.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-19T00:24:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot 之属性加载详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-01-10T11:55:54.000Z\\",\\"dateModified\\":\\"2025-09-19T00:24:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"加载 property 顺序","slug":"加载-property-顺序","link":"#加载-property-顺序","children":[]},{"level":2,"title":"随机属性","slug":"随机属性","link":"#随机属性","children":[]},{"level":2,"title":"命令行属性","slug":"命令行属性","link":"#命令行属性","children":[]},{"level":2,"title":"Application 属性文件","slug":"application-属性文件","link":"#application-属性文件","children":[]},{"level":2,"title":"Profile 特定属性","slug":"profile-特定属性","link":"#profile-特定属性","children":[]},{"level":2,"title":"属性中的占位符","slug":"属性中的占位符","link":"#属性中的占位符","children":[]},{"level":2,"title":"YAML 属性","slug":"yaml-属性","link":"#yaml-属性","children":[{"level":3,"title":"访问属性","slug":"访问属性","link":"#访问属性","children":[]},{"level":3,"title":"多 profile 配置","slug":"多-profile-配置","link":"#多-profile-配置","children":[]},{"level":3,"title":"YAML 的缺点","slug":"yaml-的缺点","link":"#yaml-的缺点","children":[]}]},{"level":2,"title":"属性前缀","slug":"属性前缀","link":"#属性前缀","children":[]},{"level":2,"title":"属性松散绑定规则","slug":"属性松散绑定规则","link":"#属性松散绑定规则","children":[]},{"level":2,"title":"属性转换","slug":"属性转换","link":"#属性转换","children":[{"level":3,"title":"时间单位转换","slug":"时间单位转换","link":"#时间单位转换","children":[]},{"level":3,"title":"数据大小转换","slug":"数据大小转换","link":"#数据大小转换","children":[]}]},{"level":2,"title":"校验属性","slug":"校验属性","link":"#校验属性","children":[]},{"level":2,"title":"示例源码","slug":"示例源码","link":"#示例源码","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1758241457000,"updatedTime":1758241457000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":4.9,"words":1470},"filePathRelative":"01.Java/框架/Spring/Spring核心/SpringBoot之属性加载.md","localizedDate":"2019年1月10日","excerpt":"<h1> SpringBoot 之属性加载详解</h1>\\n<h2> 加载 property 顺序</h2>\\n<p>Spring Boot 加载 property 顺序如下：</p>\\n<ol>\\n<li><a href=\\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot-devtools-globalsettings\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Devtools 全局配置</a> (当 devtools 被激活 <code>~/.spring-boot-devtools.properties</code>).</li>\\n<li><a href=\\"https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/test/context/TestPropertySource.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">测试环境中的 <code>@TestPropertySource</code> 注解配置</a></li>\\n<li>测试环境中的属性 <code>properties</code>：<a href=\\"https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/test/context/SpringBootTest.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>@SpringBootTest</code></a> 和 <a href=\\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-testing-spring-boot-applications-testing-autoconfigured-tests\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">测试注解</a>.</li>\\n<li>命令行参数</li>\\n<li><code>SPRING_APPLICATION_JSON</code> 属性</li>\\n<li><code>ServletConfig</code> 初始化参数</li>\\n<li><code>ServletContext</code> 初始化参数</li>\\n<li>JNDI attributes from 通过 <code>java:comp/env</code> 配置的 JNDI 属性</li>\\n<li>Java 系统属性 (<code>System.getProperties()</code>)</li>\\n<li>操作系统环境比那里</li>\\n<li><code>RandomValuePropertySource</code> 加载 <code>random.*</code> 形式的属性</li>\\n<li>jar 包外的 <code>application-{profile}.properties</code> 或 <code>application-{profile}.yml</code> 配置</li>\\n<li>jar 包内的 <code>application-{profile}.properties</code> 或 <code>application-{profile}.yml</code> 配置</li>\\n<li>jar 包外的 <code>application.properties</code> 或 <code>application.yml</code> 配置</li>\\n<li>jar 包内的 <code>application.properties</code> 或 <code>application.yml</code> 配置</li>\\n<li><code>@PropertySource</code> 绑定的配置</li>\\n<li>默认属性 (通过 <code>SpringApplication.setDefaultProperties</code> 指定)</li>\\n</ol>","autoDesc":true}');export{e as data};
