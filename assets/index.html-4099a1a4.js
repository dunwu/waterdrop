const e=JSON.parse('{"key":"v-2808264e","path":"/pages/6ce53be6/","title":"《极客时间教程 - 架构实战案例解析》笔记","lang":"zh-CN","frontmatter":{"title":"《极客时间教程 - 架构实战案例解析》笔记","date":"2021-08-26T23:32:00.000Z","permalink":"/pages/6ce53be6/","category":["笔记","设计"],"tag":["设计","架构"],"description":"《极客时间教程 - 架构实战案例解析》笔记 架构的本质：如何打造一个有序的系统？ 架构的本质：通过合理的内部编排，保证系统高度有序，能够不断扩展，满足业务和技术的变化。 首先，架构的出发点是业务和技术在不断复杂化，引起系统混乱，需要通过架构来保证有序。 其次，架构实现从无序到有序，是通过合理的内部编排实现的，基本的手段，就是“分”与“合”，先把系统打散，然后将它们重新组合，形成更合理的关系。 “分”就是把系统拆分为各个子系统、模块、组件 “合”就是基于业务流程和技术手段，把各个组件有机整合在一起","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/6ce53be6/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"《极客时间教程 - 架构实战案例解析》笔记"}],["meta",{"property":"og:description","content":"《极客时间教程 - 架构实战案例解析》笔记 架构的本质：如何打造一个有序的系统？ 架构的本质：通过合理的内部编排，保证系统高度有序，能够不断扩展，满足业务和技术的变化。 首先，架构的出发点是业务和技术在不断复杂化，引起系统混乱，需要通过架构来保证有序。 其次，架构实现从无序到有序，是通过合理的内部编排实现的，基本的手段，就是“分”与“合”，先把系统打散，然后将它们重新组合，形成更合理的关系。 “分”就是把系统拆分为各个子系统、模块、组件 “合”就是基于业务流程和技术手段，把各个组件有机整合在一起"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-13T09:28:24.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"设计"}],["meta",{"property":"article:tag","content":"架构"}],["meta",{"property":"article:published_time","content":"2021-08-26T23:32:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-13T09:28:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"《极客时间教程 - 架构实战案例解析》笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-08-26T23:32:00.000Z\\",\\"dateModified\\":\\"2025-09-13T09:28:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"架构的本质：如何打造一个有序的系统？","slug":"架构的本质-如何打造一个有序的系统","link":"#架构的本质-如何打造一个有序的系统","children":[]},{"level":2,"title":"业务架构：作为开发，你真的了解业务吗？","slug":"业务架构-作为开发-你真的了解业务吗","link":"#业务架构-作为开发-你真的了解业务吗","children":[{"level":3,"title":"架构目标之业务的可扩展","slug":"架构目标之业务的可扩展","link":"#架构目标之业务的可扩展","children":[]},{"level":3,"title":"架构目标之业务的可复用","slug":"架构目标之业务的可复用","link":"#架构目标之业务的可复用","children":[]}]},{"level":2,"title":"可扩展架构：如何打造一个善变的柔性系统？","slug":"可扩展架构-如何打造一个善变的柔性系统","link":"#可扩展架构-如何打造一个善变的柔性系统","children":[]},{"level":2,"title":"可扩展架构案例（一）：电商平台架构是如何演变的？","slug":"可扩展架构案例-一-电商平台架构是如何演变的","link":"#可扩展架构案例-一-电商平台架构是如何演变的","children":[{"level":3,"title":"单体架构","slug":"单体架构","link":"#单体架构","children":[]},{"level":3,"title":"分布式架构","slug":"分布式架构","link":"#分布式架构","children":[]},{"level":3,"title":"SOA 架构","slug":"soa-架构","link":"#soa-架构","children":[]},{"level":3,"title":"微服务架构","slug":"微服务架构","link":"#微服务架构","children":[]}]},{"level":2,"title":"可扩展架构案例（二）：App 服务端架构是如何升级的？","slug":"可扩展架构案例-二-app-服务端架构是如何升级的","link":"#可扩展架构案例-二-app-服务端架构是如何升级的","children":[{"level":3,"title":"V1.0 架构","slug":"v1-0-架构","link":"#v1-0-架构","children":[]},{"level":3,"title":"V2.0 架构","slug":"v2-0-架构","link":"#v2-0-架构","children":[]},{"level":3,"title":"V3.0 架构","slug":"v3-0-架构","link":"#v3-0-架构","children":[]}]},{"level":2,"title":"可扩展架构案例（三）：你真的需要一个中台吗？","slug":"可扩展架构案例-三-你真的需要一个中台吗","link":"#可扩展架构案例-三-你真的需要一个中台吗","children":[{"level":3,"title":"中台的适用性","slug":"中台的适用性","link":"#中台的适用性","children":[]}]},{"level":2,"title":"可复用架构：如何实现高层次的复用？","slug":"可复用架构-如何实现高层次的复用","link":"#可复用架构-如何实现高层次的复用","children":[]},{"level":2,"title":"可复用架构案例（一）：如何设计一个基础服务？","slug":"可复用架构案例-一-如何设计一个基础服务","link":"#可复用架构案例-一-如何设计一个基础服务","children":[]},{"level":2,"title":"可复用架构案例（二）：如何对现有系统做微服务改造？","slug":"可复用架构案例-二-如何对现有系统做微服务改造","link":"#可复用架构案例-二-如何对现有系统做微服务改造","children":[]},{"level":2,"title":"可复用架构案例（三）：中台是如何炼成的？","slug":"可复用架构案例-三-中台是如何炼成的","link":"#可复用架构案例-三-中台是如何炼成的","children":[]},{"level":2,"title":"技术架构：作为开发，你真的了解系统吗？","slug":"技术架构-作为开发-你真的了解系统吗","link":"#技术架构-作为开发-你真的了解系统吗","children":[]},{"level":2,"title":"高可用架构：如何让你的系统不掉链子？","slug":"高可用架构-如何让你的系统不掉链子","link":"#高可用架构-如何让你的系统不掉链子","children":[]},{"level":2,"title":"高可用架构案例（一）：如何实现 O2O 平台日订单 500 万？","slug":"高可用架构案例-一-如何实现-o2o-平台日订单-500-万","link":"#高可用架构案例-一-如何实现-o2o-平台日订单-500-万","children":[]},{"level":2,"title":"高可用架构案例（二）：如何第一时间知道系统哪里有问题？","slug":"高可用架构案例-二-如何第一时间知道系统哪里有问题","link":"#高可用架构案例-二-如何第一时间知道系统哪里有问题","children":[]},{"level":2,"title":"高可用架构案例（三）：如何打造一体化的监控系统？","slug":"高可用架构案例-三-如何打造一体化的监控系统","link":"#高可用架构案例-三-如何打造一体化的监控系统","children":[]},{"level":2,"title":"高性能和可伸缩架构：业务增长，能不能加台机器就搞定？","slug":"高性能和可伸缩架构-业务增长-能不能加台机器就搞定","link":"#高性能和可伸缩架构-业务增长-能不能加台机器就搞定","children":[]},{"level":2,"title":"高性能架构案例：如何设计一个秒杀系统？","slug":"高性能架构案例-如何设计一个秒杀系统","link":"#高性能架构案例-如何设计一个秒杀系统","children":[]},{"level":2,"title":"可伸缩架构案例：数据太多，如何无限扩展你的数据库？","slug":"可伸缩架构案例-数据太多-如何无限扩展你的数据库","link":"#可伸缩架构案例-数据太多-如何无限扩展你的数据库","children":[]},{"level":2,"title":"案例：电商平台技术架构是如何演变的？","slug":"案例-电商平台技术架构是如何演变的","link":"#案例-电商平台技术架构是如何演变的","children":[]},{"level":2,"title":"从务实的角度，给你架构设计的重点知识和学习路径","slug":"从务实的角度-给你架构设计的重点知识和学习路径","link":"#从务实的角度-给你架构设计的重点知识和学习路径","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757755704000,"updatedTime":1757755704000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":14.63,"words":4389},"filePathRelative":"00.笔记/03.设计/极客时间教程-架构实战案例解析笔记.md","localizedDate":"2021年8月26日","excerpt":"<h1> 《极客时间教程 - 架构实战案例解析》笔记</h1>\\n<h2> 架构的本质：如何打造一个有序的系统？</h2>\\n<p>架构的本质：<strong>通过合理的内部编排，保证系统高度有序，能够不断扩展，满足业务和技术的变化</strong>。</p>\\n<ul>\\n<li>\\n<p>首先，架构的出发点是业务和技术在不断复杂化，引起系统混乱，需要通过架构来保证有序。</p>\\n</li>\\n<li>\\n<p>其次，架构实现从无序到有序，是通过合理的内部编排实现的，基本的手段，就是“分”与“合”，先把系统打散，然后将它们重新组合，形成更合理的关系。</p>\\n<ul>\\n<li>“分”就是把系统拆分为各个子系统、模块、组件</li>\\n<li>“合”就是基于业务流程和技术手段，把各个组件有机整合在一起</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
