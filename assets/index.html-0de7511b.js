const t=JSON.parse('{"key":"v-47787dd9","path":"/pages/79c531dd/","title":"Redis 教程","lang":"zh-CN","frontmatter":{"icon":"logos:redis","title":"Redis 教程","cover":"https://raw.githubusercontent.com/dunwu/images/master/snap/202411231010326.png","date":"2020-02-10T14:27:39.000Z","permalink":"/pages/79c531dd/","hidden":true,"index":false,"category":["数据库","KV数据库","redis"],"tag":["数据库","KV数据库","redis"],"description":"Redis 教程 概述 Redis 是一种内存数据库，对数据的读写操作都是在内存中完成。因此其读写速度非常快，常用于缓存，消息队列、分布式锁等场景。 高性能 – Redis 的数据读写都是在内存中完成，因此性能极高。 高并发 - Redis 的读速度约为 10w+ QPS，写的速度约为 8w+ TPS，将近是 Mysql 的 10 倍。 Redis 支持多种数据类型，如：String(字符串)、Hash(哈希)、 List (列表)、Set(集合)、Zset(有序集合)、Bitmaps（位图）、HyperLogLog（基数统计）、GEO（地理空间）、Stream（流）。Redis 对数据类型的操作都是原子性的，因为执行命令由单线程负责的，不存在并发竞争的问题。 Redis 的读写采用单线程模型，因此，其操作天然就具有原子性。 Redis 支持两种持久化策略：RDB 和 AOF。 Redis 支持过期删除和内存淘汰，因此常被用于作为缓存。 Redis 有多种高可用方案：主从复制模式、哨兵模式、集群模式。 Redis 支持很多丰富的特性，如：事务 、Lua 脚本、发布订阅等等。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/79c531dd/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Redis 教程"}],["meta",{"property":"og:description","content":"Redis 教程 概述 Redis 是一种内存数据库，对数据的读写操作都是在内存中完成。因此其读写速度非常快，常用于缓存，消息队列、分布式锁等场景。 高性能 – Redis 的数据读写都是在内存中完成，因此性能极高。 高并发 - Redis 的读速度约为 10w+ QPS，写的速度约为 8w+ TPS，将近是 Mysql 的 10 倍。 Redis 支持多种数据类型，如：String(字符串)、Hash(哈希)、 List (列表)、Set(集合)、Zset(有序集合)、Bitmaps（位图）、HyperLogLog（基数统计）、GEO（地理空间）、Stream（流）。Redis 对数据类型的操作都是原子性的，因为执行命令由单线程负责的，不存在并发竞争的问题。 Redis 的读写采用单线程模型，因此，其操作天然就具有原子性。 Redis 支持两种持久化策略：RDB 和 AOF。 Redis 支持过期删除和内存淘汰，因此常被用于作为缓存。 Redis 有多种高可用方案：主从复制模式、哨兵模式、集群模式。 Redis 支持很多丰富的特性，如：事务 、Lua 脚本、发布订阅等等。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dunwu/images/master/snap/202411231010326.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-13T09:46:18.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Redis 教程"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"KV数据库"}],["meta",{"property":"article:tag","content":"redis"}],["meta",{"property":"article:published_time","content":"2020-02-10T14:27:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-13T09:46:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis 教程\\",\\"image\\":[\\"https://raw.githubusercontent.com/dunwu/images/master/snap/202411231010326.png\\"],\\"datePublished\\":\\"2020-02-10T14:27:39.000Z\\",\\"dateModified\\":\\"2025-09-13T09:46:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"📖 内容","slug":"📖-内容","link":"#📖-内容","children":[]},{"level":2,"title":"📚 资料","slug":"📚-资料","link":"#📚-资料","children":[]},{"level":2,"title":"🚪 传送","slug":"🚪-传送","link":"#🚪-传送","children":[]}],"git":{"createdTime":1741093684000,"updatedTime":1757756778000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":4}]},"readingTime":{"minutes":3.13,"words":939},"filePathRelative":"12.数据库/05.KV数据库/redis/README.md","localizedDate":"2020年2月10日","excerpt":"<h1> Redis 教程</h1>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">概述</p>\\n<p><strong>Redis 是一种内存数据库</strong>，对数据的读写操作都是在内存中完成。因此其<strong>读写速度非常快</strong>，常用于<strong>缓存，消息队列、分布式锁等场景</strong>。</p>\\n<ul>\\n<li><strong>高性能</strong> – Redis 的数据读写都是在内存中完成，因此性能极高。</li>\\n<li><strong>高并发</strong> - Redis 的读速度约为 10w+ QPS，写的速度约为 8w+ TPS，将近是 Mysql 的 10 倍。</li>\\n</ul>\\n<p><strong>Redis 支持多种数据类型</strong>，如：String(字符串)、Hash(哈希)、 List (列表)、Set(集合)、Zset(有序集合)、Bitmaps（位图）、HyperLogLog（基数统计）、GEO（地理空间）、Stream（流）。Redis 对数据类型的操作都是<strong>原子性</strong>的，因为执行命令由单线程负责的，不存在并发竞争的问题。</p>\\n<p><strong>Redis 的读写采用单线程模型</strong>，因此，其操作天然就具有<strong>原子性</strong>。</p>\\n<p>Redis 支持两种持久化策略：RDB 和 AOF。</p>\\n<p>Redis 支持过期删除和内存淘汰，因此常被用于作为缓存。</p>\\n<p>Redis 有多种高可用方案：<strong>主从复制</strong>模式、<strong>哨兵</strong>模式、<strong>集群</strong>模式。</p>\\n<p>Redis 支持很多丰富的特性，如：<strong>事务</strong> 、<strong>Lua 脚本</strong>、<strong>发布订阅</strong>等等。</p>\\n</div>","autoDesc":true}');export{t as data};
