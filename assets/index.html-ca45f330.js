const e=JSON.parse('{"key":"v-58d3f068","path":"/pages/1da350fe/","title":"Java 虚拟机之字节码","lang":"zh-CN","frontmatter":{"title":"Java 虚拟机之字节码","date":"2019-10-28T22:04:39.000Z","order":5,"permalink":"/pages/1da350fe/","category":["Java","JavaCore","JVM"],"tag":["Java","JavaCore","JVM","字节码"],"description":"Java 虚拟机之字节码 字节码简介 Java 字节码是 Java 虚拟机执行的一种指令格式。之所以被称之为字节码，是因为：Java 字节码文件（.class）是一种以 8 位字节为基础单位的二进制流文件，各个数据项严格按照顺序紧凑地排列在 .class 文件中，中间没有添加任何分隔符。整个 .class 文件本质上就是一张表。 Java 能做到 “一次编译，到处运行”，一是因为 JVM 针对各种操作系统、平台都进行了定制；二是因为无论在什么平台，都可以编译生成固定格式的 Java 字节码文件（.class）。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/1da350fe/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Java 虚拟机之字节码"}],["meta",{"property":"og:description","content":"Java 虚拟机之字节码 字节码简介 Java 字节码是 Java 虚拟机执行的一种指令格式。之所以被称之为字节码，是因为：Java 字节码文件（.class）是一种以 8 位字节为基础单位的二进制流文件，各个数据项严格按照顺序紧凑地排列在 .class 文件中，中间没有添加任何分隔符。整个 .class 文件本质上就是一张表。 Java 能做到 “一次编译，到处运行”，一是因为 JVM 针对各种操作系统、平台都进行了定制；二是因为无论在什么平台，都可以编译生成固定格式的 Java 字节码文件（.class）。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-13T09:10:08.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JavaCore"}],["meta",{"property":"article:tag","content":"JVM"}],["meta",{"property":"article:tag","content":"字节码"}],["meta",{"property":"article:published_time","content":"2019-10-28T22:04:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-13T09:10:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 虚拟机之字节码\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-10-28T22:04:39.000Z\\",\\"dateModified\\":\\"2025-09-13T09:10:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"字节码简介","slug":"字节码简介","link":"#字节码简介","children":[]},{"level":2,"title":"类文件结构","slug":"类文件结构","link":"#类文件结构","children":[{"level":3,"title":"魔数","slug":"魔数","link":"#魔数","children":[]},{"level":3,"title":"版本号","slug":"版本号","link":"#版本号","children":[]},{"level":3,"title":"常量池","slug":"常量池","link":"#常量池","children":[]},{"level":3,"title":"访问标志","slug":"访问标志","link":"#访问标志","children":[]},{"level":3,"title":"类索引、父类索引、接口索引集合","slug":"类索引、父类索引、接口索引集合","link":"#类索引、父类索引、接口索引集合","children":[]},{"level":3,"title":"字段表集合","slug":"字段表集合","link":"#字段表集合","children":[]},{"level":3,"title":"方法表集合","slug":"方法表集合","link":"#方法表集合","children":[]},{"level":3,"title":"属性表集合","slug":"属性表集合","link":"#属性表集合","children":[]}]},{"level":2,"title":"字节码指令","slug":"字节码指令","link":"#字节码指令","children":[]},{"level":2,"title":"字节码增强","slug":"字节码增强","link":"#字节码增强","children":[{"level":3,"title":"Asm","slug":"asm","link":"#asm","children":[]},{"level":3,"title":"Javassist","slug":"javassist","link":"#javassist","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1743948422000,"updatedTime":1757754608000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":2}]},"readingTime":{"minutes":7.16,"words":2148},"filePathRelative":"01.Java/01.JavaCore/06.JVM/Java_虚拟机_字节码.md","localizedDate":"2019年10月28日","excerpt":"<h1> Java 虚拟机之字节码</h1>\\n<h2> 字节码简介</h2>\\n<p>Java 字节码是 Java 虚拟机执行的一种指令格式。之所以被称之为字节码，是因为：<strong>Java 字节码文件（<code>.class</code>）是一种以 8 位字节为基础单位的二进制流文件</strong>，各个数据项严格按照顺序紧凑地排列在 .class 文件中，中间没有添加任何分隔符。<strong>整个 .class 文件本质上就是一张表</strong>。</p>\\n<p>Java 能做到 “<strong>一次编译，到处运行</strong>”，一是因为 JVM 针对各种操作系统、平台都进行了定制；二是因为无论在什么平台，都可以编译生成固定格式的 Java 字节码文件（<code>.class</code>）。</p>","autoDesc":true}');export{e as data};
