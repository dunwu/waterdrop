const e=JSON.parse('{"key":"v-9f88f976","path":"/pages/eeaf22de/","title":"如何学习编程语言","lang":"zh-CN","frontmatter":{"title":"如何学习编程语言","date":"2018-01-05T09:08:00.000Z","order":1,"permalink":"/pages/eeaf22de/","category":["编程","编程范式"],"tag":["编程"],"description":"如何学习编程语言 前言 很多人喜欢争论什么什么编程语言好，我认为这个话题如果不限定应用范围，就毫无意义。 每种编程语言必然有其优点和缺点，这也决定了它有适合的应用场景和不适合的应用场景。现代软件行业，想一门编程语言包打天下是不现实的。这中现状也造成了一种现象，一个程序员往往要掌握多种编程语言。 学习任何一门编程语言，都会面临的第一个问题都是：如何学习 XX 语言？ 我不想说什么多看、多学、多写、多练之类的废话。世上事有难易乎？无他，唯手熟尔。谁不知道熟能生巧的道理？ 我觉得有必要谈谈的是：如何由浅入深的学习一门编程语言？学习所有编程语言有没有一个相对统一的学习方法？","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/eeaf22de/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"如何学习编程语言"}],["meta",{"property":"og:description","content":"如何学习编程语言 前言 很多人喜欢争论什么什么编程语言好，我认为这个话题如果不限定应用范围，就毫无意义。 每种编程语言必然有其优点和缺点，这也决定了它有适合的应用场景和不适合的应用场景。现代软件行业，想一门编程语言包打天下是不现实的。这中现状也造成了一种现象，一个程序员往往要掌握多种编程语言。 学习任何一门编程语言，都会面临的第一个问题都是：如何学习 XX 语言？ 我不想说什么多看、多学、多写、多练之类的废话。世上事有难易乎？无他，唯手熟尔。谁不知道熟能生巧的道理？ 我觉得有必要谈谈的是：如何由浅入深的学习一门编程语言？学习所有编程语言有没有一个相对统一的学习方法？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-18T15:46:22.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:published_time","content":"2018-01-05T09:08:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-18T15:46:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何学习编程语言\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-01-05T09:08:00.000Z\\",\\"dateModified\\":\\"2024-06-18T15:46:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"学习编程语言的步骤","slug":"学习编程语言的步骤","link":"#学习编程语言的步骤","children":[{"level":3,"title":"基本语法","slug":"基本语法","link":"#基本语法","children":[]},{"level":3,"title":"数组、枚举、集合","slug":"数组、枚举、集合","link":"#数组、枚举、集合","children":[]},{"level":3,"title":"常用类","slug":"常用类","link":"#常用类","children":[]},{"level":3,"title":"语言特性","slug":"语言特性","link":"#语言特性","children":[]},{"level":3,"title":"代码组织、模块加载、库管理","slug":"代码组织、模块加载、库管理","link":"#代码组织、模块加载、库管理","children":[]},{"level":3,"title":"容错处理","slug":"容错处理","link":"#容错处理","children":[]},{"level":3,"title":"输入输出和文件处理","slug":"输入输出和文件处理","link":"#输入输出和文件处理","children":[]},{"level":3,"title":"回调机制","slug":"回调机制","link":"#回调机制","children":[]},{"level":3,"title":"序列化和反序列化","slug":"序列化和反序列化","link":"#序列化和反序列化","children":[]},{"level":3,"title":"进阶特性","slug":"进阶特性","link":"#进阶特性","children":[]},{"level":3,"title":"库和框架","slug":"库和框架","link":"#库和框架","children":[]}]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1651071272000,"updatedTime":1718725582000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":5}]},"readingTime":{"minutes":6.94,"words":2083},"filePathRelative":"02.编程/01.编程范式/01.如何学习编程语言.md","localizedDate":"2018年1月5日","excerpt":"<h1> 如何学习编程语言</h1>\\n<h2> 前言</h2>\\n<p>很多人喜欢争论什么什么编程语言好，我认为这个话题如果不限定应用范围，就毫无意义。</p>\\n<p>每种编程语言必然有其优点和缺点，这也决定了它有适合的应用场景和不适合的应用场景。现代软件行业，想一门编程语言包打天下是不现实的。这中现状也造成了一种现象，一个程序员往往要掌握多种编程语言。</p>\\n<p>学习任何一门编程语言，都会面临的第一个问题都是：如何学习 XX 语言？</p>\\n<p>我不想说什么多看、多学、多写、多练之类的废话。世上事有难易乎？无他，唯手熟尔。谁不知道熟能生巧的道理？</p>\\n<p>我觉得有必要谈谈的是：如何由浅入深的学习一门编程语言？学习所有编程语言有没有一个相对统一的学习方法？</p>","autoDesc":true}');export{e as data};
