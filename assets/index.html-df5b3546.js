const e=JSON.parse('{"key":"v-480ade60","path":"/pages/adb721ae/","title":"Maven 教程","lang":"zh-CN","frontmatter":{"title":"Maven 教程","date":"2020-08-04T15:20:54.000Z","permalink":"/pages/adb721ae/","hidden":true,"index":false,"category":["Java","软件","构建","Maven"],"tag":["Java","构建","Maven"],"description":"Maven 教程 Maven 是一个项目管理工具。它负责管理项目开发过程中的几乎所有的东西。 版本 - maven 有自己的版本定义和规则。 构建 - maven 支持许多种的应用程序类型，对于每一种支持的应用程序类型都定义好了一组构建规则和工具集。 输出物管理 - maven 可以管理项目构建的产物，并将其加入到用户库中。这个功能可以用于项目组和其他部门之间的交付行为。 依赖关系 - maven 对依赖关系的特性进行细致的分析和划分，避免开发过程中的依赖混乱和相互污染行为 文档和构建结果 - maven 的 site 命令支持各种文档信息的发布，包括构建过程的各种输出，javadoc，产品文档等。 项目关系 - 一个大型的项目通常有几个小项目或者模块组成，用 maven 可以很方便地管理。 移植性管理 - maven 可以针对不同的开发场景，输出不同种类的输出结果。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/adb721ae/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Maven 教程"}],["meta",{"property":"og:description","content":"Maven 教程 Maven 是一个项目管理工具。它负责管理项目开发过程中的几乎所有的东西。 版本 - maven 有自己的版本定义和规则。 构建 - maven 支持许多种的应用程序类型，对于每一种支持的应用程序类型都定义好了一组构建规则和工具集。 输出物管理 - maven 可以管理项目构建的产物，并将其加入到用户库中。这个功能可以用于项目组和其他部门之间的交付行为。 依赖关系 - maven 对依赖关系的特性进行细致的分析和划分，避免开发过程中的依赖混乱和相互污染行为 文档和构建结果 - maven 的 site 命令支持各种文档信息的发布，包括构建过程的各种输出，javadoc，产品文档等。 项目关系 - 一个大型的项目通常有几个小项目或者模块组成，用 maven 可以很方便地管理。 移植性管理 - maven 可以针对不同的开发场景，输出不同种类的输出结果。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-18T15:46:22.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"构建"}],["meta",{"property":"article:tag","content":"Maven"}],["meta",{"property":"article:published_time","content":"2020-08-04T15:20:54.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-18T15:46:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Maven 教程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-08-04T15:20:54.000Z\\",\\"dateModified\\":\\"2024-06-18T15:46:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"📖 内容","slug":"📖-内容","link":"#📖-内容","children":[]},{"level":2,"title":"📚 资料","slug":"📚-资料","link":"#📚-资料","children":[]},{"level":2,"title":"🚪 传送","slug":"🚪-传送","link":"#🚪-传送","children":[]}],"git":{"createdTime":1655247928000,"updatedTime":1718725582000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":3}]},"readingTime":{"minutes":1.54,"words":463},"filePathRelative":"01.Java/11.软件/01.构建/01.Maven/README.md","localizedDate":"2020年8月4日","excerpt":"<h1> Maven 教程</h1>\\n<blockquote>\\n<p><a href=\\"https://github.com/apache/maven\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Maven</a> 是一个项目管理工具。它负责管理项目开发过程中的几乎所有的东西。</p>\\n<ul>\\n<li><strong>版本</strong> - maven 有自己的版本定义和规则。</li>\\n<li><strong>构建</strong> - maven 支持许多种的应用程序类型，对于每一种支持的应用程序类型都定义好了一组构建规则和工具集。</li>\\n<li><strong>输出物管理</strong> - maven 可以管理项目构建的产物，并将其加入到用户库中。这个功能可以用于项目组和其他部门之间的交付行为。</li>\\n<li><strong>依赖关系</strong> - maven 对依赖关系的特性进行细致的分析和划分，避免开发过程中的依赖混乱和相互污染行为</li>\\n<li><strong>文档和构建结果</strong> - maven 的 site 命令支持各种文档信息的发布，包括构建过程的各种输出，javadoc，产品文档等。</li>\\n<li><strong>项目关系</strong> - 一个大型的项目通常有几个小项目或者模块组成，用 maven 可以很方便地管理。</li>\\n<li><strong>移植性管理</strong> - maven 可以针对不同的开发场景，输出不同种类的输出结果。</li>\\n</ul>\\n</blockquote>","autoDesc":true}');export{e as data};
