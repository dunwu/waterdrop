import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as r,c,f as i,a as e,b as n,d as s,e as o}from"./app-80cb5bc0.js";const d={},p=e("h1",{id:"elasticsearch-mapping",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#elasticsearch-mapping","aria-hidden":"true"},"#"),n(" Elasticsearch Mapping")],-1),u=e("div",{class:"hint-container info"},[e("p",{class:"hint-container-title"},"概述"),e("p",null,"本文介绍了 Elasticsearch 常用的数据类型，以及如何在 Elasticsearch 中通过 Mapping 定义字段的数据类型。")],-1),h=o('<h2 id="mapping-简介" tabindex="-1"><a class="header-anchor" href="#mapping-简介" aria-hidden="true">#</a> Mapping 简介</h2><p>在 Elasticsearch 中，<strong><code>Mapping</code></strong>（映射），用来定义一个文档以及其所包含的字段如何被存储和索引，可以在映射中事先定义字段的数据类型、字段的权重、分词器等属性，就如同在关系型数据库中创建数据表时会设置字段的类型。简言之，<strong>Mapping 定义了索引中的文档有哪些字段及其类型、这些字段是如何存储和索引的，就好像数据库的表定义一样。</strong></p><p>Mapping 会把 json 文档映射成 Lucene 所需要的扁平格式</p><p>一个 Mapping 属于一个索引的 Type</p><ul><li>每个文档都属于一个 Type</li><li>一个 Type 有一个 Mapping 定义</li><li>7.0 开始，不需要在 Mapping 定义中指定 type 信息</li></ul><p>每个 <code>document</code> 都是 <code>field</code> 的集合，每个 <code>field</code> 都有自己的数据类型。映射数据时，可以创建一个 <code>mapping</code>，其中包含与 <code>document</code> 相关的 <code>field</code> 列表。映射定义还包括元数据 <code>field</code>，例如 <code>_source</code> ，它自定义如何处理 <code>document</code> 的关联元数据。</p><h2 id="映射分类" tabindex="-1"><a class="header-anchor" href="#映射分类" aria-hidden="true">#</a> 映射分类</h2><p>在 Elasticsearch 中，映射可分为<strong>静态映射</strong>和<strong>动态映射</strong>。在关系型数据库中写入数据之前首先要建表，在建表语句中声明字段的属性，在 Elasticsearch 中，则不必如此，Elasticsearch 最重要的功能之一就是让你尽可能快地开始探索数据，文档写入 Elasticsearch 中，它会根据字段的类型自动识别，这种机制称为<strong>动态映射</strong>，而<strong>静态映射</strong>则是写入数据之前对字段的属性进行手工设置。</p><h3 id="静态映射" tabindex="-1"><a class="header-anchor" href="#静态映射" aria-hidden="true">#</a> 静态映射</h3>',9),_={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/explicit-mapping.html",target:"_blank",rel:"noopener noreferrer"},g=e("strong",null,"静态映射",-1),m=o(`<p>例如：</p><ul><li>哪些字符串字段应被视为全文字段。</li><li>哪些字段包含数字、日期或地理位置。</li><li>日期值的格式。</li><li>用于控制动态添加字段的自定义规则。</li></ul><p>【示例】创建索引时，显示指定 mapping</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">PUT</span> <span class="token operator">/</span>my<span class="token operator">-</span>index<span class="token operator">-</span><span class="token number">000001</span>
<span class="token punctuation">{</span>
  <span class="token string-property property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span>    <span class="token punctuation">{</span> <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;integer&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;email&quot;</span><span class="token operator">:</span>  <span class="token punctuation">{</span> <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;keyword&quot;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span>   <span class="token punctuation">{</span> <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span>  <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>【示例】在已存在的索引中，指定一个 field 的属性</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">PUT</span> <span class="token operator">/</span>my<span class="token operator">-</span>index<span class="token operator">-</span><span class="token number">000001</span><span class="token operator">/</span>_mapping
<span class="token punctuation">{</span>
  <span class="token string-property property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;employee-id&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;keyword&quot;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>【示例】查看 mapping</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET /my-index-000001/_mapping
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>【示例】查看指定 field 的 mapping</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET /my-index-000001/_mapping/field/employee-id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="动态映射" tabindex="-1"><a class="header-anchor" href="#动态映射" aria-hidden="true">#</a> 动态映射</h3><p>动态映射机制，允许用户不手动定义映射，Elasticsearch 会自动识别字段类型。在实际项目中，如果遇到的业务在导入数据之前不确定有哪些字段，也不清楚字段的类型是什么，使用动态映射非常合适。当 Elasticsearch 在文档中碰到一个以前没见过的字段时，它会利用动态映射来决定该字段的类型，并自动把该字段添加到映射中。</p><p>示例：创建一个名为 <code>data</code> 的索引、其 <code>mapping</code> 类型为 <code>_doc</code>，并且有一个类型为 <code>long</code> 的字段 <code>count</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>PUT data/_doc/1
<span class="token punctuation">{</span> <span class="token string">&quot;count&quot;</span><span class="token builtin class-name">:</span> <span class="token number">5</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="动态字段映射" tabindex="-1"><a class="header-anchor" href="#动态字段映射" aria-hidden="true">#</a> 动态字段映射</h3>`,15),f={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-field-mapping.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic.html",target:"_blank",rel:"noopener noreferrer"},w=e("code",null,"dynamic",-1),b=e("code",null,"true",-1),v=e("code",null,"runtime",-1),y={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic.html",target:"_blank",rel:"noopener noreferrer"},q=e("code",null,"dynamic",-1),x=o("<table><thead><tr><th>可选值</th><th>说明</th></tr></thead><tbody><tr><td><code>true</code></td><td>新字段被添加到 mapping 中。mapping 的默认设置。</td></tr><tr><td><code>runtime</code></td><td>新字段被添加到 mapping 中并作为运行时字段——这些字段不会被索引，但是可以在查询时出现在 <code>_source</code> 中。</td></tr><tr><td><code>false</code></td><td>新字段不会被索引或搜索，但仍会出现在返回匹配的 <code>_source</code> 字段中。这些字段不会添加到映射中，并且必须显式添加新字段。</td></tr><tr><td><code>strict</code></td><td>如果检测到新字段，则会抛出异常并拒绝文档。必须将新字段显式添加到映射中。</td></tr></tbody></table><blockquote><p>需要注意的是：对已有字段，一旦已经有数据写入，就不再支持修改字段定义。如果希望改变字段类型，必须重建索引。这是由于 Lucene 实现的倒排索引，一旦生成后，就不允许修改。如果修改了字段的数据类型，会导致已被索引的字段无法被搜索。</p></blockquote><p>启用动态字段映射后，Elasticsearch 使用内置规则来确定如何映射每个字段的数据类型。规则如下：</p>",3),E=e("thead",null,[e("tr",null,[e("th",null,[e("strong",null,"JSON 数据类型")]),e("th",null,[e("strong",null,[e("code",null,'"dynamic":"true"')])]),e("th",null,[e("strong",null,[e("code",null,'"dynamic":"runtime"')])])])],-1),j=e("tr",null,[e("td",null,[e("code",null,"null")]),e("td",null,"没有字段被添加"),e("td",null,"没有字段被添加")],-1),z=e("tr",null,[e("td",null,[e("code",null,"true"),n(" or "),e("code",null,"false")]),e("td",null,[e("code",null,"boolean"),n(" 类型")]),e("td",null,[e("code",null,"boolean"),n(" 类型")])],-1),M=e("tr",null,[e("td",null,"浮点型数字"),e("td",null,[e("code",null,"float"),n(" 类型")]),e("td",null,[e("code",null,"double"),n(" 类型")])],-1),N=e("tr",null,[e("td",null,"数字"),e("td",null,"数字型"),e("td",null,[e("code",null,"long"),n(" 类型")])],-1),T=e("tr",null,[e("td",null,"JSON 对象"),e("td",null,[e("code",null,"object"),n(" 类型")]),e("td",null,"没有字段被添加")],-1),S=e("tr",null,[e("td",null,"数组"),e("td",null,"由数组中第一个非空值决定"),e("td",null,"由数组中第一个非空值决定")],-1),P={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-field-mapping.html#date-detection",target:"_blank",rel:"noopener noreferrer"},L=e("td",null,[e("code",null,"date"),n(" 类型")],-1),I=e("td",null,[e("code",null,"date"),n(" 类型")],-1),J={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-field-mapping.html#numeric-detection",target:"_blank",rel:"noopener noreferrer"},O=e("td",null,[e("code",null,"float"),n(" 类型或 "),e("code",null,"long"),n("类型")],-1),U=e("td",null,[e("code",null,"double"),n(" 类型或 "),e("code",null,"long"),n(" 类型")],-1),V=e("tr",null,[e("td",null,"什么也没开启的字符串"),e("td",null,[n("带有 "),e("code",null,".keyword"),n(" 子 field 的 "),e("code",null,"text"),n(" 类型")]),e("td",null,[e("code",null,"keyword"),n(" 类型")])],-1),B=o(`<p>下面举一个例子认识动态 mapping，在 Elasticsearch 中创建一个新的索引并查看它的 mapping，命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>PUT books
GET books/_mapping
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>此时 books 索引的 mapping 是空的，返回结果如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;books&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再往 books 索引中写入一条文档，命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>PUT books/it/1
<span class="token punctuation">{</span>
	<span class="token string">&quot;id&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
	<span class="token string">&quot;publish_date&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;2019-11-10&quot;</span>,
	<span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;master Elasticsearch&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文档写入完成之后，再次查看 mapping，返回结果如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;books&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;long&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;keyword&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;keyword&quot;</span><span class="token punctuation">,</span>
              <span class="token property">&quot;ignore_above&quot;</span><span class="token operator">:</span> <span class="token number">256</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;publish_date&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;date&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>动态映射有时可能会错误的识别字段类型，这种情况下，可能会导致一些功能无法正常使用，如 Range 查询。所以，使用动态 mapping 要结合实际业务需求来综合考虑，如果将 Elasticsearch 当作主要的数据存储使用，并且希望出现未知字段时抛出异常来提醒你注意这一问题，那么开启动态 mapping 并不适用。</p><h3 id="动态模板" tabindex="-1"><a class="header-anchor" href="#动态模板" aria-hidden="true">#</a> 动态模板</h3>`,10),A={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-templates.html",target:"_blank",rel:"noopener noreferrer"},D=e("code",null,"mapping",-1),G=o(`<p>动态模板可以设置匹配条件，只有匹配的情况下才使用动态模板：</p><ul><li><code>match_mapping_type</code> 对 Elasticsearch 检测到的数据类型进行操作</li><li><code>match</code> 和 <code>unmatch</code> 使用模式匹配字段名称</li><li><code>path_match</code> 和 <code>path_unmatch</code> 对字段的完整虚线路径进行操作</li><li>如果动态模板没有定义 <code>match_mapping_type</code>、<code>match</code> 或 <code>path_match</code>，则不会匹配任何字段。您仍然可以在批量请求的 <code>dynamic_templates</code> 部分按名称引用模板。</li></ul><p>【示例】当设置 <code>&#39;dynamic&#39;:&#39;true&#39;</code> 时，Elasticsearch 会将字符串字段映射为带有关键字子字段的文本字段。如果只是索引结构化内容并且对全文搜索不感兴趣，可以让 Elasticsearch 仅将字段映射为关键字字段。这种情况下，只有完全匹配才能搜索到这些字段。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">PUT</span> my<span class="token operator">-</span>index<span class="token operator">-</span><span class="token number">000001</span>
<span class="token punctuation">{</span>
  <span class="token string-property property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;dynamic_templates&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;strings_as_keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string-property property">&quot;match_mapping_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
          <span class="token string-property property">&quot;mapping&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;keyword&quot;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运行时字段" tabindex="-1"><a class="header-anchor" href="#运行时字段" aria-hidden="true">#</a> 运行时字段</h2><p>运行时字段是在查询时评估的字段。运行时字段有以下作用：</p><ul><li>在不重新索引数据的情况下，向现有文档添加字段</li><li>在不了解数据结构的情况下，也可以处理数据</li><li>在查询时覆盖从索引字段返回的值</li><li>为特定用途定义字段而不修改底层架构</li></ul><p>检索 Elasticsearch 时，运行时字段和其他字段并没有什么不同。</p><p>需要注意的是：使用 <code>_search</code> API 上的 <code>fields</code> 参数来检索运行时字段的值。运行时字段不会显示在 <code>_source</code> 中，但 <code>fields</code> API 适用于所有字段，即使是那些未作为原始 <code>_source</code> 的一部分发送的字段。</p><p>运行时字段在处理日志数据时很有用，尤其是当日志是不确定的数据结构时：这种情况下，会降低搜索速度，但您的索引大小要小得多，您可以更快地处理日志，而无需为它们设置索引。</p><p>因为<strong>运行时字段没有被索引</strong>，所以添加运行时字段不会增加索引大小。用户可以直接在 mapping 中定义运行时字段，从而节省存储成本并提高采集数据的速度。定义了运行时字段后，可以立即在搜索请求、聚合、过滤和排序中使用它。</p><p>如果将运行时字段设为索引字段，则无需修改任何引用运行时字段的查询。更好的是，您可以引用字段是运行时字段的一些索引，以及字段是索引字段的其他索引。您可以灵活地选择要索引哪些字段以及保留哪些字段作为运行时字段。</p><p>就其核心而言，运行时字段最重要的好处是能够在您提取字段后将字段添加到文档中。此功能简化了映射决策，因为您不必预先决定如何解析数据，并且可以使用运行时字段随时修改映射。使用运行时字段允许更小的索引和更快的摄取时间，这结合使用更少的资源并降低您的运营成本。</p><h2 id="字段数据类型" tabindex="-1"><a class="header-anchor" href="#字段数据类型" aria-hidden="true">#</a> 字段数据类型</h2><p>在 Elasticsearch 中，每个字段都有一个字段数据类型或字段类型，用于指示字段包含的数据类型（例如字符串或布尔值）及其预期用途。字段类型按系列分组。同一族中的类型具有完全相同的搜索行为，但可能具有不同的空间使用或性能特征。</p><p>Elasticsearch 提供了非常丰富的数据类型，官方将其分为以下几类：</p>`,16),C=e("p",null,[e("strong",null,"普通类型")],-1),Q={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/binary.html",target:"_blank",rel:"noopener noreferrer"},R=e("code",null,"binary",-1),K={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/boolean.html",target:"_blank",rel:"noopener noreferrer"},X=e("code",null,"boolean",-1),F={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/keyword.html",target:"_blank",rel:"noopener noreferrer"},H=e("code",null,"keyword",-1),W=e("code",null,"constant_keyword",-1),Y=e("code",null,"wildcard",-1),Z={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/number.html",target:"_blank",rel:"noopener noreferrer"},$=e("code",null,"long",-1),ee=e("code",null,"double",-1),ne=e("strong",null,"Dates",-1),te={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/date.html",target:"_blank",rel:"noopener noreferrer"},se=e("code",null,"date",-1),oe={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/date_nanos.html",target:"_blank",rel:"noopener noreferrer"},ae=e("code",null,"date_nanos",-1),le={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/field-alias.html",target:"_blank",rel:"noopener noreferrer"},re=e("code",null,"alias",-1),ce=e("p",null,[e("strong",null,"对象类型")],-1),ie={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/object.html",target:"_blank",rel:"noopener noreferrer"},de=e("code",null,"object",-1),pe={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/flattened.html",target:"_blank",rel:"noopener noreferrer"},ue=e("code",null,"flattened",-1),he={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/nested.html",target:"_blank",rel:"noopener noreferrer"},_e=e("code",null,"nested",-1),ge={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/parent-join.html",target:"_blank",rel:"noopener noreferrer"},me=e("code",null,"join",-1),fe=e("p",null,[e("strong",null,"结构化数据类型")],-1),ke={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/range.html",target:"_blank",rel:"noopener noreferrer"},we=e("code",null,"long_range",-1),be=e("code",null,"double_range",-1),ve=e("code",null,"date_range",-1),ye=e("code",null,"ip_range",-1),qe={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/ip.html",target:"_blank",rel:"noopener noreferrer"},xe=e("code",null,"ip",-1),Ee={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/version.html",target:"_blank",rel:"noopener noreferrer"},je=e("code",null,"version",-1),ze={href:"https://semver.org/",target:"_blank",rel:"noopener noreferrer"},Me={href:"https://www.elastic.co/guide/en/elasticsearch/plugins/8.2/mapper-murmur3.html",target:"_blank",rel:"noopener noreferrer"},Ne=e("code",null,"murmur3",-1),Te=e("p",null,[e("strong",null,"聚合数据类型")],-1),Se={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/aggregate-metric-double.html",target:"_blank",rel:"noopener noreferrer"},Pe=e("code",null,"aggregate_metric_double",-1),Le={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/histogram.html",target:"_blank",rel:"noopener noreferrer"},Ie=e("code",null,"histogram",-1),Je=e("p",null,[e("strong",null,"文本搜索类型")],-1),Oe={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/text.html",target:"_blank",rel:"noopener noreferrer"},Ue=e("code",null,"text",-1),Ve=e("code",null,"text",-1),Be=e("code",null,"match_only_text",-1),Ae={href:"https://www.elastic.co/guide/en/elasticsearch/plugins/8.2/mapper-annotated-text.html",target:"_blank",rel:"noopener noreferrer"},De=e("code",null,"annotated-text",-1),Ge={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-suggesters.html#completion-suggester",target:"_blank",rel:"noopener noreferrer"},Ce=e("code",null,"completion",-1),Qe={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-as-you-type.html",target:"_blank",rel:"noopener noreferrer"},Re=e("code",null,"search_as_you_type",-1),Ke={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/token-count.html",target:"_blank",rel:"noopener noreferrer"},Xe=e("code",null,"token_count",-1),Fe=e("p",null,[e("strong",null,"文档排名类型")],-1),He={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/dense-vector.html",target:"_blank",rel:"noopener noreferrer"},We=e("code",null,"dense_vector",-1),Ye={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/rank-feature.html",target:"_blank",rel:"noopener noreferrer"},Ze=e("code",null,"rank_feature",-1),$e={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/rank-features.html",target:"_blank",rel:"noopener noreferrer"},en=e("code",null,"rank_features",-1),nn=e("p",null,[e("strong",null,"空间数据类型")],-1),tn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/geo-point.html",target:"_blank",rel:"noopener noreferrer"},sn=e("code",null,"geo_point",-1),on={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/geo-shape.html",target:"_blank",rel:"noopener noreferrer"},an=e("code",null,"geo_shape",-1),ln={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/point.html",target:"_blank",rel:"noopener noreferrer"},rn=e("code",null,"point",-1),cn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/shape.html",target:"_blank",rel:"noopener noreferrer"},dn=e("code",null,"shape",-1),pn=e("p",null,[e("strong",null,"其他类型")],-1),un={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/percolator.html",target:"_blank",rel:"noopener noreferrer"},hn=e("code",null,"percolator",-1),_n={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html",target:"_blank",rel:"noopener noreferrer"},gn=e("h3",{id:"元数据字段",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#元数据字段","aria-hidden":"true"},"#"),n(" 元数据字段")],-1),mn=e("p",null,[n("一个文档中，不仅仅包含数据 ，也包含"),e("strong",null,"元数据"),n("。元数据是用于描述文档的信息。")],-1),fn=e("strong",null,"标识元数据字段",-1),kn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-index-field.html",target:"_blank",rel:"noopener noreferrer"},wn=e("code",null,"_index",-1),bn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-id-field.html",target:"_blank",rel:"noopener noreferrer"},vn=e("code",null,"_id",-1),yn=e("strong",null,"文档 source 元数据字段",-1),qn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-source-field.html",target:"_blank",rel:"noopener noreferrer"},xn=e("code",null,"_source",-1),En={href:"https://www.elastic.co/guide/en/elasticsearch/plugins/8.2/mapper-size.html",target:"_blank",rel:"noopener noreferrer"},jn=e("code",null,"_size",-1),zn=e("code",null,"_source",-1),Mn={href:"https://www.elastic.co/guide/en/elasticsearch/plugins/8.2/mapper-size.html",target:"_blank",rel:"noopener noreferrer"},Nn=e("code",null,"mapper-size",-1),Tn=e("strong",null,"文档计数元数据字段",-1),Sn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-doc-count-field.html",target:"_blank",rel:"noopener noreferrer"},Pn=e("code",null,"_doc_count",-1),Ln=e("strong",null,"索引元数据字段",-1),In={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-field-names-field.html",target:"_blank",rel:"noopener noreferrer"},Jn=e("code",null,"_field_names",-1),On={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-ignored-field.html",target:"_blank",rel:"noopener noreferrer"},Un=e("code",null,"_ignored",-1),Vn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/ignore-malformed.html",target:"_blank",rel:"noopener noreferrer"},Bn=e("code",null,"ignore_malformed",-1),An=e("strong",null,"路由元数据字段",-1),Dn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-routing-field.html",target:"_blank",rel:"noopener noreferrer"},Gn=e("code",null,"_routing",-1),Cn=e("strong",null,"其他元数据字段",-1),Qn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-meta-field.html",target:"_blank",rel:"noopener noreferrer"},Rn=e("code",null,"_meta",-1),Kn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-tier-field.html",target:"_blank",rel:"noopener noreferrer"},Xn=e("code",null,"_tier",-1),Fn=e("h2",{id:"映射参数",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#映射参数","aria-hidden":"true"},"#"),n(" 映射参数")],-1),Hn=e("p",null,"Elasticsearch 提供了以下映射参数：",-1),Wn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/analyzer.html",target:"_blank",rel:"noopener noreferrer"},Yn=e("code",null,"analyzer",-1),Zn={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/coerce.html",target:"_blank",rel:"noopener noreferrer"},$n=e("code",null,"coerce",-1),et={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/copy-to.html",target:"_blank",rel:"noopener noreferrer"},nt=e("code",null,"copy_to",-1),tt={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/doc-values.html",target:"_blank",rel:"noopener noreferrer"},st=e("code",null,"doc_values",-1),ot={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic.html",target:"_blank",rel:"noopener noreferrer"},at=e("code",null,"dynamic",-1),lt={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/eager-global-ordinals.html",target:"_blank",rel:"noopener noreferrer"},rt=e("code",null,"eager_global_ordinals",-1),ct={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/enabled.html",target:"_blank",rel:"noopener noreferrer"},it=e("code",null,"enabled",-1),dt=e("code",null,"object",-1),pt=e("code",null,"false",-1),ut={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/fielddata.html",target:"_blank",rel:"noopener noreferrer"},ht=e("code",null,"fielddata",-1),_t=e("code",null,"text",-1),gt=e("code",null,"fielddata=true",-1),mt=e("code",null,"text",-1),ft={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/multi-fields.html",target:"_blank",rel:"noopener noreferrer"},kt=e("code",null,"fields",-1),wt=e("code",null,"fields",-1),bt={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-date-format.html",target:"_blank",rel:"noopener noreferrer"},vt=e("code",null,"format",-1),yt={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/ignore-above.html",target:"_blank",rel:"noopener noreferrer"},qt=e("code",null,"ignore_above",-1),xt=e("code",null,"ignore_above",-1),Et={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/ignore-malformed.html",target:"_blank",rel:"noopener noreferrer"},jt=e("code",null,"ignore_malformed",-1),zt=e("code",null,"ignore_malformed",-1),Mt=e("code",null,"true",-1),Nt={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/index-options.html",target:"_blank",rel:"noopener noreferrer"},Tt=e("code",null,"index_options",-1),St=e("code",null,"text",-1),Pt=e("code",null,"keyword",-1),Lt={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/index-phrases.html",target:"_blank",rel:"noopener noreferrer"},It=e("code",null,"index_phrases",-1),Jt={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/index-prefixes.html",target:"_blank",rel:"noopener noreferrer"},Ot=e("code",null,"index_prefixes",-1),Ut={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-index.html",target:"_blank",rel:"noopener noreferrer"},Vt=e("code",null,"index",-1),Bt=e("code",null,"index",-1),At={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-field-meta.html",target:"_blank",rel:"noopener noreferrer"},Dt=e("code",null,"meta",-1),Gt={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/normalizer.html",target:"_blank",rel:"noopener noreferrer"},Ct=e("code",null,"normalizer",-1),Qt=e("code",null,"keyword",-1),Rt=e("code",null,"normalizer",-1),Kt={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/analyzer.html",target:"_blank",rel:"noopener noreferrer"},Xt=e("code",null,"analyzer",-1),Ft=e("code",null,"normalizer",-1),Ht=e("code",null,"keyword",-1),Wt={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/norms.html",target:"_blank",rel:"noopener noreferrer"},Yt=e("code",null,"norms",-1),Zt=e("code",null,"norms",-1),$t={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/null-value.html",target:"_blank",rel:"noopener noreferrer"},es=e("code",null,"null_value",-1),ns=e("code",null,"null_value",-1),ts={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/position-increment-gap.html",target:"_blank",rel:"noopener noreferrer"},ss=e("code",null,"position_increment_gap",-1),os=e("code",null,"position_increment_gap",-1),as={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/properties.html",target:"_blank",rel:"noopener noreferrer"},ls=e("code",null,"properties",-1),rs={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-analyzer.html",target:"_blank",rel:"noopener noreferrer"},cs=e("code",null,"search_analyzer",-1),is={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-edgengram-tokenizer.html",target:"_blank",rel:"noopener noreferrer"},ds=e("code",null,"edge_ngram",-1),ps={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/similarity.html",target:"_blank",rel:"noopener noreferrer"},us=e("code",null,"similarity",-1),hs=e("code",null,"text",-1),_s=e("code",null,"keyword",-1),gs={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-store.html",target:"_blank",rel:"noopener noreferrer"},ms=e("code",null,"store",-1),fs=e("code",null,"_source",-1),ks=e("code",null,"_source",-1),ws={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-fields.html#source-filtering",target:"_blank",rel:"noopener noreferrer"},bs={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/term-vector.html",target:"_blank",rel:"noopener noreferrer"},vs=e("code",null,"term_vector",-1),ys=e("ul",null,[e("li",null,"术语列表"),e("li",null,"每个 term 的位置（或顺序）"),e("li",null,"起始和结束字符偏移量，用于将 term 和原始字符串进行映射"),e("li",null,"有效负载（如果可用） - 用户定义的，与 term 位置相关的二进制数据")],-1),qs=o('<h2 id="映射配置" tabindex="-1"><a class="header-anchor" href="#映射配置" aria-hidden="true">#</a> 映射配置</h2><ul><li><code>index.mapping.total_fields.limit</code>：索引中的最大字段数。字段和对象映射以及字段别名计入此限制。默认值为 <code>1000</code>。</li><li><code>index.mapping.depth.limit</code>：字段的最大深度，以内部对象的数量来衡量。例如，如果所有字段都在根对象级别定义，则深度为 <code>1</code>。如果有一个对象映射，则深度为 <code>2</code>，以此类推。默认值为 <code>20</code>。</li><li><code>index.mapping.nested_fields.limit</code>：索引中不同 <code>nested</code> 映射的最大数量。 <code>nested</code> 类型只应在特殊情况下使用，即需要相互独立地查询对象数组。为了防止设计不佳的映射，此设置限制了每个索引的唯一 <code>nested</code> 类型的数量。默认值为 <code>50</code>。</li><li><code>index.mapping.nested_objects.limit</code>：单个文档中，所有 <code>nested</code> 类型中包含的最大嵌套 JSON 对象数。当文档包含太多 <code>nested</code> 对象时，此限制有助于防止出现内存溢出。默认值为 <code>10000</code>。</li><li><code>index.mapping.field_name_length.limit</code>：设置字段名称的最大长度。默认为 Long.MAX_VALUE（无限制）。</li></ul><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>',3),xs={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html",target:"_blank",rel:"noopener noreferrer"},Es={href:"https://www.itshujia.com/read/elasticsearch/351.html",target:"_blank",rel:"noopener noreferrer"};function js(zs,Ms){const t=l("ExternalLinkIcon");return r(),c("div",null,[p,u,i(" more "),h,e("p",null,[n("Elasticsearch 官方将静态映射称为"),e("strong",null,[n("显式映射（"),e("a",_,[n("Explicit mapping"),s(t)]),n("）")]),n("。"),g,n("是在创建索引时手工指定索引映射。静态映射和 SQL 中在建表语句中指定字段属性类似。相比动态映射，通过静态映射可以添加更详细、更精准的配置信息。")]),m,e("p",null,[n("动态字段映射（"),e("a",f,[n("Dynamic field mappings"),s(t)]),n("）是用于管理动态字段检测的规则。当 Elasticsearch 在文档中检测到新字段时，默认情况下会动态将该字段添加到类型映射中。")]),e("p",null,[n("在 mapping 中可以通过将 "),e("a",k,[w,s(t)]),n(" 参数设置为 "),b,n(" 或 "),v,n(" 来开启动态映射。")]),e("p",null,[e("a",y,[q,s(t)]),n(" 不同设置的作用：")]),x,e("table",null,[E,e("tbody",null,[j,z,M,N,T,S,e("tr",null,[e("td",null,[n("开启 "),e("a",P,[n("日期检测"),s(t)]),n(" 的字符串")]),L,I]),e("tr",null,[e("td",null,[n("开启 "),e("a",J,[n("数字检测"),s(t)]),n(" 的字符串")]),O,U]),V])]),B,e("p",null,[n("**动态模板（"),e("a",A,[n("dynamic templates"),s(t)]),n("）**是用于给 "),D,n(" 动态添加字段的自定义规则。")]),G,e("ul",null,[e("li",null,[C,e("ul",null,[e("li",null,[e("a",Q,[R,s(t)]),n("：编码为 Base64 字符串的二进制值。")]),e("li",null,[e("a",K,[X,s(t)]),n("：布尔类型，值为 true 或 false。")]),e("li",null,[e("a",F,[n("Keywords"),s(t)]),n("：keyword 族类型，包括 "),H,n("、"),W,n(" 和 "),Y,n("。")]),e("li",null,[e("a",Z,[n("Numbers"),s(t)]),n("：数字类型，如 "),$,n(" 和 "),ee]),e("li",null,[ne,n("：日期类型，包括 "),e("a",te,[se,s(t)]),n(" 和 "),e("a",oe,[ae,s(t)]),n("。")]),e("li",null,[e("a",le,[re,s(t)]),n("：用于定义存在字段的别名。")])])]),e("li",null,[ce,e("ul",null,[e("li",null,[e("a",ie,[de,s(t)]),n("：JSON 对象")]),e("li",null,[e("a",pe,[ue,s(t)]),n("：整个 JSON 对象作为单个字段值。")]),e("li",null,[e("a",he,[_e,s(t)]),n("：保留其子字段之间关系的 JSON 对象。")]),e("li",null,[e("a",ge,[me,s(t)]),n("：为同一索引中的文档定义父/子关系。")])])]),e("li",null,[fe,e("ul",null,[e("li",null,[e("a",ke,[n("Range"),s(t)]),n("：范围类型，例如："),we,n("、"),be,n("、"),ve,n(" 和 "),ye,n("。")]),e("li",null,[e("a",qe,[xe,s(t)]),n("：IPv4 和 IPv6 地址。")]),e("li",null,[e("a",Ee,[je,s(t)]),n("：版本号。支持 "),e("a",ze,[n("Semantic Versioning"),s(t)]),n(" 优先规则。")]),e("li",null,[e("a",Me,[Ne,s(t)]),n("：计算并存储 hash 值。")])])]),e("li",null,[Te,e("ul",null,[e("li",null,[e("a",Se,[Pe,s(t)]),n("：预先聚合的指标值")]),e("li",null,[e("a",Le,[Ie,s(t)]),n("：直方图式的预聚合数值。")])])]),e("li",null,[Je,e("ul",null,[e("li",null,[e("a",Oe,[Ue,n(" fields"),s(t)]),n("：text 族类型，包括 "),Ve,n(" 和 "),Be,n("。")]),e("li",null,[e("a",Ae,[De,s(t)]),n("：包含特殊标记的文本。用于识别命名实体。")]),e("li",null,[e("a",Ge,[Ce,s(t)]),n("：用于自动补全。")]),e("li",null,[e("a",Qe,[Re,s(t)]),n("：键入时完成的类似文本的类型。")]),e("li",null,[e("a",Ke,[Xe,s(t)]),n("：文本中标记的计数。")])])]),e("li",null,[Fe,e("ul",null,[e("li",null,[e("a",He,[We,s(t)]),n("：记录浮点数的密集向量。")]),e("li",null,[e("a",Ye,[Ze,s(t)]),n("：记录一个数字特征，为了在查询时提高命中率。")]),e("li",null,[e("a",$e,[en,s(t)]),n("：记录多个数字特征，为了在查询时提高命中率。")])])]),e("li",null,[nn,e("ul",null,[e("li",null,[e("a",tn,[sn,s(t)]),n("：地理经纬度")]),e("li",null,[e("a",on,[an,s(t)]),n("：复杂的形状，例如多边形")]),e("li",null,[e("a",ln,[rn,s(t)]),n("：任意笛卡尔点")]),e("li",null,[e("a",cn,[dn,s(t)]),n("：任意笛卡尔几何形状")])])]),e("li",null,[pn,e("ul",null,[e("li",null,[e("a",un,[hn,s(t)]),n("：使用 "),e("a",_n,[n("Query DSL"),s(t)]),n(" 编写的索引查询")])])])]),gn,mn,e("ul",null,[e("li",null,[fn,e("ul",null,[e("li",null,[e("a",kn,[wn,s(t)]),n("：文档所属的索引。")]),e("li",null,[e("a",bn,[vn,s(t)]),n("：文档的 ID。")])])]),e("li",null,[yn,e("ul",null,[e("li",null,[e("a",qn,[xn,s(t)]),n("：文档正文的原始 JSON。")]),e("li",null,[e("a",En,[jn,s(t)]),n("："),zn,n(" 字段的大小（以字节为单位），由 "),e("a",Mn,[Nn,s(t)]),n(" 插件提供。")])])]),e("li",null,[Tn,e("ul",null,[e("li",null,[e("a",Sn,[Pn,s(t)]),n("：当文档表示预聚合数据时，用于存储文档计数的自定义字段。")])])]),e("li",null,[Ln,e("ul",null,[e("li",null,[e("a",In,[Jn,s(t)]),n("：文档中的所有非空字段。")]),e("li",null,[e("a",On,[Un,s(t)]),n("：文档中所有的由于 "),e("a",Vn,[Bn,s(t)]),n(" 而在索引时被忽略的字段。")])])]),e("li",null,[An,e("ul",null,[e("li",null,[e("a",Dn,[Gn,s(t)]),n("：将文档路由到特定分片的自定义路由值。")])])]),e("li",null,[Cn,e("ul",null,[e("li",null,[e("a",Qn,[Rn,s(t)]),n("：应用程序特定的元数据。")]),e("li",null,[e("a",Kn,[Xn,s(t)]),n("：文档所属索引的当前数据层首选项。")])])])]),Fn,Hn,e("ul",null,[e("li",null,[e("a",Wn,[Yn,s(t)]),n("：指定在索引或搜索文本字段时用于文本分析的分析器。")]),e("li",null,[e("a",Zn,[$n,s(t)]),n("：如果开启，Elasticsearch 将尝试清理脏数据以适应字段的数据类型。")]),e("li",null,[e("a",et,[nt,s(t)]),n("：允许将多个字段的值复制到一个组字段中，然后可以将其作为单个字段进行查询。")]),e("li",null,[e("a",tt,[st,s(t)]),n("：默认情况下，所有字段都是被")]),e("li",null,[e("a",ot,[at,s(t)]),n("：是否开启动态映射。")]),e("li",null,[e("a",lt,[rt,s(t)]),n("：当在 global ordinals 的时候，refresh 以后下一次查询字典就需要重新构建，在追求查询的场景下很影响查询性能。可以使用 eager_global_ordinals，即在每次 refresh 以后即可更新字典，字典常驻内存，减少了查询的时候构建字典的耗时。")]),e("li",null,[e("a",ct,[it,s(t)]),n("：只能应用于顶级 mapping 定义和 "),dt,n(" 字段。设置为 "),pt,n(" 后，Elasticsearch 解析时，会完全跳过该字段。")]),e("li",null,[e("a",ut,[ht,s(t)]),n("：默认情况下， "),_t,n(" 字段是可搜索的，但不可用于聚合、排序或脚本。如果为字段设置 "),gt,n("，就会通过反转倒排索引将 fielddata 加载到内存中。请注意，这可能会占用大量内存。如果想对 "),mt,n(" 字段进行聚合、排序或脚本操作，fielddata 是唯一方法。")]),e("li",null,[e("a",ft,[kt,s(t)]),n("：有时候，同一个字段需要以不同目的进行索引，此时可以通过 "),wt,n(" 进行配置。")]),e("li",null,[e("a",bt,[vt,s(t)]),n("：用于格式化日期类型。")]),e("li",null,[e("a",yt,[qt,s(t)]),n("：字符串长度大于 "),xt,n(" 所设，则不会被索引或存储。")]),e("li",null,[e("a",Et,[jt,s(t)]),n("：有时候，同一个字段，可能会存储不同的数据类型。默认情况下，Elasticsearch 解析字段数据类型失败时，会引发异常，并拒绝整个文档。 如果设置 "),zt,n(" 为 "),Mt,n("，则允许忽略异常。这种情况下，格式错误的字段不会被索引，但文档中的其他字段可以正常处理。")]),e("li",null,[e("a",Nt,[Tt,s(t)]),n(" 用于控制将哪些信息添加到倒排索引以进行搜索和突出显示。只有 "),St,n(" 和 "),Pt,n(" 等基于术语（term）的字段类型支持此配置。")]),e("li",null,[e("a",Lt,[It,s(t)]),n("：如果启用，两个词的组合（shingles）将被索引到一个单独的字段中。这允许以更大的索引为代价，更有效地运行精确的短语查询（无 slop）。请注意，当停用词未被删除时，此方法效果最佳，因为包含停用词的短语将不使用辅助字段，并将回退到标准短语查询。接受真或假（默认）。")]),e("li",null,[e("a",Jt,[Ot,s(t)]),n("：index_prefixes 参数启用 term 前缀索引以加快前缀搜索。")]),e("li",null,[e("a",Ut,[Vt,s(t)]),n("："),Bt,n(" 选项控制字段值是否被索引。默认为 true。")]),e("li",null,[e("a",At,[Dt,s(t)]),n("：附加到字段的元数据。此元数据对 Elasticsearch 是不透明的，它仅适用于多个应用共享相同索引的元数据信息，例如：单位。")]),e("li",null,[e("a",Gt,[Ct,s(t)]),n("："),Qt,n(" 字段的 "),Rt,n(" 属性类似于 "),e("a",Kt,[Xt,s(t)]),n(" ，只是它保证分析链只产生单个标记。 "),Ft,n(" 在索引 "),Ht,n(" 之前应用，以及在搜索时通过查询解析器（例如匹配查询）或通过术语级别查询（例如术语查询）搜索关键字字段时应用。")]),e("li",null,[e("a",Wt,[Yt,s(t)]),n("："),Zt,n(" 存储在查询时使用的各种规范化因子，以便计算文档的相关性评分。")]),e("li",null,[e("a",$t,[es,s(t)]),n("：null 值无法被索引和搜索。当一个字段被设为 null，则被视为没有值。"),ns,n(" 允许将空值替换为指定值，以便对其进行索引和搜索。")]),e("li",null,[e("a",ts,[ss,s(t)]),n("：分析的文本字段会考虑术语位置，以便能够支持邻近或短语查询。当索引具有多个值的文本字段时，值之间会添加一个“假”间隙，以防止大多数短语查询在值之间匹配。此间隙的大小使用 "),os,n(" 配置，默认为 100。")]),e("li",null,[e("a",as,[ls,s(t)]),n("：类型映射、对象字段和嵌套字段包含的子字段，都称为属性。这些属性可以是任何数据类型，包括对象和嵌套。")]),e("li",null,[e("a",rs,[cs,s(t)]),n("：通常，在索引时和搜索时应使用相同的分析器，以确保查询中的术语与倒排索引中的术语格式相同。但是，有时在搜索时使用不同的分析器可能是有意义的，例如使用 "),e("a",is,[ds,s(t)]),n(" 标记器实现自动补全或使用同义词搜索时。")]),e("li",null,[e("a",ps,[us,s(t)]),n("：Elasticsearch 允许为每个字段配置文本评分算法或相似度。相似度设置提供了一种选择文本相似度算法的简单方法，而不是默认的 BM25，例如布尔值。只有 "),hs,n(" 和 "),_s,n(" 等基于文本的字段类型支持此配置。")]),e("li",null,[e("a",gs,[ms,s(t)]),n("：默认情况下，对字段值进行索引以使其可搜索，但不会存储它们。这意味着可以查询该字段，但无法检索原始字段值。通常这不重要，字段值已经是默认存储的 "),fs,n(" 字段的一部分。如果您只想检索单个字段或几个字段的值，而不是整个 "),ks,n("，则可以通过 "),e("a",ws,[n("source filtering"),s(t)]),n(" 来实现。")]),e("li",null,[e("a",bs,[vs,s(t)]),n("：term_vector 包含有关分析过程产生的术语的信息，包括： "),ys])]),qs,e("ul",null,[e("li",null,[e("a",xs,[n("Elasticsearch 官方文档之 Mapping"),s(t)])]),e("li",null,[e("a",Es,[n("Elasticsearch 从入门到实践之 Mapping"),s(t)])])])])}const Ss=a(d,[["render",js],["__file","index.html.vue"]]);export{Ss as default};
