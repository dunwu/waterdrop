const e=JSON.parse('{"key":"v-781d3084","path":"/pages/f57255ad/","title":"Spring 面试","lang":"zh-CN","frontmatter":{"title":"Spring 面试","date":"2018-08-02T17:33:32.000Z","order":99,"permalink":"/pages/f57255ad/","category":["Java","框架","Spring"],"tag":["Java","框架","Spring","面试"],"description":"Spring 面试 综合篇 不同版本的 Spring 有哪些主要功能？ Version Feature Spring 2.5 发布于 2007 年。这是第一个支持注解的版本。 Spring 3.0 发布于 2009 年。它完全利用了 Java5 中的改进，并为 JEE6 提供了支持。 Spring 4.0 发布于 2013 年。这是第一个完全支持 JAVA8 的版本。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/f57255ad/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Spring 面试"}],["meta",{"property":"og:description","content":"Spring 面试 综合篇 不同版本的 Spring 有哪些主要功能？ Version Feature Spring 2.5 发布于 2007 年。这是第一个支持注解的版本。 Spring 3.0 发布于 2009 年。它完全利用了 Java5 中的改进，并为 JEE6 提供了支持。 Spring 4.0 发布于 2013 年。这是第一个完全支持 JAVA8 的版本。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-14T13:48:12.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"框架"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:published_time","content":"2018-08-02T17:33:32.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-14T13:48:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring 面试\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-08-02T17:33:32.000Z\\",\\"dateModified\\":\\"2025-09-14T13:48:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"综合篇","slug":"综合篇","link":"#综合篇","children":[{"level":3,"title":"不同版本的 Spring 有哪些主要功能？","slug":"不同版本的-spring-有哪些主要功能","link":"#不同版本的-spring-有哪些主要功能","children":[]},{"level":3,"title":"Spring、SpringMVC、SpringBoot 三者之间是什么关系？","slug":"spring、springmvc、springboot-三者之间是什么关系","link":"#spring、springmvc、springboot-三者之间是什么关系","children":[]},{"level":3,"title":"什么是 Spring Framework？","slug":"什么是-spring-framework","link":"#什么是-spring-framework","children":[]},{"level":3,"title":"列举 Spring Framework 的优点。","slug":"列举-spring-framework-的优点。","link":"#列举-spring-framework-的优点。","children":[]},{"level":3,"title":"Spring Framework 有哪些不同的功能？","slug":"spring-framework-有哪些不同的功能","link":"#spring-framework-有哪些不同的功能","children":[]},{"level":3,"title":"Spring Framework 中有多少个模块，它们分别是什么？","slug":"spring-framework-中有多少个模块-它们分别是什么","link":"#spring-framework-中有多少个模块-它们分别是什么","children":[]},{"level":3,"title":"什么是 Spring 配置文件？","slug":"什么是-spring-配置文件","link":"#什么是-spring-配置文件","children":[]},{"level":3,"title":"Spring 应用程序有哪些不同组件？","slug":"spring-应用程序有哪些不同组件","link":"#spring-应用程序有哪些不同组件","children":[]},{"level":3,"title":"使用 Spring 有哪些方式？","slug":"使用-spring-有哪些方式","link":"#使用-spring-有哪些方式","children":[]},{"level":3,"title":"Spring 框架中都用到了哪些设计模式？","slug":"spring-框架中都用到了哪些设计模式","link":"#spring-框架中都用到了哪些设计模式","children":[]}]},{"level":2,"title":"Bean","slug":"bean","link":"#bean","children":[{"level":3,"title":"什么是 Spring Bean","slug":"什么是-spring-bean","link":"#什么是-spring-bean","children":[]},{"level":3,"title":"如何注册 Spring Bean","slug":"如何注册-spring-bean","link":"#如何注册-spring-bean","children":[]},{"level":3,"title":"spring 提供了哪些配置方式？","slug":"spring-提供了哪些配置方式","link":"#spring-提供了哪些配置方式","children":[]},{"level":3,"title":"spring 支持集中 bean scope？","slug":"spring-支持集中-bean-scope","link":"#spring-支持集中-bean-scope","children":[]},{"level":3,"title":"Spring Bean 的生命周期","slug":"spring-bean-的生命周期","link":"#spring-bean-的生命周期","children":[]},{"level":3,"title":"什么是 spring 的内部 bean？","slug":"什么是-spring-的内部-bean","link":"#什么是-spring-的内部-bean","children":[]},{"level":3,"title":"什么是 spring 装配","slug":"什么是-spring-装配","link":"#什么是-spring-装配","children":[]},{"level":3,"title":"自动装配有哪些方式？","slug":"自动装配有哪些方式","link":"#自动装配有哪些方式","children":[]},{"level":3,"title":"自动装配有什么局限？","slug":"自动装配有什么局限","link":"#自动装配有什么局限","children":[]}]},{"level":2,"title":"IoC","slug":"ioc","link":"#ioc","children":[{"level":3,"title":"什么是 IoC？什么是依赖注入？什么是 Spring IoC？","slug":"什么是-ioc-什么是依赖注入-什么是-spring-ioc","link":"#什么是-ioc-什么是依赖注入-什么是-spring-ioc","children":[]},{"level":3,"title":"依赖注入有哪些实现方式？","slug":"依赖注入有哪些实现方式","link":"#依赖注入有哪些实现方式","children":[]},{"level":3,"title":"构造器注入 VS. setter 注入","slug":"构造器注入-vs-setter-注入","link":"#构造器注入-vs-setter-注入","children":[]},{"level":3,"title":"BeanFactory VS. ApplicationContext","slug":"beanfactory-vs-applicationcontext","link":"#beanfactory-vs-applicationcontext","children":[]},{"level":3,"title":"BeanFactory VS. FactoryBean","slug":"beanfactory-vs-factorybean","link":"#beanfactory-vs-factorybean","children":[]},{"level":3,"title":"Spring IoC 启动时做了哪些准备","slug":"spring-ioc-启动时做了哪些准备","link":"#spring-ioc-启动时做了哪些准备","children":[]},{"level":3,"title":"Spring IoC 的实现机制是什么","slug":"spring-ioc-的实现机制是什么","link":"#spring-ioc-的实现机制是什么","children":[]}]},{"level":2,"title":"AOP","slug":"aop","link":"#aop","children":[{"level":3,"title":"什么是 AOP？","slug":"什么是-aop","link":"#什么是-aop","children":[]},{"level":3,"title":"AOP 中的 Aspect、Advice、Pointcut、JointPoint 和 Advice 参数分别是什么？","slug":"aop-中的-aspect、advice、pointcut、jointpoint-和-advice-参数分别是什么","link":"#aop-中的-aspect、advice、pointcut、jointpoint-和-advice-参数分别是什么","children":[]},{"level":3,"title":"什么是通知（Advice）？","slug":"什么是通知-advice","link":"#什么是通知-advice","children":[]},{"level":3,"title":"有哪些类型的通知（Advice）？","slug":"有哪些类型的通知-advice","link":"#有哪些类型的通知-advice","children":[]},{"level":3,"title":"指出在 spring aop 中 concern 和 cross-cutting concern 的不同之处。","slug":"指出在-spring-aop-中-concern-和-cross-cutting-concern-的不同之处。","link":"#指出在-spring-aop-中-concern-和-cross-cutting-concern-的不同之处。","children":[]},{"level":3,"title":"AOP 有哪些实现方式？","slug":"aop-有哪些实现方式","link":"#aop-有哪些实现方式","children":[]},{"level":3,"title":"Spring AOP and AspectJ AOP 有什么区别？","slug":"spring-aop-and-aspectj-aop-有什么区别","link":"#spring-aop-and-aspectj-aop-有什么区别","children":[]},{"level":3,"title":"如何理解 Spring 中的代理？","slug":"如何理解-spring-中的代理","link":"#如何理解-spring-中的代理","children":[]},{"level":3,"title":"什么是编织（Weaving）？","slug":"什么是编织-weaving","link":"#什么是编织-weaving","children":[]}]},{"level":2,"title":"注解","slug":"注解","link":"#注解","children":[{"level":3,"title":"你用过哪些重要的 Spring 注解？","slug":"你用过哪些重要的-spring-注解","link":"#你用过哪些重要的-spring-注解","children":[]},{"level":3,"title":"如何在 spring 中启动注解装配？","slug":"如何在-spring-中启动注解装配","link":"#如何在-spring-中启动注解装配","children":[]},{"level":3,"title":"@Component, @Controller, @Repository, @Service 有何区别？","slug":"component-controller-repository-service-有何区别","link":"#component-controller-repository-service-有何区别","children":[]},{"level":3,"title":"@Required 注解有什么用？","slug":"required-注解有什么用","link":"#required-注解有什么用","children":[]},{"level":3,"title":"@Autowired 注解有什么用？","slug":"autowired-注解有什么用","link":"#autowired-注解有什么用","children":[]},{"level":3,"title":"@Qualifier 注解有什么用？","slug":"qualifier-注解有什么用","link":"#qualifier-注解有什么用","children":[]},{"level":3,"title":"@RequestMapping 注解有什么用？","slug":"requestmapping-注解有什么用","link":"#requestmapping-注解有什么用","children":[]}]},{"level":2,"title":"数据篇","slug":"数据篇","link":"#数据篇","children":[{"level":3,"title":"spring DAO 有什么用？","slug":"spring-dao-有什么用","link":"#spring-dao-有什么用","children":[]},{"level":3,"title":"列举 Spring DAO 抛出的异常。","slug":"列举-spring-dao-抛出的异常。","link":"#列举-spring-dao-抛出的异常。","children":[]},{"level":3,"title":"spring JDBC API 中存在哪些类？","slug":"spring-jdbc-api-中存在哪些类","link":"#spring-jdbc-api-中存在哪些类","children":[]},{"level":3,"title":"使用 Spring 访问 Hibernate 的方法有哪些？","slug":"使用-spring-访问-hibernate-的方法有哪些","link":"#使用-spring-访问-hibernate-的方法有哪些","children":[]},{"level":3,"title":"什么是 Spring 的事务管理？","slug":"什么是-spring-的事务管理","link":"#什么是-spring-的事务管理","children":[]},{"level":3,"title":"列举 spring 支持的事务管理类型","slug":"列举-spring-支持的事务管理类型","link":"#列举-spring-支持的事务管理类型","children":[]},{"level":3,"title":"spring 支持哪些 ORM 框架","slug":"spring-支持哪些-orm-框架","link":"#spring-支持哪些-orm-框架","children":[]}]},{"level":2,"title":"MVC","slug":"mvc","link":"#mvc","children":[{"level":3,"title":"Spring MVC 框架有什么用？","slug":"spring-mvc-框架有什么用","link":"#spring-mvc-框架有什么用","children":[]},{"level":3,"title":"描述一下 DispatcherServlet 的工作流程","slug":"描述一下-dispatcherservlet-的工作流程","link":"#描述一下-dispatcherservlet-的工作流程","children":[]},{"level":3,"title":"介绍一下 WebApplicationContext","slug":"介绍一下-webapplicationcontext","link":"#介绍一下-webapplicationcontext","children":[]}]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1757857692000,"updatedTime":1757857692000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":21.58,"words":6475},"filePathRelative":"01.Java/13.框架/Spring/Spring面试.md","localizedDate":"2018年8月2日","excerpt":"<h1> Spring 面试</h1>\\n<h2> 综合篇</h2>\\n<h3> 不同版本的 Spring 有哪些主要功能？</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>Version</th>\\n<th>Feature</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Spring 2.5</td>\\n<td>发布于 2007 年。这是第一个支持注解的版本。</td>\\n</tr>\\n<tr>\\n<td>Spring 3.0</td>\\n<td>发布于 2009 年。它完全利用了 Java5 中的改进，并为 JEE6 提供了支持。</td>\\n</tr>\\n<tr>\\n<td>Spring 4.0</td>\\n<td>发布于 2013 年。这是第一个完全支持 JAVA8 的版本。</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{e as data};
