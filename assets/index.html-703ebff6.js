const e=JSON.parse('{"key":"v-d617b04c","path":"/pages/c87cbcd3/","title":"Redis 管道","lang":"zh-CN","frontmatter":{"icon":"logos:Redis","title":"Redis 管道","date":"2023-09-11T22:22:31.000Z","permalink":"/pages/c87cbcd3/","category":["数据库","KV数据库","Redis"],"tag":["数据库","KV数据库","Redis","Pipeline"],"description":"Redis 管道 关键词：Pipeline Pipeline 简介 Redis 是一种基于 C/S 模型以及请求/响应协议的 TCP 服务。通常情况下，一个 Redis 命令的请求、响应遵循以下步骤： 客户端向服务端发送一个查询请求，并监听 Socket 返回（通常是以阻塞模式，等待服务端响应）。 服务端处理命令，并将结果返回给客户端。 显然，如果每个 Redis 命令都发起一次请求、响应，会很低效。因此，Redis 客户端提供了一种批量处理技术，即","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/c87cbcd3/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Redis 管道"}],["meta",{"property":"og:description","content":"Redis 管道 关键词：Pipeline Pipeline 简介 Redis 是一种基于 C/S 模型以及请求/响应协议的 TCP 服务。通常情况下，一个 Redis 命令的请求、响应遵循以下步骤： 客户端向服务端发送一个查询请求，并监听 Socket 返回（通常是以阻塞模式，等待服务端响应）。 服务端处理命令，并将结果返回给客户端。 显然，如果每个 Redis 命令都发起一次请求、响应，会很低效。因此，Redis 客户端提供了一种批量处理技术，即"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-15T00:29:21.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"KV数据库"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:tag","content":"Pipeline"}],["meta",{"property":"article:published_time","content":"2023-09-11T22:22:31.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-15T00:29:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis 管道\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-11T22:22:31.000Z\\",\\"dateModified\\":\\"2025-09-15T00:29:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"Pipeline 简介","slug":"pipeline-简介","link":"#pipeline-简介","children":[]},{"level":2,"title":"Pipeline 限制","slug":"pipeline-限制","link":"#pipeline-限制","children":[]},{"level":2,"title":"Pipeline 案例","slug":"pipeline-案例","link":"#pipeline-案例","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757896161000,"updatedTime":1757896161000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":3.05,"words":914},"filePathRelative":"12.数据库/05.KV数据库/Redis/Redis_管道.md","localizedDate":"2023年9月11日","excerpt":"<h1> Redis 管道</h1>\\n<blockquote>\\n<p>关键词：<code>Pipeline</code></p>\\n</blockquote>\\n<h2> Pipeline 简介</h2>\\n<p>Redis 是一种基于 C/S 模型以及请求/响应协议的 TCP 服务。通常情况下，一个 Redis 命令的请求、响应遵循以下步骤：</p>\\n<ul>\\n<li>客户端向服务端发送一个查询请求，并监听 Socket 返回（通常是以阻塞模式，等待服务端响应）。</li>\\n<li>服务端处理命令，并将结果返回给客户端。</li>\\n</ul>\\n<p>显然，如果每个 Redis 命令都发起一次请求、响应，会很低效。因此，Redis 客户端提供了一种批量处理技术，即</p>","autoDesc":true}');export{e as data};
