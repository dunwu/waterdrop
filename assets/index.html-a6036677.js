const e=JSON.parse('{"key":"v-749f0e58","path":"/pages/7827e369/","title":"MySQL 面试之事务和锁篇","lang":"zh-CN","frontmatter":{"icon":"logos:MySQL","title":"MySQL 面试之事务和锁篇","cover":"https://raw.githubusercontent.com/dunwu/images/master/snap/202503110803916.jpg","date":"2025-03-24T22:42:57.000Z","permalink":"/pages/7827e369/","category":["数据库","关系型数据库","MySQL"],"tag":["数据库","关系型数据库","MySQL","面试"],"description":"MySQL 面试之事务和锁篇 MySQL 事务 扩展阅读： MySQL 官方文档之 InnoDB 锁和事务模型 【简单】什么是事务，什么是 ACID？ 事务指的是满足 ACID 特性的一组操作。事务内的 SQL 语句，要么全执行成功，要么全执行失败。可以通过 Commit 提交一个事务，也可以使用 Rollback 进行回滚。通俗来说，事务就是要保证一组数据库操作，要么全部成功，要么全部失败。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/7827e369/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"MySQL 面试之事务和锁篇"}],["meta",{"property":"og:description","content":"MySQL 面试之事务和锁篇 MySQL 事务 扩展阅读： MySQL 官方文档之 InnoDB 锁和事务模型 【简单】什么是事务，什么是 ACID？ 事务指的是满足 ACID 特性的一组操作。事务内的 SQL 语句，要么全执行成功，要么全执行失败。可以通过 Commit 提交一个事务，也可以使用 Rollback 进行回滚。通俗来说，事务就是要保证一组数据库操作，要么全部成功，要么全部失败。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dunwu/images/master/snap/202503110803916.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-14T13:48:12.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"MySQL 面试之事务和锁篇"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"关系型数据库"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:published_time","content":"2025-03-24T22:42:57.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-14T13:48:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL 面试之事务和锁篇\\",\\"image\\":[\\"https://raw.githubusercontent.com/dunwu/images/master/snap/202503110803916.jpg\\"],\\"datePublished\\":\\"2025-03-24T22:42:57.000Z\\",\\"dateModified\\":\\"2025-09-14T13:48:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"MySQL 事务","slug":"mysql-事务","link":"#mysql-事务","children":[{"level":3,"title":"【简单】什么是事务，什么是 ACID？","slug":"【简单】什么是事务-什么是-acid","link":"#【简单】什么是事务-什么是-acid","children":[]},{"level":3,"title":"【中等】事务存在哪些并发一致性问题？","slug":"【中等】事务存在哪些并发一致性问题","link":"#【中等】事务存在哪些并发一致性问题","children":[]},{"level":3,"title":"【中等】长事务可能会导致哪些问题？","slug":"【中等】长事务可能会导致哪些问题","link":"#【中等】长事务可能会导致哪些问题","children":[]},{"level":3,"title":"【困难】事务的二阶段提交是什么？","slug":"【困难】事务的二阶段提交是什么","link":"#【困难】事务的二阶段提交是什么","children":[]},{"level":3,"title":"【中等】有哪些事务隔离级别，分别解决了什么问题？","slug":"【中等】有哪些事务隔离级别-分别解决了什么问题","link":"#【中等】有哪些事务隔离级别-分别解决了什么问题","children":[]},{"level":3,"title":"【中等】MySQL 的默认事务隔离级别是什么？为什么？","slug":"【中等】mysql-的默认事务隔离级别是什么-为什么","link":"#【中等】mysql-的默认事务隔离级别是什么-为什么","children":[]},{"level":3,"title":"【困难】MySQL 是如何实现事务的？","slug":"【困难】mysql-是如何实现事务的","link":"#【困难】mysql-是如何实现事务的","children":[]},{"level":3,"title":"【困难】什么是 MVCC？","slug":"【困难】什么是-mvcc","link":"#【困难】什么是-mvcc","children":[]},{"level":3,"title":"【困难】MVCC 实现了哪些隔离级别，如何实现的？","slug":"【困难】mvcc-实现了哪些隔离级别-如何实现的","link":"#【困难】mvcc-实现了哪些隔离级别-如何实现的","children":[]},{"level":3,"title":"【困难】各事务隔离级别是如何实现的？","slug":"【困难】各事务隔离级别是如何实现的","link":"#【困难】各事务隔离级别是如何实现的","children":[]}]},{"level":2,"title":"MySQL 锁","slug":"mysql-锁","link":"#mysql-锁","children":[{"level":3,"title":"【中等】MySQL 中有哪些锁？","slug":"【中等】mysql-中有哪些锁","link":"#【中等】mysql-中有哪些锁","children":[]},{"level":3,"title":"【中等】死锁是如何产生的？","slug":"【中等】死锁是如何产生的","link":"#【中等】死锁是如何产生的","children":[]},{"level":3,"title":"【困难】如何避免死锁？","slug":"【困难】如何避免死锁","link":"#【困难】如何避免死锁","children":[]},{"level":3,"title":"【困难】如何解决死锁？","slug":"【困难】如何解决死锁","link":"#【困难】如何解决死锁","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757857692000,"updatedTime":1757857692000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":26.04,"words":7812},"filePathRelative":"12.数据库/03.关系型数据库/MySQL/MySQL_面试_事务和锁.md","localizedDate":"2025年3月24日","excerpt":"<h1> MySQL 面试之事务和锁篇</h1>\\n<h2> MySQL 事务</h2>\\n<blockquote>\\n<p>扩展阅读：</p>\\n<ul>\\n<li><a href=\\"https://dev.mysql.com/doc/refman/8.4/en/innodb-locking-transaction-model.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">MySQL 官方文档之 InnoDB 锁和事务模型</a></li>\\n</ul>\\n</blockquote>\\n<h3> 【简单】什么是事务，什么是 ACID？</h3>\\n<p><strong>事务指的是满足 ACID 特性的一组操作</strong>。事务内的 SQL 语句，要么全执行成功，要么全执行失败。可以通过 <code>Commit</code> 提交一个事务，也可以使用 <code>Rollback</code> 进行回滚。通俗来说，<strong>事务就是要保证一组数据库操作，要么全部成功，要么全部失败</strong>。</p>","autoDesc":true}');export{e as data};
