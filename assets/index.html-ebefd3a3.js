const e=JSON.parse('{"key":"v-0872a8cd","path":"/pages/6a3851d6/","title":"HBase 面试","lang":"zh-CN","frontmatter":{"icon":"logos:hbase","title":"HBase 面试","date":"2025-03-04T10:05:51.000Z","permalink":"/pages/6a3851d6/","category":["数据库","列式数据库","HBase"],"tag":["数据库","列式数据库","大数据","HBase","面试"],"description":"HBase 面试 HBase 简介 【基础】什么是 HBase？ 要点 HBase 是一个构建在 HDFS（Hadoop 文件系统）之上的列式数据库。 HBase 是一种类似于 Google’s Big Table 的数据模型，它是 Hadoop 生态系统的一部分，它将数据存储在 HDFS 上，客户端可以通过 HBase 实现对 HDFS 上数据的随机访问。 img HBase 的核心特性如下： 分布式 伸缩性：支持通过增减机器进行水平扩展，以提升整体容量和性能 高可用：支持 RegionServers 之间的自动故障转移 自动分区：Region 分散在集群中，当行数增长的时候，Region 也会自动的分区再均衡 超大数据集：HBase 被设计用来读写超大规模的数据集（数十亿行至数百亿行的表） 支持结构化、半结构化和非结构化的数据：由于 HBase 基于 HDFS 构建，所以和 HDFS 一样，支持结构化、半结构化和非结构化的数据 非关系型数据库 不支持标准 SQL 语法 没有真正的索引 不支持复杂的事务：只支持行级事务，即单行数据的读写都是原子性的 HBase 的其他特性 读写操作遵循强一致性 过滤器支持谓词下推 易于使用的 Java 客户端 API 它支持线性和模块化可扩展性。 HBase 表支持 Hadoop MapReduce 作业的便捷基类 很容易使用 Java API 进行客户端访问 为实时查询提供块缓存 BlockCache 和布隆过滤器 它通过服务器端过滤器提供查询谓词下推","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/6a3851d6/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"HBase 面试"}],["meta",{"property":"og:description","content":"HBase 面试 HBase 简介 【基础】什么是 HBase？ 要点 HBase 是一个构建在 HDFS（Hadoop 文件系统）之上的列式数据库。 HBase 是一种类似于 Google’s Big Table 的数据模型，它是 Hadoop 生态系统的一部分，它将数据存储在 HDFS 上，客户端可以通过 HBase 实现对 HDFS 上数据的随机访问。 img HBase 的核心特性如下： 分布式 伸缩性：支持通过增减机器进行水平扩展，以提升整体容量和性能 高可用：支持 RegionServers 之间的自动故障转移 自动分区：Region 分散在集群中，当行数增长的时候，Region 也会自动的分区再均衡 超大数据集：HBase 被设计用来读写超大规模的数据集（数十亿行至数百亿行的表） 支持结构化、半结构化和非结构化的数据：由于 HBase 基于 HDFS 构建，所以和 HDFS 一样，支持结构化、半结构化和非结构化的数据 非关系型数据库 不支持标准 SQL 语法 没有真正的索引 不支持复杂的事务：只支持行级事务，即单行数据的读写都是原子性的 HBase 的其他特性 读写操作遵循强一致性 过滤器支持谓词下推 易于使用的 Java 客户端 API 它支持线性和模块化可扩展性。 HBase 表支持 Hadoop MapReduce 作业的便捷基类 很容易使用 Java API 进行客户端访问 为实时查询提供块缓存 BlockCache 和布隆过滤器 它通过服务器端过滤器提供查询谓词下推"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-23T15:53:48.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"列式数据库"}],["meta",{"property":"article:tag","content":"大数据"}],["meta",{"property":"article:tag","content":"HBase"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:published_time","content":"2025-03-04T10:05:51.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-23T15:53:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HBase 面试\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-04T10:05:51.000Z\\",\\"dateModified\\":\\"2025-09-23T15:53:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"HBase 简介","slug":"hbase-简介","link":"#hbase-简介","children":[{"level":3,"title":"【基础】什么是 HBase？","slug":"【基础】什么是-hbase","link":"#【基础】什么是-hbase","children":[]},{"level":3,"title":"【基础】为什么需要 HBase？","slug":"【基础】为什么需要-hbase","link":"#【基础】为什么需要-hbase","children":[]},{"level":3,"title":"【基础】HBase 有哪些应用场景？","slug":"【基础】hbase-有哪些应用场景","link":"#【基础】hbase-有哪些应用场景","children":[]},{"level":3,"title":"【基础】HBase vs. RDBMS？","slug":"【基础】hbase-vs-rdbms","link":"#【基础】hbase-vs-rdbms","children":[]},{"level":3,"title":"【基础】HBase vs. HDFS？","slug":"【基础】hbase-vs-hdfs","link":"#【基础】hbase-vs-hdfs","children":[]},{"level":3,"title":"【基础】行式数据库 vs. 列式数据库？","slug":"【基础】行式数据库-vs-列式数据库","link":"#【基础】行式数据库-vs-列式数据库","children":[]}]},{"level":2,"title":"HBase 存储","slug":"hbase-存储","link":"#hbase-存储","children":[{"level":3,"title":"【基础】HBase 表有什么特性？","slug":"【基础】hbase-表有什么特性","link":"#【基础】hbase-表有什么特性","children":[]},{"level":3,"title":"【基础】HBase 的逻辑存储模型是怎样的？","slug":"【基础】hbase-的逻辑存储模型是怎样的","link":"#【基础】hbase-的逻辑存储模型是怎样的","children":[]},{"level":3,"title":"【基础】HBase 的物理存储模型是怎样的？","slug":"【基础】hbase-的物理存储模型是怎样的","link":"#【基础】hbase-的物理存储模型是怎样的","children":[]}]},{"level":2,"title":"HBase 架构","slug":"hbase-架构","link":"#hbase-架构","children":[{"level":3,"title":"【中级】HBase 读数据流程是怎样的？","slug":"【中级】hbase-读数据流程是怎样的","link":"#【中级】hbase-读数据流程是怎样的","children":[]},{"level":3,"title":"【中级】HBase 写数据流程是怎样的？","slug":"【中级】hbase-写数据流程是怎样的","link":"#【中级】hbase-写数据流程是怎样的","children":[]},{"level":3,"title":"【中级】HBase 有哪些核心组件？","slug":"【中级】hbase-有哪些核心组件","link":"#【中级】hbase-有哪些核心组件","children":[]}]},{"level":2,"title":"HBase 高可用","slug":"hbase-高可用","link":"#hbase-高可用","children":[]}],"git":{"createdTime":1758036164000,"updatedTime":1758642828000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":2}]},"readingTime":{"minutes":13.28,"words":3985},"filePathRelative":"12.数据库/列式数据库/HBase/HBase_面试.md","localizedDate":"2025年3月4日","excerpt":"<h1> HBase 面试</h1>\\n<h2> HBase 简介</h2>\\n<h3> 【基础】什么是 HBase？</h3>\\n<details class=\\"hint-container details\\"><summary>要点</summary>\\n<p><strong>HBase 是一个构建在 HDFS（Hadoop 文件系统）之上的列式数据库</strong>。</p>\\n<p>HBase 是一种类似于 <code>Google’s Big Table</code> 的数据模型，它是 Hadoop 生态系统的一部分，它将数据存储在 HDFS 上，客户端可以通过 HBase 实现对 HDFS 上数据的随机访问。</p>\\n<figure><img src=\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200601170449.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>img</figcaption></figure>\\n<p>HBase 的<strong>核心特性</strong>如下：</p>\\n<ul>\\n<li><strong>分布式</strong>\\n<ul>\\n<li><strong>伸缩性</strong>：支持通过增减机器进行水平扩展，以提升整体容量和性能</li>\\n<li><strong>高可用</strong>：支持 RegionServers 之间的自动故障转移</li>\\n<li><strong>自动分区</strong>：Region 分散在集群中，当行数增长的时候，Region 也会自动的分区再均衡</li>\\n</ul>\\n</li>\\n<li><strong>超大数据集</strong>：HBase 被设计用来读写超大规模的数据集（数十亿行至数百亿行的表）</li>\\n<li><strong>支持结构化、半结构化和非结构化的数据</strong>：由于 HBase 基于 HDFS 构建，所以和 HDFS 一样，支持结构化、半结构化和非结构化的数据</li>\\n<li><strong>非关系型数据库</strong>\\n<ul>\\n<li><strong>不支持标准 SQL 语法</strong></li>\\n<li><strong>没有真正的索引</strong></li>\\n<li><strong>不支持复杂的事务</strong>：只支持行级事务，即单行数据的读写都是原子性的</li>\\n</ul>\\n</li>\\n</ul>\\n<p>HBase 的其他特性</p>\\n<ul>\\n<li>读写操作遵循强一致性</li>\\n<li>过滤器支持谓词下推</li>\\n<li>易于使用的 Java 客户端 API</li>\\n<li>它支持线性和模块化可扩展性。</li>\\n<li>HBase 表支持 Hadoop MapReduce 作业的便捷基类</li>\\n<li>很容易使用 Java API 进行客户端访问</li>\\n<li>为实时查询提供块缓存 BlockCache 和布隆过滤器</li>\\n<li>它通过服务器端过滤器提供查询谓词下推</li>\\n</ul>\\n</details>","autoDesc":true}');export{e as data};
