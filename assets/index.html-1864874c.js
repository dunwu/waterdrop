const e=JSON.parse('{"key":"v-4ef50d31","path":"/pages/46c1e340/","title":"Java 虚拟机面试一","lang":"zh-CN","frontmatter":{"title":"Java 虚拟机面试一","date":"2024-07-03T07:44:02.000Z","permalink":"/pages/46c1e340/","category":["Java","JavaCore","面试"],"tag":["Java","JavaCore","面试","并发"],"description":"Java 虚拟机面试一 【中等】JVM 的 TLAB（Thread-Local Allocation Buffer）是什么？ 【中等】Java 是如何实现跨平台的？ 【中等】编译执行与解释执行的区别是什么？JVM 使用哪种方式？ 【困难】你了解 Java 的类加载器吗？ 【中等】什么是 Java 中的 JIT（Just-In-Time）? 【中等】JIT 编译后的代码存在哪？ 【中等】什么是 Java 的 AOT（Ahead-Of-Time）？ 【困难】你了解 Java 的逃逸分析吗？ 【中等】Java 中的强引用、软引用、弱引用和虚引用分别是什么？","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/46c1e340/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Java 虚拟机面试一"}],["meta",{"property":"og:description","content":"Java 虚拟机面试一 【中等】JVM 的 TLAB（Thread-Local Allocation Buffer）是什么？ 【中等】Java 是如何实现跨平台的？ 【中等】编译执行与解释执行的区别是什么？JVM 使用哪种方式？ 【困难】你了解 Java 的类加载器吗？ 【中等】什么是 Java 中的 JIT（Just-In-Time）? 【中等】JIT 编译后的代码存在哪？ 【中等】什么是 Java 的 AOT（Ahead-Of-Time）？ 【困难】你了解 Java 的逃逸分析吗？ 【中等】Java 中的强引用、软引用、弱引用和虚引用分别是什么？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-22T05:01:15.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JavaCore"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:tag","content":"并发"}],["meta",{"property":"article:published_time","content":"2024-07-03T07:44:02.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-22T05:01:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 虚拟机面试一\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-03T07:44:02.000Z\\",\\"dateModified\\":\\"2025-04-22T05:01:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"JVM 简介","slug":"jvm-简介","link":"#jvm-简介","children":[{"level":3,"title":"【中等】JVM 由哪些部分组成？","slug":"【中等】jvm-由哪些部分组成","link":"#【中等】jvm-由哪些部分组成","children":[]}]},{"level":2,"title":"JVM 内存管理","slug":"jvm-内存管理","link":"#jvm-内存管理","children":[{"level":3,"title":"【中等】JVM 的内存区域是如何划分的？","slug":"【中等】jvm-的内存区域是如何划分的","link":"#【中等】jvm-的内存区域是如何划分的","children":[]},{"level":3,"title":"【简单】JVM 方法区是否会出现内存溢出?","slug":"【简单】jvm-方法区是否会出现内存溢出","link":"#【简单】jvm-方法区是否会出现内存溢出","children":[]},{"level":3,"title":"【中等】JVM 有那几种情况会产生 OOM（内存溢出）？","slug":"【中等】jvm-有那几种情况会产生-oom-内存溢出","link":"#【中等】jvm-有那几种情况会产生-oom-内存溢出","children":[]},{"level":3,"title":"【中等】Java 中堆和栈的区别是什么？","slug":"【中等】java-中堆和栈的区别是什么","link":"#【中等】java-中堆和栈的区别是什么","children":[]},{"level":3,"title":"【困难】什么是 Java 中的直接内存（堆外内存）？","slug":"【困难】什么是-java-中的直接内存-堆外内存","link":"#【困难】什么是-java-中的直接内存-堆外内存","children":[]},{"level":3,"title":"【中等】什么是 Java 中的常量池？","slug":"【中等】什么是-java-中的常量池","link":"#【中等】什么是-java-中的常量池","children":[]},{"level":3,"title":"程序计数器为什么是私有的？","slug":"程序计数器为什么是私有的","link":"#程序计数器为什么是私有的","children":[]},{"level":3,"title":"虚拟机栈和本地方法栈为什么是私有的？","slug":"虚拟机栈和本地方法栈为什么是私有的","link":"#虚拟机栈和本地方法栈为什么是私有的","children":[]},{"level":3,"title":"一句话简单了解堆和方法区","slug":"一句话简单了解堆和方法区","link":"#一句话简单了解堆和方法区","children":[]}]},{"level":2,"title":"垃圾收集","slug":"垃圾收集","link":"#垃圾收集","children":[{"level":3,"title":"【中等】Java 中有哪些垃圾回收算法？","slug":"【中等】java-中有哪些垃圾回收算法","link":"#【中等】java-中有哪些垃圾回收算法","children":[]},{"level":3,"title":"【中等】Java 中常见的垃圾收集器有哪些？","slug":"【中等】java-中常见的垃圾收集器有哪些","link":"#【中等】java-中常见的垃圾收集器有哪些","children":[]},{"level":3,"title":"【困难】Java 中如何判断对象是否是垃圾？不同实现方式有何区别？","slug":"【困难】java-中如何判断对象是否是垃圾-不同实现方式有何区别","link":"#【困难】java-中如何判断对象是否是垃圾-不同实现方式有何区别","children":[]},{"level":3,"title":"【中等】为什么 Java 的垃圾收集器将堆分为老年代和新生代？","slug":"【中等】为什么-java-的垃圾收集器将堆分为老年代和新生代","link":"#【中等】为什么-java-的垃圾收集器将堆分为老年代和新生代","children":[]},{"level":3,"title":"【困难】为什么 Java 8 移除了永久代（PermGen）并引入了元空间（Metaspace）？","slug":"【困难】为什么-java-8-移除了永久代-permgen-并引入了元空间-metaspace","link":"#【困难】为什么-java-8-移除了永久代-permgen-并引入了元空间-metaspace","children":[]},{"level":3,"title":"【中等】为什么 Java 新生代被划分为 S0、S1 和 Eden 区？","slug":"【中等】为什么-java-新生代被划分为-s0、s1-和-eden-区","link":"#【中等】为什么-java-新生代被划分为-s0、s1-和-eden-区","children":[]},{"level":3,"title":"【困难】什么是三色标记算法？","slug":"【困难】什么是三色标记算法","link":"#【困难】什么是三色标记算法","children":[]},{"level":3,"title":"【困难】Java 中的 young GC、old GC、full GC 和 mixed GC 的区别是什么？","slug":"【困难】java-中的-young-gc、old-gc、full-gc-和-mixed-gc-的区别是什么","link":"#【困难】java-中的-young-gc、old-gc、full-gc-和-mixed-gc-的区别是什么","children":[]},{"level":3,"title":"【中等】什么条件会触发 Java 的 young GC？","slug":"【中等】什么条件会触发-java-的-young-gc","link":"#【中等】什么条件会触发-java-的-young-gc","children":[]},{"level":3,"title":"【困难】什么情况下会触发 Java 的 Full GC？","slug":"【困难】什么情况下会触发-java-的-full-gc","link":"#【困难】什么情况下会触发-java-的-full-gc","children":[]},{"level":3,"title":"【困难】Java 的 G1 垃圾回收流程是怎样的？","slug":"【困难】java-的-g1-垃圾回收流程是怎样的","link":"#【困难】java-的-g1-垃圾回收流程是怎样的","children":[]},{"level":3,"title":"【困难】Java 的 CMS 垃圾回收流程是怎样的？","slug":"【困难】java-的-cms-垃圾回收流程是怎样的","link":"#【困难】java-的-cms-垃圾回收流程是怎样的","children":[]},{"level":3,"title":"【困难】你了解 Java 的 ZGC（Z Garbage Collector）吗？","slug":"【困难】你了解-java-的-zgc-z-garbage-collector-吗","link":"#【困难】你了解-java-的-zgc-z-garbage-collector-吗","children":[]}]},{"level":2,"title":"字节码","slug":"字节码","link":"#字节码","children":[]},{"level":2,"title":"工具","slug":"工具","link":"#工具","children":[{"level":3,"title":"【简单】JDK 内置了哪些工具？","slug":"【简单】jdk-内置了哪些工具","link":"#【简单】jdk-内置了哪些工具","children":[]}]},{"level":2,"title":"故障处理","slug":"故障处理","link":"#故障处理","children":[]},{"level":2,"title":"类加载","slug":"类加载","link":"#类加载","children":[{"level":3,"title":"Java 支持哪些引用类型？分别用于什么场景？","slug":"java-支持哪些引用类型-分别用于什么场景","link":"#java-支持哪些引用类型-分别用于什么场景","children":[]}]},{"level":2,"title":"调优","slug":"调优","link":"#调优","children":[]}],"git":{"createdTime":1743948422000,"updatedTime":1745298075000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":3}]},"readingTime":{"minutes":7.37,"words":2212},"filePathRelative":"01.Java/01.JavaCore/99.面试/Java_面试_虚拟机（一）.md","localizedDate":"2024年7月3日","excerpt":"<h1> Java 虚拟机面试一</h1>\\n<p>【中等】JVM 的 TLAB（Thread-Local Allocation Buffer）是什么？<br>\\n【中等】Java 是如何实现跨平台的？</p>\\n<p>【中等】编译执行与解释执行的区别是什么？JVM 使用哪种方式？</p>\\n<p>【困难】你了解 Java 的类加载器吗？<br>\\n【中等】什么是 Java 中的 JIT（Just-In-Time）?<br>\\n【中等】JIT 编译后的代码存在哪？<br>\\n【中等】什么是 Java 的 AOT（Ahead-Of-Time）？<br>\\n【困难】你了解 Java 的逃逸分析吗？<br>\\n【中等】Java 中的强引用、软引用、弱引用和虚引用分别是什么？</p>","autoDesc":true}');export{e as data};
