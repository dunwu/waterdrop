const e=JSON.parse('{"key":"v-53d50de7","path":"/pages/a9eba9b9/","title":"MongoDB 事务","lang":"zh-CN","frontmatter":{"icon":"logos:mongodb","title":"MongoDB 事务","date":"2020-09-20T23:12:17.000Z","permalink":"/pages/a9eba9b9/","category":["数据库","文档数据库","mongodb"],"tag":["数据库","文档数据库","mongodb","事务"],"description":"MongoDB 事务 概述 通俗的说，事务将多个读、写操作捆绑在一起成为一个逻辑操作单元。事务中的所有读写是一个执行的整体，整个事务要么成功（提交）、要么失败（中止或回滚）。如果失败，应用程序可以安全地重试。这样，由于不需要担心部分失败的情况（无论出于任何原因），应用层的错误处理就变得简单很多。 大多数 NoSQL 只能部分支持事务，甚至完全不支持事务。但是，MongoDB 支持 ACID 事务，这是它的一大优势。 本文主要介绍了 MongoDB 对于事务的支持力度，以及如何应用事务。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/a9eba9b9/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"MongoDB 事务"}],["meta",{"property":"og:description","content":"MongoDB 事务 概述 通俗的说，事务将多个读、写操作捆绑在一起成为一个逻辑操作单元。事务中的所有读写是一个执行的整体，整个事务要么成功（提交）、要么失败（中止或回滚）。如果失败，应用程序可以安全地重试。这样，由于不需要担心部分失败的情况（无论出于任何原因），应用层的错误处理就变得简单很多。 大多数 NoSQL 只能部分支持事务，甚至完全不支持事务。但是，MongoDB 支持 ACID 事务，这是它的一大优势。 本文主要介绍了 MongoDB 对于事务的支持力度，以及如何应用事务。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-13T09:10:08.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"文档数据库"}],["meta",{"property":"article:tag","content":"mongodb"}],["meta",{"property":"article:tag","content":"事务"}],["meta",{"property":"article:published_time","content":"2020-09-20T23:12:17.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-13T09:10:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MongoDB 事务\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-09-20T23:12:17.000Z\\",\\"dateModified\\":\\"2025-09-13T09:10:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"MongoDB 事务简介","slug":"mongodb-事务简介","link":"#mongodb-事务简介","children":[]},{"level":2,"title":"MongoDB 分布式事务","slug":"mongodb-分布式事务","link":"#mongodb-分布式事务","children":[]},{"level":2,"title":"MongoDB 事务操作","slug":"mongodb-事务操作","link":"#mongodb-事务操作","children":[{"level":3,"title":"在事务中创建集合和索引","slug":"在事务中创建集合和索引","link":"#在事务中创建集合和索引","children":[]},{"level":3,"title":"计数操作","slug":"计数操作","link":"#计数操作","children":[]},{"level":3,"title":"去重操作","slug":"去重操作","link":"#去重操作","children":[]},{"level":3,"title":"信息操作","slug":"信息操作","link":"#信息操作","children":[]},{"level":3,"title":"事务操作限制","slug":"事务操作限制","link":"#事务操作限制","children":[]}]},{"level":2,"title":"事务和会话","slug":"事务和会话","link":"#事务和会话","children":[]},{"level":2,"title":"读关注/写关注/读取偏好","slug":"读关注-写关注-读取偏好","link":"#读关注-写关注-读取偏好","children":[{"level":3,"title":"事务和读取偏好","slug":"事务和读取偏好","link":"#事务和读取偏好","children":[]},{"level":3,"title":"事务和读关注","slug":"事务和读关注","link":"#事务和读关注","children":[]},{"level":3,"title":"事务和写关注","slug":"事务和写关注","link":"#事务和写关注","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1741093684000,"updatedTime":1757754608000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":4}]},"readingTime":{"minutes":12.02,"words":3605},"filePathRelative":"12.数据库/04.文档数据库/mongodb/MongoDB_事务.md","localizedDate":"2020年9月20日","excerpt":"<h1> MongoDB 事务</h1>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">概述</p>\\n<p>通俗的说，<strong>事务将多个读、写操作捆绑在一起成为一个逻辑操作单元</strong>。<strong>事务中的所有读写是一个执行的整体，整个事务要么成功（提交）、要么失败（中止或回滚）</strong>。如果失败，应用程序可以安全地重试。这样，由于不需要担心部分失败的情况（无论出于任何原因），应用层的错误处理就变得简单很多。</p>\\n<p>大多数 NoSQL 只能部分支持事务，甚至完全不支持事务。但是，MongoDB 支持 ACID 事务，这是它的一大优势。</p>\\n<p>本文主要介绍了 MongoDB 对于事务的支持力度，以及如何应用事务。</p>\\n</div>\\n","autoDesc":true}');export{e as data};
