const e=JSON.parse('{"key":"v-918db148","path":"/pages/594c44fb/","title":"《极客时间教程 - Java 核心技术面试精讲》笔记","lang":"zh-CN","frontmatter":{"title":"《极客时间教程 - Java 核心技术面试精讲》笔记","date":"2024-09-22T18:33:35.000Z","permalink":"/pages/594c44fb/","category":["笔记","Java"],"tag":["Java","面试"],"description":"《极客时间教程 - Java 核心技术面试精讲》笔记 开篇词 以面试题为切入点，有效提升你的 Java 内功 略 谈谈你对 Java 平台的理解？ 【典型回答】 Java 最显著的特性： “书写一次，到处运行”（Write once, run anywhere）——跨平台 垃圾收集（GC, Garbage Collection）——回收、分配内存 Java 既是解释型语言，又是编译型语言","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/594c44fb/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"《极客时间教程 - Java 核心技术面试精讲》笔记"}],["meta",{"property":"og:description","content":"《极客时间教程 - Java 核心技术面试精讲》笔记 开篇词 以面试题为切入点，有效提升你的 Java 内功 略 谈谈你对 Java 平台的理解？ 【典型回答】 Java 最显著的特性： “书写一次，到处运行”（Write once, run anywhere）——跨平台 垃圾收集（GC, Garbage Collection）——回收、分配内存 Java 既是解释型语言，又是编译型语言"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-27T13:28:08.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:published_time","content":"2024-09-22T18:33:35.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-27T13:28:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"《极客时间教程 - Java 核心技术面试精讲》笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-09-22T18:33:35.000Z\\",\\"dateModified\\":\\"2025-09-27T13:28:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"开篇词 以面试题为切入点，有效提升你的 Java 内功","slug":"开篇词-以面试题为切入点-有效提升你的-java-内功","link":"#开篇词-以面试题为切入点-有效提升你的-java-内功","children":[]},{"level":2,"title":"谈谈你对 Java 平台的理解？","slug":"谈谈你对-java-平台的理解","link":"#谈谈你对-java-平台的理解","children":[]},{"level":2,"title":"Exception 和 Error 有什么区别？","slug":"exception-和-error-有什么区别","link":"#exception-和-error-有什么区别","children":[]},{"level":2,"title":"谈谈 final、finally、finalize 有什么不同？","slug":"谈谈-final、finally、finalize-有什么不同","link":"#谈谈-final、finally、finalize-有什么不同","children":[]},{"level":2,"title":"强引用、软引用、弱引用、幻象引用有什么区别？","slug":"强引用、软引用、弱引用、幻象引用有什么区别","link":"#强引用、软引用、弱引用、幻象引用有什么区别","children":[]},{"level":2,"title":"String、StringBuffer、StringBuilder 有什么区别？","slug":"string、stringbuffer、stringbuilder-有什么区别","link":"#string、stringbuffer、stringbuilder-有什么区别","children":[]},{"level":2,"title":"动态代理是基于什么原理？","slug":"动态代理是基于什么原理","link":"#动态代理是基于什么原理","children":[]},{"level":2,"title":"int 和 Integer 有什么区别？","slug":"int-和-integer-有什么区别","link":"#int-和-integer-有什么区别","children":[]},{"level":2,"title":"对比 Vector、ArrayList、LinkedList 有何区别？","slug":"对比-vector、arraylist、linkedlist-有何区别","link":"#对比-vector、arraylist、linkedlist-有何区别","children":[]},{"level":2,"title":"对比 Hashtable、HashMap、TreeMap 有什么不同？","slug":"对比-hashtable、hashmap、treemap-有什么不同","link":"#对比-hashtable、hashmap、treemap-有什么不同","children":[]},{"level":2,"title":"如何保证集合是线程安全的 ConcurrentHashMap 如何实现高效地线程安全？","slug":"如何保证集合是线程安全的-concurrenthashmap-如何实现高效地线程安全","link":"#如何保证集合是线程安全的-concurrenthashmap-如何实现高效地线程安全","children":[{"level":3,"title":"ConcurrentHashMap JDK7 实现","slug":"concurrenthashmap-jdk7-实现","link":"#concurrenthashmap-jdk7-实现","children":[]},{"level":3,"title":"ConcurrentHashMap JDK8 实现","slug":"concurrenthashmap-jdk8-实现","link":"#concurrenthashmap-jdk8-实现","children":[]}]},{"level":2,"title":"Java 提供了哪些 IO 方式？ NIO 如何实现多路复用？","slug":"java-提供了哪些-io-方式-nio-如何实现多路复用","link":"#java-提供了哪些-io-方式-nio-如何实现多路复用","children":[]},{"level":2,"title":"Java 有几种文件拷贝方式？哪一种最高效？","slug":"java-有几种文件拷贝方式-哪一种最高效","link":"#java-有几种文件拷贝方式-哪一种最高效","children":[]},{"level":2,"title":"谈谈接口和抽象类有什么区别？","slug":"谈谈接口和抽象类有什么区别","link":"#谈谈接口和抽象类有什么区别","children":[]},{"level":2,"title":"谈谈你知道的设计模式？","slug":"谈谈你知道的设计模式","link":"#谈谈你知道的设计模式","children":[]},{"level":2,"title":"synchronized 和 ReentrantLock 有什么区别呢？","slug":"synchronized-和-reentrantlock-有什么区别呢","link":"#synchronized-和-reentrantlock-有什么区别呢","children":[]},{"level":2,"title":"synchronized 底层如何实现？什么是锁的升级、降级？","slug":"synchronized-底层如何实现-什么是锁的升级、降级","link":"#synchronized-底层如何实现-什么是锁的升级、降级","children":[]},{"level":2,"title":"一个线程两次调用 start() 方法会出现什么情况？","slug":"一个线程两次调用-start-方法会出现什么情况","link":"#一个线程两次调用-start-方法会出现什么情况","children":[{"level":3,"title":"线程生命周期","slug":"线程生命周期","link":"#线程生命周期","children":[]}]},{"level":2,"title":"什么情况下 Java 程序会产生死锁？如何定位、修复？","slug":"什么情况下-java-程序会产生死锁-如何定位、修复","link":"#什么情况下-java-程序会产生死锁-如何定位、修复","children":[{"level":3,"title":"什么是死锁","slug":"什么是死锁","link":"#什么是死锁","children":[]},{"level":3,"title":"如何检测死锁","slug":"如何检测死锁","link":"#如何检测死锁","children":[]},{"level":3,"title":"如何避免死锁","slug":"如何避免死锁","link":"#如何避免死锁","children":[]}]},{"level":2,"title":"Java 并发包提供了哪些并发工具类？","slug":"java-并发包提供了哪些并发工具类","link":"#java-并发包提供了哪些并发工具类","children":[]},{"level":2,"title":"并发包中的 ConcurrentLinkedQueue 和 LinkedBlockingQueue 有什么区别？","slug":"并发包中的-concurrentlinkedqueue-和-linkedblockingqueue-有什么区别","link":"#并发包中的-concurrentlinkedqueue-和-linkedblockingqueue-有什么区别","children":[]},{"level":2,"title":"Java 并发类库提供的线程池有哪几种？ 分别有什么特点？","slug":"java-并发类库提供的线程池有哪几种-分别有什么特点","link":"#java-并发类库提供的线程池有哪几种-分别有什么特点","children":[]},{"level":2,"title":"AtomicInteger 底层实现原理是什么？如何在自己的产品代码中应用 CAS 操作？","slug":"atomicinteger-底层实现原理是什么-如何在自己的产品代码中应用-cas-操作","link":"#atomicinteger-底层实现原理是什么-如何在自己的产品代码中应用-cas-操作","children":[]},{"level":2,"title":"请介绍类加载过程，什么是双亲委派模型？","slug":"请介绍类加载过程-什么是双亲委派模型","link":"#请介绍类加载过程-什么是双亲委派模型","children":[]},{"level":2,"title":"有哪些方法可以在运行时动态生成一个 Java 类？","slug":"有哪些方法可以在运行时动态生成一个-java-类","link":"#有哪些方法可以在运行时动态生成一个-java-类","children":[]},{"level":2,"title":"谈谈 JVM 内存区域的划分，哪些区域可能发生 OutOfMemoryError","slug":"谈谈-jvm-内存区域的划分-哪些区域可能发生-outofmemoryerror","link":"#谈谈-jvm-内存区域的划分-哪些区域可能发生-outofmemoryerror","children":[]},{"level":2,"title":"如何监控和诊断 JVM 堆内和堆外内存使用？","slug":"如何监控和诊断-jvm-堆内和堆外内存使用","link":"#如何监控和诊断-jvm-堆内和堆外内存使用","children":[{"level":3,"title":"年轻代","slug":"年轻代","link":"#年轻代","children":[]},{"level":3,"title":"老年代","slug":"老年代","link":"#老年代","children":[]},{"level":3,"title":"永久代","slug":"永久代","link":"#永久代","children":[]},{"level":3,"title":"JVM 参数","slug":"jvm-参数","link":"#jvm-参数","children":[]}]},{"level":2,"title":"Java 常见的垃圾收集器有哪些？","slug":"java-常见的垃圾收集器有哪些","link":"#java-常见的垃圾收集器有哪些","children":[{"level":3,"title":"垃圾收集器","slug":"垃圾收集器","link":"#垃圾收集器","children":[]},{"level":3,"title":"对象是否回收算法","slug":"对象是否回收算法","link":"#对象是否回收算法","children":[]},{"level":3,"title":"垃圾收集算法","slug":"垃圾收集算法","link":"#垃圾收集算法","children":[]},{"level":3,"title":"垃圾收集过程","slug":"垃圾收集过程","link":"#垃圾收集过程","children":[]}]},{"level":2,"title":"谈谈你的 GC 调优思路","slug":"谈谈你的-gc-调优思路","link":"#谈谈你的-gc-调优思路","children":[{"level":3,"title":"G1 GC 机制","slug":"g1-gc-机制","link":"#g1-gc-机制","children":[]}]},{"level":2,"title":"Java 内存模型中的 happen-before 是什么？","slug":"java-内存模型中的-happen-before-是什么","link":"#java-内存模型中的-happen-before-是什么","children":[]},{"level":2,"title":"Java 程序运行在 Docker 等容器环境有哪些新问题？","slug":"java-程序运行在-docker-等容器环境有哪些新问题","link":"#java-程序运行在-docker-等容器环境有哪些新问题","children":[]},{"level":2,"title":"你了解 Java 应用开发中的注入攻击吗？","slug":"你了解-java-应用开发中的注入攻击吗","link":"#你了解-java-应用开发中的注入攻击吗","children":[]},{"level":2,"title":"如何写出安全的 Java 代码？","slug":"如何写出安全的-java-代码","link":"#如何写出安全的-java-代码","children":[]},{"level":2,"title":"后台服务出现明显“变慢”，谈谈你的诊断思路？","slug":"后台服务出现明显-变慢-谈谈你的诊断思路","link":"#后台服务出现明显-变慢-谈谈你的诊断思路","children":[]},{"level":2,"title":"有人说“Lambda 能让 Java 程序慢 30 倍”，你怎么看？","slug":"有人说-lambda-能让-java-程序慢-30-倍-你怎么看","link":"#有人说-lambda-能让-java-程序慢-30-倍-你怎么看","children":[]},{"level":2,"title":"JVM 优化 Java 代码时都做了什么？","slug":"jvm-优化-java-代码时都做了什么","link":"#jvm-优化-java-代码时都做了什么","children":[]},{"level":2,"title":"谈谈 MySQL 支持的事务隔离级别，以及悲观锁和乐观锁的原理和应用场景？","slug":"谈谈-mysql-支持的事务隔离级别-以及悲观锁和乐观锁的原理和应用场景","link":"#谈谈-mysql-支持的事务隔离级别-以及悲观锁和乐观锁的原理和应用场景","children":[]},{"level":2,"title":"谈谈 Spring Bean 的生命周期和作用域？","slug":"谈谈-spring-bean-的生命周期和作用域","link":"#谈谈-spring-bean-的生命周期和作用域","children":[{"level":3,"title":"Spring 创建 Bean","slug":"spring-创建-bean","link":"#spring-创建-bean","children":[]},{"level":3,"title":"Spring 销毁 Bean","slug":"spring-销毁-bean","link":"#spring-销毁-bean","children":[]}]},{"level":2,"title":"对比 Java 标准 NIO 类库，你知道 Netty 是如何实现更高性能的吗？","slug":"对比-java-标准-nio-类库-你知道-netty-是如何实现更高性能的吗","link":"#对比-java-标准-nio-类库-你知道-netty-是如何实现更高性能的吗","children":[]},{"level":2,"title":"谈谈常用的分布式 ID 的设计方案？Snowflake 是否受冬令时切换影响？","slug":"谈谈常用的分布式-id-的设计方案-snowflake-是否受冬令时切换影响","link":"#谈谈常用的分布式-id-的设计方案-snowflake-是否受冬令时切换影响","children":[]},{"level":2,"title":"周末福利 一份 Java 工程师必读书单","slug":"周末福利-一份-java-工程师必读书单","link":"#周末福利-一份-java-工程师必读书单","children":[]},{"level":2,"title":"周末福利 谈谈我对 Java 学习和面试的看法","slug":"周末福利-谈谈我对-java-学习和面试的看法","link":"#周末福利-谈谈我对-java-学习和面试的看法","children":[]},{"level":2,"title":"结束语 技术没有终点","slug":"结束语-技术没有终点","link":"#结束语-技术没有终点","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1758979688000,"updatedTime":1758979688000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":71.49,"words":21447},"filePathRelative":"00.笔记/Java/极客时间教程-Java核心技术面试精讲.md","localizedDate":"2024年9月22日","excerpt":"<h1> 《极客时间教程 - Java 核心技术面试精讲》笔记</h1>\\n<h2> 开篇词 以面试题为切入点，有效提升你的 Java 内功</h2>\\n<p>略</p>\\n<h2> 谈谈你对 Java 平台的理解？</h2>\\n<p>【典型回答】</p>\\n<p>Java 最显著的特性：</p>\\n<ul>\\n<li>“<strong>书写一次，到处运行</strong>”（Write once, run anywhere）——跨平台</li>\\n<li><strong>垃圾收集</strong>（GC, Garbage Collection）——回收、分配内存</li>\\n</ul>\\n<p>Java 既是解释型语言，又是编译型语言</p>","autoDesc":true}');export{e as data};
