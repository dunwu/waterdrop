import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as r,c as l,f as p,a as n,b as e,d as s,e as a}from"./app-24885be0.js";const i={},d=n("h1",{id:"mongodb-事务",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mongodb-事务","aria-hidden":"true"},"#"),e(" MongoDB 事务")],-1),u=n("div",{class:"hint-container info"},[n("p",{class:"hint-container-title"},"概述"),n("p",null,[e("通俗的说，"),n("strong",null,"事务将多个读、写操作捆绑在一起成为一个逻辑操作单元"),e("。"),n("strong",null,"事务中的所有读写是一个执行的整体，整个事务要么成功（提交）、要么失败（中止或回滚）"),e("。如果失败，应用程序可以安全地重试。这样，由于不需要担心部分失败的情况（无论出于任何原因），应用层的错误处理就变得简单很多。")]),n("p",null,"大多数 NoSQL 只能部分支持事务，甚至完全不支持事务。但是，MongoDB 支持 ACID 事务，这是它的一大优势。"),n("p",null,"本文主要介绍了 MongoDB 对于事务的支持力度，以及如何应用事务。")],-1),m=a(`<h2 id="mongodb-事务简介" tabindex="-1"><a class="header-anchor" href="#mongodb-事务简介" aria-hidden="true">#</a> MongoDB 事务简介</h2><p>在 MongoDB 中，<strong>对单个文档的操作具有原子性</strong>。由于可以使用嵌入式文档和数组来捕获单个文档结构中数据之间的关系，而无需跨多个文档和集合进行标准化，因此这种单文档原子性消除了许多实际使用案例使用分布式事务的必要性。</p><p>对于需要对多文档（在单个或多个集合中）的读写操作具有原子性的情况，MongoDB 支持多文档事务。利用分布式事务，可以跨多个操作、集合、数据库、文档和分片使用事务。</p><details class="hint-container details"><summary>【示例】使用 MongoDB Java Driver 进行事务操作</summary><p>此示例重点介绍了事务 API 的关键组件。特别是，它使用回调 API。回调 API：</p><ul><li>启动事务</li><li>执行指定操作</li><li>提交结果或出现错误时结束事务</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">/*
  For a replica set, include the replica set name and a seedlist of the members in the URI string; e.g.
  String uri = &quot;mongodb://mongodb0.example.com:27017,mongodb1.example.com:27017/admin?replicaSet=myRepl&quot;;
  For a sharded cluster, connect to the mongos instances.
  For example:
  String uri = &quot;mongodb://mongos0.example.com:27017,mongos1.example.com:27017:27017/admin&quot;;
 */</span>
<span class="token keyword">final</span> <span class="token class-name">MongoClient</span> client <span class="token operator">=</span> <span class="token class-name">MongoClients</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*
    Create collections.
 */</span>
client<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;mydb1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">withWriteConcern</span><span class="token punctuation">(</span><span class="token class-name">WriteConcern</span><span class="token punctuation">.</span><span class="token constant">MAJORITY</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
client<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;mydb2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">withWriteConcern</span><span class="token punctuation">(</span><span class="token class-name">WriteConcern</span><span class="token punctuation">.</span><span class="token constant">MAJORITY</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;xyz&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* Step 1: Start a client session. */</span>
<span class="token keyword">final</span> <span class="token class-name">ClientSession</span> clientSession <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">startSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* Step 2: Optional. Define options to use for the transaction. */</span>
<span class="token class-name">TransactionOptions</span> txnOptions <span class="token operator">=</span> <span class="token class-name">TransactionOptions</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">writeConcern</span><span class="token punctuation">(</span><span class="token class-name">WriteConcern</span><span class="token punctuation">.</span><span class="token constant">MAJORITY</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* Step 3: Define the sequence of operations to perform inside the transactions. */</span>
<span class="token class-name">TransactionBody</span> txnBody <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransactionBody</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> coll1 <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;mydb1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> coll2 <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;mydb2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/*
           Important:: You must pass the session to the operations.
         */</span>
        coll1<span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span>clientSession<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        coll2<span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span>clientSession<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span><span class="token string">&quot;xyz&quot;</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Inserted into collections in different databases&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">/*
       Step 4: Use .withTransaction() to start a transaction,
       execute the callback, and commit (or abort on error).
    */</span>
    clientSession<span class="token punctuation">.</span><span class="token function">withTransaction</span><span class="token punctuation">(</span>txnBody<span class="token punctuation">,</span> txnOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// some error handling</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    clientSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>writeConcern 可以决定写操作到达多少个节点才算成功。</p><ul><li>默认：多节点复制集不做任何设定，所以是有可能丢失数据。</li><li><code>w: &quot;majority&quot;</code>：大部分节点确认，就视为写成功</li><li><code>w: &quot;all&quot;</code>：全部节点确认，才视为写成功</li></ul><p>journal 则定义如何才算成功。取值包括：</p><ul><li><code>true</code>：写操作落到 journal 文件中才算成功；</li><li><code>false</code>：写操作达到内存即算作成功。</li></ul></details><h2 id="mongodb-分布式事务" tabindex="-1"><a class="header-anchor" href="#mongodb-分布式事务" aria-hidden="true">#</a> MongoDB 分布式事务</h2><p>对于需要对多个文档（在单个或多个集合中）原子性读取和写入的情况，MongoDB 支持分布式事务，包括副本集和分片集群上的事务。可以跨多个操作、集合、数据库、文档和分片使用分布式事务。</p><p>分布式事务具有原子性：</p>`,7),h=n("li",null,"事务要么应用所有数据更改，要么回滚更改。",-1),_=n("li",null,"在事务进行提交前，在事务中所做的数据更改在事务外不可见。",-1),b={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern-local/#mongodb-readconcern-readconcern.-local-",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,'"local"',-1),g=n("li",null,"事务中止后，在事务中所做的所有数据更改会被丢弃且不会变得可见。例如，如果事务中的任何操作失败，事务就会中止，事务中所做的所有数据更改将被丢弃且不会变得可见。",-1),f={href:"https://www.mongodb.com/zh-cn/docs/manual/data-modeling/concepts/embedding-vs-references/#std-label-data-modeling-embedding",target:"_blank",rel:"noopener noreferrer"},w=n("h2",{id:"mongodb-事务操作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mongodb-事务操作","aria-hidden":"true"},"#"),e(" MongoDB 事务操作")],-1),v=n("p",null,"可以跨多个操作、集合、数据库、文档和分片使用分布式事务。",-1),y=n("p",null,"对于事务：",-1),z=n("ul",null,[n("li",null,"可以在事务中创建集合和索引。"),n("li",null,"事务中使用的集合可以位于不同的数据库中。")],-1),x=n("h3",{id:"在事务中创建集合和索引",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#在事务中创建集合和索引","aria-hidden":"true"},"#"),e(" 在事务中创建集合和索引")],-1),q={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions/#std-label-transactions",target:"_blank",rel:"noopener noreferrer"},j=n("ul",null,[n("li",null,"创建集合。"),n("li",null,"在先前同一事务中创建的新空集合上创建索引。")],-1),D=n("p",null,"在事务中创建集合时：",-1),C={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions-operations/#std-label-transactions-operations-ddl-implicit",target:"_blank",rel:"noopener noreferrer"},I={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions-operations/#std-label-transactions-operations-ddl-implicit",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"upsert: true",-1),B={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions-operations/#std-label-transactions-operations-ddl-implicit",target:"_blank",rel:"noopener noreferrer"},M={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/command/create/#mongodb-dbcommand-dbcmd.create",target:"_blank",rel:"noopener noreferrer"},$=n("code",null,"create",-1),A={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/command/create/#mongodb-dbcommand-dbcmd.create",target:"_blank",rel:"noopener noreferrer"},O=n("code",null,"db.createCollection()",-1),T={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions-operations/#std-label-transactions-operations-ddl-explicit",target:"_blank",rel:"noopener noreferrer"},V={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions-operations/#std-label-transactions-operations-ddl-explicit",target:"_blank",rel:"noopener noreferrer"},W=n("ul",null,[n("li",null,"不存在的集合。集合作为操作的一部分创建。"),n("li",null,"先前在同一事务中创建的新空集合。")],-1),P=n("h3",{id:"计数操作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#计数操作","aria-hidden":"true"},"#"),e(" 计数操作")],-1),R={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/count/#mongodb-pipeline-pipe.-count",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"$count",-1),U={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/group/#mongodb-pipeline-pipe.-group",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"$group",-1),J={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/sum/#mongodb-group-grp.-sum",target:"_blank",rel:"noopener noreferrer"},Y=n("code",null,"$sum",-1),F=n("code",null,"countDocuments(filter, options)",-1),L={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/group/#mongodb-pipeline-pipe.-group",target:"_blank",rel:"noopener noreferrer"},Q=n("code",null,"$group",-1),G={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/sum/#mongodb-group-grp.-sum",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"$sum",-1),K={href:"https://www.mongodb.com/zh-cn/docs/mongodb-shell/#mongodb-binary-bin.mongosh",target:"_blank",rel:"noopener noreferrer"},X=n("code",null,"mongosh",-1),Z={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/method/db.collection.countDocuments/#mongodb-method-db.collection.countDocuments",target:"_blank",rel:"noopener noreferrer"},nn=n("code",null,"db.collection.countDocuments()",-1),en={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/group/#mongodb-pipeline-pipe.-group",target:"_blank",rel:"noopener noreferrer"},on=n("code",null,"$group",-1),sn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/sum/#mongodb-group-grp.-sum",target:"_blank",rel:"noopener noreferrer"},an=n("code",null,"$sum",-1),tn=n("h3",{id:"去重操作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#去重操作","aria-hidden":"true"},"#"),e(" 去重操作")],-1),cn=n("p",null,"如要在事务中执行不同的操作：",-1),rn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/method/db.collection.distinct/#mongodb-method-db.collection.distinct",target:"_blank",rel:"noopener noreferrer"},ln=n("code",null,"db.collection.distinct()",-1),pn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/command/distinct/#mongodb-dbcommand-dbcmd.distinct",target:"_blank",rel:"noopener noreferrer"},dn=n("code",null,"distinct",-1),un={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/group/#mongodb-pipeline-pipe.-group",target:"_blank",rel:"noopener noreferrer"},mn=n("code",null,"$group",-1),hn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/method/db.collection.distinct/#mongodb-method-db.collection.distinct",target:"_blank",rel:"noopener noreferrer"},_n=n("code",null,"db.collection.distinct()",-1),bn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/command/distinct/#mongodb-dbcommand-dbcmd.distinct",target:"_blank",rel:"noopener noreferrer"},kn=n("code",null,"distinct",-1),gn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/operator/aggregation/group/#mongodb-pipeline-pipe.-group",target:"_blank",rel:"noopener noreferrer"},fn=n("code",null,"$group",-1),wn=a(`<ul><li><p>不使用 <code>db.coll.distinct(&quot;x&quot;)</code>，而是使用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>coll<span class="token punctuation">.</span><span class="token function">aggregate</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">$group</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">distinctValues</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$addToSet</span><span class="token operator">:</span> <span class="token string">&#39;$x&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">$project</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>不使用 <code>db.coll.distinct(&quot;x&quot;, { status: &quot;A&quot; })</code>，而是使用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>coll<span class="token punctuation">.</span><span class="token function">aggregate</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">$match</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;A&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">$group</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">distinctValues</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$addToSet</span><span class="token operator">:</span> <span class="token string">&#39;$x&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">$project</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>管道返回一个指向文档的游标：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token string-property property">&quot;distinctValues&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>迭代游标以访问结果文档。</p>`,4),vn=n("h3",{id:"信息操作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#信息操作","aria-hidden":"true"},"#"),e(" 信息操作")],-1),yn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/command/hello/#mongodb-dbcommand-dbcmd.hello",target:"_blank",rel:"noopener noreferrer"},zn=n("code",null,"hello",-1),xn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/command/buildInfo/#mongodb-dbcommand-dbcmd.buildInfo",target:"_blank",rel:"noopener noreferrer"},qn=n("code",null,"buildInfo",-1),jn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/command/connectionStatus/#mongodb-dbcommand-dbcmd.connectionStatus",target:"_blank",rel:"noopener noreferrer"},Dn=n("code",null,"connectionStatus",-1),Cn=n("h3",{id:"事务操作限制",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#事务操作限制","aria-hidden":"true"},"#"),e(" 事务操作限制")],-1),In=n("p",null,"事务中不允许执行以下操作：",-1),Sn=n("li",null,"在跨分片写事务中创建新集合。例如，如果在一个分片中写入一个现有集合，并在另一个分片中隐式创建一个集合，那么 MongoDB 将无法在同一事务中执行这两项操作。",-1),Bn={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions-operations/#std-label-transactions-operations-ddl-explicit",target:"_blank",rel:"noopener noreferrer"},Mn=n("code",null,'"local"',-1),$n={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/method/db.createCollection/#mongodb-method-db.createCollection",target:"_blank",rel:"noopener noreferrer"},An={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/method/db.collection.createIndexes/#mongodb-method-db.collection.createIndexes",target:"_blank",rel:"noopener noreferrer"},On=n("code",null,"db.createCollection()",-1),Tn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/method/db.collection.createIndex/#mongodb-method-db.collection.createIndex",target:"_blank",rel:"noopener noreferrer"},Vn=n("code",null,"db.collection.createIndexes()",-1),Wn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern-local/#mongodb-readconcern-readconcern.-local-",target:"_blank",rel:"noopener noreferrer"},Pn=n("code",null,"db.collection.createIndex()",-1),Rn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/command/listCollections/#mongodb-dbcommand-dbcmd.listCollections",target:"_blank",rel:"noopener noreferrer"},Nn=n("code",null,"listCollections",-1),Un={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/command/listIndexes/#mongodb-dbcommand-dbcmd.listIndexes",target:"_blank",rel:"noopener noreferrer"},En=n("code",null,"listIndexes",-1),Jn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/command/createUser/#mongodb-dbcommand-dbcmd.createUser",target:"_blank",rel:"noopener noreferrer"},Yn=n("code",null,"createUser",-1),Fn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/command/getParameter/#mongodb-dbcommand-dbcmd.getParameter",target:"_blank",rel:"noopener noreferrer"},Ln=n("code",null,"getParameter",-1),Qn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/command/count/#mongodb-dbcommand-dbcmd.count",target:"_blank",rel:"noopener noreferrer"},Gn=n("code",null,"count",-1),Hn={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/command/bulkWrite/#mongodb-dbcommand-dbcmd.bulkWrite",target:"_blank",rel:"noopener noreferrer"},Kn=n("code",null,"bulkWrite",-1),Xn=a('<h2 id="事务和会话" tabindex="-1"><a class="header-anchor" href="#事务和会话" aria-hidden="true">#</a> 事务和会话</h2><ul><li>事务与会话关联。</li><li>一个会话一次最多可以具有一个未结事务。</li><li>使用驱动程序时，事务中的每项操作都必须与会话关联。有关详细信息，请参阅驱动程序特定文档。</li><li>如果会话结束并且具有打开的事务，则事务将中止。</li></ul><h2 id="读关注-写关注-读取偏好" tabindex="-1"><a class="header-anchor" href="#读关注-写关注-读取偏好" aria-hidden="true">#</a> 读关注/写关注/读取偏好</h2><h3 id="事务和读取偏好" tabindex="-1"><a class="header-anchor" href="#事务和读取偏好" aria-hidden="true">#</a> 事务和读取偏好</h3>',4),Zn={href:"https://www.mongodb.com/zh-cn/docs/manual/core/read-preference/#std-label-replica-set-read-preference",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://www.mongodb.com/zh-cn/docs/manual/core/read-preference/#std-label-replica-set-read-preference",target:"_blank",rel:"noopener noreferrer"},ee=n("li",null,"如果未设置事务级别的读取偏好，则事务将使用会话级别的读取偏好。",-1),oe={href:"https://www.mongodb.com/zh-cn/docs/manual/core/read-preference/#mongodb-readmode-primary",target:"_blank",rel:"noopener noreferrer"},se=n("code",null,"primary",-1),ae={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions/#std-label-transactions",target:"_blank",rel:"noopener noreferrer"},te={href:"https://www.mongodb.com/zh-cn/docs/manual/core/read-preference/#mongodb-readmode-primary",target:"_blank",rel:"noopener noreferrer"},ce=n("code",null,"primary",-1),re=n("h3",{id:"事务和读关注",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#事务和读关注","aria-hidden":"true"},"#"),e(" 事务和读关注")],-1),le={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern/",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern/",target:"_blank",rel:"noopener noreferrer"},ie=n("li",null,"如果未设置事务级别的读关注，则事务级别的读关注默认为会话级别的读关注。",-1),de={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern-local/#mongodb-readconcern-readconcern.-local-",target:"_blank",rel:"noopener noreferrer"},ue=n("code",null,'"local"',-1),me={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions/#std-label-transactions-read-preference",target:"_blank",rel:"noopener noreferrer"},he={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/mongodb-defaults/",target:"_blank",rel:"noopener noreferrer"},_e=n("p",null,"事务支持以下读关注级别：",-1),be=n("h4",{id:"local",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#local","aria-hidden":"true"},"#"),e(),n("code",null,'"local"')],-1),ke={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern-local/#mongodb-readconcern-readconcern.-local-",target:"_blank",rel:"noopener noreferrer"},ge=n("code",null,'"local"',-1),fe=n("li",null,[e("在副本集上，即使 ACID 事务使用读关注（read concern）"),n("code",null,"local"),e(" ，也可能会观察到更强的读隔离性性，因为该操作会从 ACID 事务打开点的快照中读取。")],-1),we={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern-local/#mongodb-readconcern-readconcern.-local-",target:"_blank",rel:"noopener noreferrer"},ve=n("code",null,'"local"',-1),ye={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions/#std-label-transactions-read-concern-snapshot",target:"_blank",rel:"noopener noreferrer"},ze=n("code",null,'"snapshot"',-1),xe={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions/#std-label-transactions-create-collections-indexes",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions-operations/#std-label-transactions-operations-ddl-explicit",target:"_blank",rel:"noopener noreferrer"},je={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern-local/#mongodb-readconcern-readconcern.-local-",target:"_blank",rel:"noopener noreferrer"},De=n("code",null,'"local"',-1),Ce={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions-operations/#std-label-transactions-operations-ddl-implicit",target:"_blank",rel:"noopener noreferrer"},Ie=n("h4",{id:"majority",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#majority","aria-hidden":"true"},"#"),e(),n("code",null,'"majority"')],-1),Se={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions/#std-label-transactions-write-concern",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern-majority/#mongodb-readconcern-readconcern.-majority-",target:"_blank",rel:"noopener noreferrer"},Me=n("code",null,'"majority"',-1),$e={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern-majority/#mongodb-readconcern-readconcern.-majority-",target:"_blank",rel:"noopener noreferrer"},Ae=n("code",null,'"majority"',-1),Oe={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern-majority/#mongodb-readconcern-readconcern.-majority-",target:"_blank",rel:"noopener noreferrer"},Te=n("code",null,'"majority"',-1),Ve={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions/#std-label-transactions-read-concern-snapshot",target:"_blank",rel:"noopener noreferrer"},We=n("code",null,'"snapshot"',-1),Pe=n("h4",{id:"snapshot",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#snapshot","aria-hidden":"true"},"#"),e(),n("code",null,'"snapshot"')],-1),Re=n("strong",null,"如果",-1),Ne={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions/#std-label-transactions-write-concern",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern-snapshot/#mongodb-readconcern-readconcern.-snapshot-",target:"_blank",rel:"noopener noreferrer"},Ee=n("code",null,'"snapshot"',-1),Je={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions/#std-label-transactions-write-concern",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern-snapshot/#mongodb-readconcern-readconcern.-snapshot-",target:"_blank",rel:"noopener noreferrer"},Fe=n("code",null,'"snapshot"',-1),Le=n("strong",null,"不",-1),Qe={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/read-concern-snapshot/#mongodb-readconcern-readconcern.-snapshot-",target:"_blank",rel:"noopener noreferrer"},Ge=n("code",null,'"snapshot"',-1),He=n("strong",null,"会",-1),Ke=n("h3",{id:"事务和写关注",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#事务和写关注","aria-hidden":"true"},"#"),e(" 事务和写关注")],-1),Xe={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/write-concern/",target:"_blank",rel:"noopener noreferrer"},Ze={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/write-concern/",target:"_blank",rel:"noopener noreferrer"},no=n("li",null,"如果未设置事务级别的写关注，则事务级别的写关注默认为提交的会话级别写关注。",-1),eo={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/write-concern/#mongodb-writeconcern-writeconcern.-majority-",target:"_blank",rel:"noopener noreferrer"},oo=n("code",null,'w: "majority"',-1),so={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/write-concern/#mongodb-writeconcern-writeconcern.-majority-",target:"_blank",rel:"noopener noreferrer"},ao=n("code",null,'w: "majority"',-1),to={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/write-concern/#mongodb-writeconcern-writeconcern.-number-",target:"_blank",rel:"noopener noreferrer"},co=n("code",null,"w: 1",-1),ro={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/write-concern/#mongodb-writeconcern-writeconcern.-number-",target:"_blank",rel:"noopener noreferrer"},lo=n("code",null,"w: 1",-1),po=n("h2",{id:"参考资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),e(" 参考资料")],-1),io={href:"https://www.mongodb.com/zh-cn/docs/manual/core/transactions/",target:"_blank",rel:"noopener noreferrer"};function uo(mo,ho){const o=c("ExternalLinkIcon");return r(),l("div",null,[d,u,p(" more "),m,n("ul",null,[h,n("li",null,[e("在事务提交时，事务中所做的所有数据更改都会保存，并且在事务之外可见。 "),n("ul",null,[_,n("li",null,[e("不过，当事务写入多个分片时，并非所有外部读取操作都需等待已提交事务的结果在各个分片上可见。例如，如果事务已提交并且写入 1 在分片 A 上可见，但写入 2 在分片 B 上尚不可见，则读关注 "),n("a",b,[k,s(o)]),e(" 处的外部读取可以在不看到写入 2 的情况下读取写入 1 的结果。")])])]),g]),n("blockquote",null,[n("p",null,[e("要点：在大多数情况下，与单文档写入操作相比，分布式事务会产生更高的性能成本，并且分布式事务的可用性不应取代有效的模式设计。在许多情况下，"),n("a",f,[e("非规范化数据模型（嵌入式文档和数组）"),s(o)]),e(" 仍然是数据和使用案例的最佳选择。换言之，对于许多场景，适当的数据建模将最大限度地减少对分布式事务的需求。")])]),w,v,y,z,x,n("p",null,[e("如果事务不是跨分片写入事务，则可以在 "),n("a",q,[e("分布式事务"),s(o)]),e(" 中执行以下操作：")]),j,D,n("ul",null,[n("li",null,[e("可以 "),n("a",C,[e("隐式创建一个集合"),s(o)]),e("，例如： "),n("ul",null,[n("li",null,[e("对不存在的集合进行 "),n("a",I,[e("插入操作"),s(o)])]),n("li",null,[e("对不存在的集合使用 "),S,e(" 进行 "),n("a",B,[e("update/findAndModify 操作"),s(o)]),e("。")])])]),n("li",null,[e("可以使用 "),n("a",M,[$,s(o)]),e(" 命令或其辅助程序 "),n("a",A,[O,s(o)]),n("a",T,[e("显式创建集合"),s(o)]),e("。")])]),n("p",null,[n("a",V,[e("在事务内创建索引"),s(o)]),e(" 时，要创建的索引必须位于以下位置之一：")]),W,P,n("p",null,[e("要在事务内执行计数操作，请使用 "),n("a",R,[N,s(o)]),e(" 聚合阶段或 "),n("a",U,[E,s(o)]),e("（带有 "),n("a",J,[Y,s(o)]),e(" 表达式）聚合阶段。")]),n("p",null,[e("MongoDB 驱动程序提供集合级 API "),F,e(" 作为辅助方法，该方法使用 "),n("a",L,[Q,s(o)]),e(" 和 "),n("a",G,[H,s(o)]),e(" 表达式来执行计数。")]),n("p",null,[n("a",K,[X,s(o)]),e(" 提供 "),n("a",Z,[nn,s(o)]),e(" 辅助方法，该方法使用 "),n("a",en,[on,s(o)]),e(" 和 "),n("a",sn,[an,s(o)]),e(" 表达式进行计数。")]),tn,cn,n("ul",null,[n("li",null,[n("p",null,[e("对于未分片的集合，可以使用 "),n("a",rn,[ln,s(o)]),e(" 方法 /"),n("a",pn,[dn,s(o)]),e(" 命令以及带有 "),n("a",un,[mn,s(o)]),e(" 阶段的聚合管道。")])]),n("li",null,[n("p",null,[e("对于分片集合，不能使用 "),n("a",hn,[_n,s(o)]),e(" 方法或 "),n("a",bn,[kn,s(o)]),e(" 命令。")]),n("p",null,[e("要查找分片集合的不同值，请改用带有 "),n("a",gn,[fn,s(o)]),e(" 阶段的 aggregation pipeline。例如：")]),wn])]),vn,n("p",null,[e("事务中允许使用诸如 "),n("a",yn,[zn,s(o)]),e("、"),n("a",xn,[qn,s(o)]),e("、"),n("a",jn,[Dn,s(o)]),e("（及其辅助方法）之类的信息命令，但它们不能是事务中的第一项操作。")]),Cn,In,n("ul",null,[Sn,n("li",null,[e("使用 "),n("a",Bn,[Mn,s(o)]),e(" 以外的读关注级别时，"),n("a",$n,[e("显式创建集合"),s(o)]),e("（例如 "),n("a",An,[On,s(o)]),e(" 方法）和索引（例如 "),n("a",Tn,[Vn,s(o)]),e(" 和 "),n("a",Wn,[Pn,s(o)]),e(" 方法）。")]),n("li",null,[n("a",Rn,[Nn,s(o)]),e(" 和 "),n("a",Un,[En,s(o)]),e(" 命令及其辅助方法。")]),n("li",null,[e("其他非 CRUD 和非信息性操作（例如 "),n("a",Jn,[Yn,s(o)]),e("、"),n("a",Fn,[Ln,s(o)]),e(" 和 "),n("a",Qn,[Gn,s(o)]),e("）及其辅助程序。")]),n("li",null,[e("并行操作。要同时更新多个命名空间，请考虑改用 "),n("a",Hn,[Kn,s(o)]),e(" 命令。")])]),Xn,n("p",null,[e("事务中的操作使用事务级 "),n("a",Zn,[e("读取偏好"),s(o)]),e("。")]),n("p",null,[e("使用驱动程序，可以在事务启动时设置事务级 "),n("a",ne,[e("读取偏好"),s(o)]),e("：")]),n("ul",null,[ee,n("li",null,[e("如果未设置事务级别和会话级别的读取偏好，则事务将使用客户端级别的读取偏好。默认情况下，客户端级别的读取偏好为 "),n("a",oe,[se,s(o)]),e("。")])]),n("p",null,[e("包含读取操作的 "),n("a",ae,[e("分布式事务"),s(o)]),e(" 必须使用读取偏好 "),n("a",te,[ce,s(o)]),e("。给定事务中的所有操作必须路由到同一节点。")]),re,n("p",null,[e("事务中的操作使用事务级 "),n("a",le,[e("读关注"),s(o)]),e("。也就是说，在集合和数据库级别设置的任何读关注在事务中都会被忽略。")]),n("p",null,[e("可以在事务启动时设置事务级别的 "),n("a",pe,[e("读关注"),s(o)]),e("。")]),n("ul",null,[ie,n("li",null,[e("如果未设置事务级读关注和会话级读关注，则事务级读关注默认为客户端级读关注。默认情况下，对于主节点上的读取，客户端级读关注是 "),n("a",de,[ue,s(o)]),e("。另请参阅： "),n("ul",null,[n("li",null,[n("a",me,[e("事务和读取偏好"),s(o)])]),n("li",null,[n("a",he,[e("默认 MongoDB 读关注/写关注"),s(o)])])])])]),_e,be,n("ul",null,[n("li",null,[e("读关注 "),n("a",ke,[ge,s(o)]),e(" 返回节点中可用的最新数据，但可以回滚。")]),fe,n("li",null,[e("对于分片集群上的事务，读关注 "),n("a",we,[ve,s(o)]),e(" 无法保证数据来自跨分片的同一快照视图。如果需要快照隔离，请使用读关注 "),n("a",ye,[ze,s(o)]),e("。")]),n("li",null,[e("可以在事务中 "),n("a",xe,[e("创建集合和索引"),s(o)]),e("。如要 "),n("a",qe,[e("显式"),s(o)]),e(" 创建集合或索引，则事务必须使用读关注 "),n("a",je,[De,s(o)]),e("。如果 "),n("a",Ce,[e("隐式"),s(o)]),e(" 创建集合，则可以使用任何可用于事务的读关注。")])]),Ie,n("ul",null,[n("li",null,[e("如果事务以 "),n("a",Se,[e("写关注“majority”"),s(o)]),e(" 提交，则读关注 "),n("a",Be,[Me,s(o)]),e(" 返回已被多数副本集节点确认且无法回滚的数据。否则，读关注 "),n("a",$e,[Ae,s(o)]),e(" 不保证读取操作读取多数提交的数据。")]),n("li",null,[e("对于分片集群上的事务，读关注 "),n("a",Oe,[Te,s(o)]),e(" 无法保证数据来自跨分片的同一快照视图。如果需要快照隔离，请使用读关注 "),n("a",Ve,[We,e("。"),s(o)])])]),Pe,n("ul",null,[n("li",null,[Re,e("事务使用 "),n("a",Ne,[e("写关注“majority”"),s(o)]),e(" 提交，则读关注 "),n("a",Ue,[Ee,s(o)]),e(" 会从多数已提交数据的快照中返回数据。")]),n("li",null,[e("如果事务不使用 "),n("a",Je,[e("写关注“majority”"),s(o)]),e(" 提交，则 "),n("a",Ye,[Fe,s(o)]),e(" 读关注"),Le,e("保证读操作会使用大多数已提交数据的快照。")]),n("li",null,[e("对于分片集群上的事务，数据的 "),n("a",Qe,[Ge,s(o)]),e(" 视图"),He,e("在各分片之间同步。")])]),Ke,n("p",null,[e("事务使用事务级 "),n("a",Xe,[e("写关注"),s(o)]),e(" 来提交写入操作。事务内的写入操作必须在没有明确写关注规范的情况下执行，并须使用默认的写关注。在提交时，使用事务级写关注来提交写入。")]),n("p",null,[e("可以在事务启动时设置事务级"),n("a",Ze,[e("写关注"),s(o)]),e("。")]),n("ul",null,[no,n("li",null,[e("如果未设置事务级别的写关注和会话级别的的写关注，则事务级别的写关注默认为 的客户端级别的写关注， "),n("ul",null,[n("li",null,[n("a",eo,[oo,s(o)]),e(" - 将提交应用于大多数投票节点后，写关注 "),n("a",so,[ao,s(o)]),e(" 会返回确认消息。")]),n("li",null,[n("a",to,[co,s(o)]),e(" - "),n("a",ro,[lo,s(o)]),e(" 会在提交应用于主节点后返回确认信息。")])])])]),po,n("ul",null,[n("li",null,[n("a",io,[e("MongoDB 官方文档之事务"),s(o)])])])])}const ko=t(i,[["render",uo],["__file","index.html.vue"]]);export{ko as default};
