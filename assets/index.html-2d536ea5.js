const e=JSON.parse('{"key":"v-6127d44e","path":"/pages/a90d597d/","title":"MongoDB 建模","lang":"zh-CN","frontmatter":{"icon":"logos:mongodb","title":"MongoDB 建模","cover":"https://raw.githubusercontent.com/dunwu/images/master/snap/202503072140127.png","date":"2020-09-12T10:43:53.000Z","permalink":"/pages/a90d597d/","category":["数据库","文档数据库","MongoDB"],"tag":["数据库","文档数据库","MongoDB","建模"],"description":"MongoDB 建模 概述 数据建模是指对数据库中的数据以及相关实体间的链接进行组织。MongoDB 中的数据具有灵活的模式模型，因此： 单个 集合 中的 文档 不必具有相同的字段集。 字段的数据类型可能因集合中的文档而异。 通常，集合中的文档具有相似的结构。为确保数据模型的一致性，可以创建 模式验证规则。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/a90d597d/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"MongoDB 建模"}],["meta",{"property":"og:description","content":"MongoDB 建模 概述 数据建模是指对数据库中的数据以及相关实体间的链接进行组织。MongoDB 中的数据具有灵活的模式模型，因此： 单个 集合 中的 文档 不必具有相同的字段集。 字段的数据类型可能因集合中的文档而异。 通常，集合中的文档具有相似的结构。为确保数据模型的一致性，可以创建 模式验证规则。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dunwu/images/master/snap/202503072140127.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-23T15:53:48.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"MongoDB 建模"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"文档数据库"}],["meta",{"property":"article:tag","content":"MongoDB"}],["meta",{"property":"article:tag","content":"建模"}],["meta",{"property":"article:published_time","content":"2020-09-12T10:43:53.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-23T15:53:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MongoDB 建模\\",\\"image\\":[\\"https://raw.githubusercontent.com/dunwu/images/master/snap/202503072140127.png\\"],\\"datePublished\\":\\"2020-09-12T10:43:53.000Z\\",\\"dateModified\\":\\"2025-09-23T15:53:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"模式设计：关系数据库和文档数据库的差异","slug":"模式设计-关系数据库和文档数据库的差异","link":"#模式设计-关系数据库和文档数据库的差异","children":[]},{"level":2,"title":"文档数据模型","slug":"文档数据模型","link":"#文档数据模型","children":[{"level":3,"title":"嵌入式数据模型","slug":"嵌入式数据模型","link":"#嵌入式数据模型","children":[]},{"level":3,"title":"引用式数据模型","slug":"引用式数据模型","link":"#引用式数据模型","children":[]}]},{"level":2,"title":"关系型模型","slug":"关系型模型","link":"#关系型模型","children":[{"level":3,"title":"嵌入式文档一对一关系模型","slug":"嵌入式文档一对一关系模型","link":"#嵌入式文档一对一关系模型","children":[]},{"level":3,"title":"嵌入式文档一对多关系模型","slug":"嵌入式文档一对多关系模型","link":"#嵌入式文档一对多关系模型","children":[]},{"level":3,"title":"引用式文档一对多关系模型","slug":"引用式文档一对多关系模型","link":"#引用式文档一对多关系模型","children":[]}]},{"level":2,"title":"树形结构模型","slug":"树形结构模型","link":"#树形结构模型","children":[{"level":3,"title":"具有父节点的树形结构模型","slug":"具有父节点的树形结构模型","link":"#具有父节点的树形结构模型","children":[]},{"level":3,"title":"具有子节点的树形结构模型","slug":"具有子节点的树形结构模型","link":"#具有子节点的树形结构模型","children":[]},{"level":3,"title":"具有祖先的树形结构模型","slug":"具有祖先的树形结构模型","link":"#具有祖先的树形结构模型","children":[]},{"level":3,"title":"具有实体化路径的树形结构模型","slug":"具有实体化路径的树形结构模型","link":"#具有实体化路径的树形结构模型","children":[]},{"level":3,"title":"具有嵌套集的树形结构模型","slug":"具有嵌套集的树形结构模型","link":"#具有嵌套集的树形结构模型","children":[]}]},{"level":2,"title":"设计模式","slug":"设计模式","link":"#设计模式","children":[{"level":3,"title":"大文档，很多列，很多索引","slug":"大文档-很多列-很多索引","link":"#大文档-很多列-很多索引","children":[]},{"level":3,"title":"管理文档不同版本","slug":"管理文档不同版本","link":"#管理文档不同版本","children":[]},{"level":3,"title":"统计网页点击量","slug":"统计网页点击量","link":"#统计网页点击量","children":[]},{"level":3,"title":"精确统计","slug":"精确统计","link":"#精确统计","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1758036164000,"updatedTime":1758642828000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":2}]},"readingTime":{"minutes":9.1,"words":2729},"filePathRelative":"12.数据库/文档数据库/MongoDB/MongoDB_建模.md","localizedDate":"2020年9月12日","excerpt":"<h1> MongoDB 建模</h1>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">概述</p>\\n<p>数据建模是指对数据库中的数据以及相关实体间的链接进行组织。MongoDB 中的数据具有<strong>灵活的模式模型</strong>，因此：</p>\\n<ul>\\n<li>单个 <a href=\\"https://www.mongodb.com/zh-cn/docs/manual/reference/glossary/#std-term-collection\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">集合</a> 中的 <a href=\\"https://www.mongodb.com/zh-cn/docs/manual/reference/glossary/#std-term-document\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">文档</a> 不必具有相同的字段集。</li>\\n<li>字段的数据类型可能因集合中的文档而异。</li>\\n</ul>\\n<p>通常，集合中的文档具有相似的结构。为确保数据模型的一致性，可以创建 <a href=\\"https://www.mongodb.com/zh-cn/docs/manual/core/schema-validation/#std-label-schema-validation-overview\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">模式验证规则</a>。</p>\\n</div>\\n","autoDesc":true}');export{e as data};
