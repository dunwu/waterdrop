const e=JSON.parse('{"key":"v-1e3510c8","path":"/04.DevOps/%E5%B7%A5%E5%85%B7/Kubernetes/K8S_%E9%9D%A2%E8%AF%95.html","title":"Kubernetes 面试","lang":"zh-CN","frontmatter":{"title":"Kubernetes 面试","icon":"logos:kubernetes","order":99,"category":["DevOps","工具","Kubernetes"],"tag":["DevOps","Docker","Kubernetes","面试"],"description":"Kubernetes 面试 【中等】什么是 Kubernetes，并描述其主要组件及其作用。 Kubernetes（K8s）是一个开源的容器编排平台，用于自动化部署、扩展和管理容器化应用。 它解决了管理大量微服务时的核心难题： 自动化运维：实现自动部署、扩缩容、故障恢复（自我修复）、滚动更新。 高可用与弹性伸缩：保证应用持续在线，并能轻松应对流量波动。 资源优化：高效调度容器，充分利用基础设施资源。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/04.DevOps/%E5%B7%A5%E5%85%B7/Kubernetes/K8S_%E9%9D%A2%E8%AF%95.html"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Kubernetes 面试"}],["meta",{"property":"og:description","content":"Kubernetes 面试 【中等】什么是 Kubernetes，并描述其主要组件及其作用。 Kubernetes（K8s）是一个开源的容器编排平台，用于自动化部署、扩展和管理容器化应用。 它解决了管理大量微服务时的核心难题： 自动化运维：实现自动部署、扩缩容、故障恢复（自我修复）、滚动更新。 高可用与弹性伸缩：保证应用持续在线，并能轻松应对流量波动。 资源优化：高效调度容器，充分利用基础设施资源。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-24T23:49:46.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"DevOps"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:tag","content":"Kubernetes"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:modified_time","content":"2025-09-24T23:49:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kubernetes 面试\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-24T23:49:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"【中等】什么是 Kubernetes，并描述其主要组件及其作用。","slug":"【中等】什么是-kubernetes-并描述其主要组件及其作用。","link":"#【中等】什么是-kubernetes-并描述其主要组件及其作用。","children":[]},{"level":2,"title":"【中等】如何在 Kubernetes 中创建一个 Pod？","slug":"【中等】如何在-kubernetes-中创建一个-pod","link":"#【中等】如何在-kubernetes-中创建一个-pod","children":[]},{"level":2,"title":"【中等】Kubernetes 中的 Service 和 Ingress 有什么区别？","slug":"【中等】kubernetes-中的-service-和-ingress-有什么区别","link":"#【中等】kubernetes-中的-service-和-ingress-有什么区别","children":[{"level":3,"title":"Service（服务）：内部稳定端点","slug":"service-服务-内部稳定端点","link":"#service-服务-内部稳定端点","children":[]},{"level":3,"title":"Ingress（入口）：外部流量网关","slug":"ingress-入口-外部流量网关","link":"#ingress-入口-外部流量网关","children":[]}]},{"level":2,"title":"【中等】Kubernetes 中如何进行滚动更新和回滚？","slug":"【中等】kubernetes-中如何进行滚动更新和回滚","link":"#【中等】kubernetes-中如何进行滚动更新和回滚","children":[{"level":3,"title":"滚动更新","slug":"滚动更新","link":"#滚动更新","children":[]},{"level":3,"title":"回滚操作","slug":"回滚操作","link":"#回滚操作","children":[]}]},{"level":2,"title":"【中等】Kubernetes 中的 ConfigMap 和 Secret 有什么作用？","slug":"【中等】kubernetes-中的-configmap-和-secret-有什么作用","link":"#【中等】kubernetes-中的-configmap-和-secret-有什么作用","children":[{"level":3,"title":"ConfigMap（配置映射）","slug":"configmap-配置映射","link":"#configmap-配置映射","children":[]},{"level":3,"title":"Secret（密钥）","slug":"secret-密钥","link":"#secret-密钥","children":[]}]},{"level":2,"title":"【中等】Kubernetes 中如何配置资源配额？","slug":"【中等】kubernetes-中如何配置资源配额","link":"#【中等】kubernetes-中如何配置资源配额","children":[]},{"level":2,"title":"【中等】Kubernetes 中的 Namespace 有什么作用？","slug":"【中等】kubernetes-中的-namespace-有什么作用","link":"#【中等】kubernetes-中的-namespace-有什么作用","children":[]},{"level":2,"title":"【中等】Kubernetes 中如何进行日志管理？","slug":"【中等】kubernetes-中如何进行日志管理","link":"#【中等】kubernetes-中如何进行日志管理","children":[]},{"level":2,"title":"【中等】Kubernetes 中如何实现持久化存储？","slug":"【中等】kubernetes-中如何实现持久化存储","link":"#【中等】kubernetes-中如何实现持久化存储","children":[]},{"level":2,"title":"核心作用","slug":"核心作用","link":"#核心作用","children":[]},{"level":2,"title":"【中等】Kubernetes 中的 Helm 有什么作用？","slug":"【中等】kubernetes-中的-helm-有什么作用","link":"#【中等】kubernetes-中的-helm-有什么作用","children":[]},{"level":2,"title":"【中等】如何在 Kubernetes 中使用 Helm 部署应用？","slug":"【中等】如何在-kubernetes-中使用-helm-部署应用","link":"#【中等】如何在-kubernetes-中使用-helm-部署应用","children":[]},{"level":2,"title":"【中等】Kubernetes 中如何进行安全配置？","slug":"【中等】kubernetes-中如何进行安全配置","link":"#【中等】kubernetes-中如何进行安全配置","children":[]},{"level":2,"title":"【中等】Kubernetes 中的 Pod 是什么？其作用是什么？","slug":"【中等】kubernetes-中的-pod-是什么-其作用是什么","link":"#【中等】kubernetes-中的-pod-是什么-其作用是什么","children":[]},{"level":2,"title":"【中等】如何在 Kubernetes 中实现服务的自动伸缩？","slug":"【中等】如何在-kubernetes-中实现服务的自动伸缩","link":"#【中等】如何在-kubernetes-中实现服务的自动伸缩","children":[]},{"level":2,"title":"【中等】Kubernetes 中的 Deployment 和 StatefulSet 有什么区别？","slug":"【中等】kubernetes-中的-deployment-和-statefulset-有什么区别","link":"#【中等】kubernetes-中的-deployment-和-statefulset-有什么区别","children":[]},{"level":2,"title":"【中等】Kubernetes 中的 Ingress 资源有什么作用？如何配置？","slug":"【中等】kubernetes-中的-ingress-资源有什么作用-如何配置","link":"#【中等】kubernetes-中的-ingress-资源有什么作用-如何配置","children":[]},{"level":2,"title":"【中等】Kubernetes 中的 DaemonSet 有什么作用？","slug":"【中等】kubernetes-中的-daemonset-有什么作用","link":"#【中等】kubernetes-中的-daemonset-有什么作用","children":[]},{"level":2,"title":"【中等】Kubernetes 中的 ReplicaSet 和 ReplicationController 有什么区别？","slug":"【中等】kubernetes-中的-replicaset-和-replicationcontroller-有什么区别","link":"#【中等】kubernetes-中的-replicaset-和-replicationcontroller-有什么区别","children":[]},{"level":2,"title":"【中等】Kubernetes 中的 Service 有哪几种类型？","slug":"【中等】kubernetes-中的-service-有哪几种类型","link":"#【中等】kubernetes-中的-service-有哪几种类型","children":[]},{"level":2,"title":"【中等】Kubernetes 的 Helm Charts 如何实现应用的版本控制？","slug":"【中等】kubernetes-的-helm-charts-如何实现应用的版本控制","link":"#【中等】kubernetes-的-helm-charts-如何实现应用的版本控制","children":[]},{"level":2,"title":"【中等】Kubernetes 中的 Job 和 CronJob 有什么区别？","slug":"【中等】kubernetes-中的-job-和-cronjob-有什么区别","link":"#【中等】kubernetes-中的-job-和-cronjob-有什么区别","children":[]},{"level":2,"title":"【中等】Kubernetes 中的 Persistent Volume 和 Persistent Volume Claim 有什么区别？","slug":"【中等】kubernetes-中的-persistent-volume-和-persistent-volume-claim-有什么区别","link":"#【中等】kubernetes-中的-persistent-volume-和-persistent-volume-claim-有什么区别","children":[]},{"level":2,"title":"【中等】Kubernetes 中的网络策略如何实现？","slug":"【中等】kubernetes-中的网络策略如何实现","link":"#【中等】kubernetes-中的网络策略如何实现","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1758757786000,"updatedTime":1758757786000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":21.39,"words":6417},"filePathRelative":"04.DevOps/工具/Kubernetes/K8S_面试.md","localizedDate":"2025年9月24日","excerpt":"<h1> Kubernetes 面试</h1>\\n<h2> 【中等】什么是 Kubernetes，并描述其主要组件及其作用。</h2>\\n<p>Kubernetes（K8s）是一个<strong>开源的容器编排平台</strong>，用于<strong>自动化部署、扩展和管理容器化应用</strong>。</p>\\n<p>它解决了管理大量微服务时的核心难题：</p>\\n<ul>\\n<li><strong>自动化运维</strong>：实现自动部署、扩缩容、故障恢复（自我修复）、滚动更新。</li>\\n<li><strong>高可用与弹性伸缩</strong>：保证应用持续在线，并能轻松应对流量波动。</li>\\n<li><strong>资源优化</strong>：高效调度容器，充分利用基础设施资源。</li>\\n</ul>","autoDesc":true}');export{e as data};
