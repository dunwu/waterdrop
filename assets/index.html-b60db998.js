const e=JSON.parse('{"key":"v-56edcbb4","path":"/pages/ea60b1cc/","title":"MongoDB 分片","lang":"zh-CN","frontmatter":{"icon":"logos:mongodb","title":"MongoDB 分片","cover":"https://raw.githubusercontent.com/dunwu/images/master/snap/202503062347036.avif","date":"2020-09-20T23:12:17.000Z","permalink":"/pages/ea60b1cc/","category":["数据库","文档数据库","mongodb"],"tag":["数据库","文档数据库","mongodb","分区"],"description":"MongoDB 分片 概述 分区通常是这样定义的，即每一条数据（或者每条记录，每行或每个文档）只属于某个特定分区。实际上，每个分区都可以视为一个完整的小型数据库，虽然数据库可能存在一些跨分区的操作。 在不同系统中，分区有着不同的称呼，例如它对应于 MongoDB, Elasticsearch 和 SolrCloud 中的 shard, HBase 的 region, Bigtable 中的 tablet, Cassandra 和 Riak 中的 vnode ，以及 Couch base 中的 vBucket。 数据量如果太大，单台机器进行存储和处理就会成为瓶颈，因此需要引入数据分区机制。分区的目地是通过多台机器均匀分布数据和查询负载，避免出现热点。这需要选择合适的数据分区方案，在节点添加或删除时重新动态平衡分区。 分区通常与复制结合使用，即每个分区在多个节点都存有副本。这意味着某条记录属于特定的分区，而同样的内容会保存在不同的节点上以提高系统的容错性。一个节点上可能存储了多个分区。每个分区都有自己的主副本，例如被分配给某节点，而从副本则分配在其他一些节点。一个节点可能既是某些分区的主副本，同时又是其他分区的从副本。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/ea60b1cc/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"MongoDB 分片"}],["meta",{"property":"og:description","content":"MongoDB 分片 概述 分区通常是这样定义的，即每一条数据（或者每条记录，每行或每个文档）只属于某个特定分区。实际上，每个分区都可以视为一个完整的小型数据库，虽然数据库可能存在一些跨分区的操作。 在不同系统中，分区有着不同的称呼，例如它对应于 MongoDB, Elasticsearch 和 SolrCloud 中的 shard, HBase 的 region, Bigtable 中的 tablet, Cassandra 和 Riak 中的 vnode ，以及 Couch base 中的 vBucket。 数据量如果太大，单台机器进行存储和处理就会成为瓶颈，因此需要引入数据分区机制。分区的目地是通过多台机器均匀分布数据和查询负载，避免出现热点。这需要选择合适的数据分区方案，在节点添加或删除时重新动态平衡分区。 分区通常与复制结合使用，即每个分区在多个节点都存有副本。这意味着某条记录属于特定的分区，而同样的内容会保存在不同的节点上以提高系统的容错性。一个节点上可能存储了多个分区。每个分区都有自己的主副本，例如被分配给某节点，而从副本则分配在其他一些节点。一个节点可能既是某些分区的主副本，同时又是其他分区的从副本。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dunwu/images/master/snap/202503062347036.avif"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-13T09:46:18.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"MongoDB 分片"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"文档数据库"}],["meta",{"property":"article:tag","content":"mongodb"}],["meta",{"property":"article:tag","content":"分区"}],["meta",{"property":"article:published_time","content":"2020-09-20T23:12:17.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-13T09:46:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MongoDB 分片\\",\\"image\\":[\\"https://raw.githubusercontent.com/dunwu/images/master/snap/202503062347036.avif\\"],\\"datePublished\\":\\"2020-09-20T23:12:17.000Z\\",\\"dateModified\\":\\"2025-09-13T09:46:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"分片简介","slug":"分片简介","link":"#分片简介","children":[]},{"level":2,"title":"分片集群组件","slug":"分片集群组件","link":"#分片集群组件","children":[{"level":3,"title":"分片","slug":"分片","link":"#分片","children":[]},{"level":3,"title":"配置服务器","slug":"配置服务器","link":"#配置服务器","children":[]},{"level":3,"title":"路由节点","slug":"路由节点","link":"#路由节点","children":[]}]},{"level":2,"title":"分片键","slug":"分片键","link":"#分片键","children":[]},{"level":2,"title":"分片策略","slug":"分片策略","link":"#分片策略","children":[{"level":3,"title":"哈希分片","slug":"哈希分片","link":"#哈希分片","children":[]},{"level":3,"title":"范围分片","slug":"范围分片","link":"#范围分片","children":[]}]},{"level":2,"title":"分片负载均衡","slug":"分片负载均衡","link":"#分片负载均衡","children":[]},{"level":2,"title":"分片集群中的区域","slug":"分片集群中的区域","link":"#分片集群中的区域","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1741093684000,"updatedTime":1757756778000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":5}]},"readingTime":{"minutes":13.56,"words":4067},"filePathRelative":"12.数据库/04.文档数据库/mongodb/MongoDB_分片.md","localizedDate":"2020年9月20日","excerpt":"<h1> MongoDB 分片</h1>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">概述</p>\\n<p>分区通常是这样定义的，即每一条数据（或者每条记录，每行或每个文档）只属于某个特定分区。实际上，每个分区都可以视为一个完整的小型数据库，虽然数据库可能存在一些跨分区的操作。</p>\\n<p>在不同系统中，分区有着不同的称呼，例如它对应于 MongoDB, Elasticsearch 和 SolrCloud 中的 shard, HBase 的 region, Bigtable 中的 tablet, Cassandra 和 Riak 中的 vnode ，以及 Couch base 中的 vBucket。</p>\\n<p>数据量如果太大，单台机器进行存储和处理就会成为瓶颈，因此需要引入数据分区机制。分区的目地是通过多台机器均匀分布数据和查询负载，避免出现热点。这需要选择合适的数据分区方案，在节点添加或删除时重新动态平衡分区。</p>\\n<p>分区通常与复制结合使用，即每个分区在多个节点都存有副本。这意味着某条记录属于特定的分区，而同样的内容会保存在不同的节点上以提高系统的容错性。一个节点上可能存储了多个分区。每个分区都有自己的主副本，例如被分配给某节点，而从副本则分配在其他一些节点。一个节点可能既是某些分区的主副本，同时又是其他分区的从副本。</p>\\n</div>\\n","autoDesc":true}');export{e as data};
