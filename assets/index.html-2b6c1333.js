const a=JSON.parse('{"key":"v-bfa2d4a6","path":"/pages/5c05655a/","title":"JavaAgent","lang":"zh-CN","frontmatter":{"title":"JavaAgent","date":"2022-04-08T17:29:48.000Z","order":"08","permalink":"/pages/5c05655a/","category":["Java","JavaCore","高级特性"],"tag":["Java","JavaCore","JavaAgent"],"description":"JavaAgent Javaagent 是什么？ Javaagent 是 java 命令的一个参数。参数 javaagent 可以用于指定一个 jar 包，它利用 JVM 提供的 Instrumentation API 来更改加载 JVM 中的现有字节码。 这个 jar 包的 MANIFEST.MF 文件必须指定 Premain-Class 项。 Premain-Class 指定的那个类必须实现 premain() 方法。 premain 方法，从字面上理解，就是运行在 main 函数之前的的类。当 Java 虚拟机启动时，在执行 main 函数之前，JVM 会先运行-javaagent所指定 jar 包内 Premain-Class 这个类的 premain 方法 。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/5c05655a/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"JavaAgent"}],["meta",{"property":"og:description","content":"JavaAgent Javaagent 是什么？ Javaagent 是 java 命令的一个参数。参数 javaagent 可以用于指定一个 jar 包，它利用 JVM 提供的 Instrumentation API 来更改加载 JVM 中的现有字节码。 这个 jar 包的 MANIFEST.MF 文件必须指定 Premain-Class 项。 Premain-Class 指定的那个类必须实现 premain() 方法。 premain 方法，从字面上理解，就是运行在 main 函数之前的的类。当 Java 虚拟机启动时，在执行 main 函数之前，JVM 会先运行-javaagent所指定 jar 包内 Premain-Class 这个类的 premain 方法 。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-15T00:29:21.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JavaCore"}],["meta",{"property":"article:tag","content":"JavaAgent"}],["meta",{"property":"article:published_time","content":"2022-04-08T17:29:48.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-15T00:29:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaAgent\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-08T17:29:48.000Z\\",\\"dateModified\\":\\"2025-09-15T00:29:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"Java Agent 技术简介","slug":"java-agent-技术简介","link":"#java-agent-技术简介","children":[]},{"level":2,"title":"Java Agent 功能介绍","slug":"java-agent-功能介绍","link":"#java-agent-功能介绍","children":[]},{"level":2,"title":"Java Agent 实现原理","slug":"java-agent-实现原理","link":"#java-agent-实现原理","children":[]},{"level":2,"title":"Java Agent 案例","slug":"java-agent-案例","link":"#java-agent-案例","children":[{"level":3,"title":"加载 Java 字节码之前拦截","slug":"加载-java-字节码之前拦截","link":"#加载-java-字节码之前拦截","children":[]},{"level":3,"title":"运行时拦截（JDK 1.6 及以上）","slug":"运行时拦截-jdk-1-6-及以上","link":"#运行时拦截-jdk-1-6-及以上","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757896161000,"updatedTime":1757896161000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":7.96,"words":2387},"filePathRelative":"01.Java/01.JavaCore/高级特性/Java_Agent.md","localizedDate":"2022年4月8日","excerpt":"<h1> JavaAgent</h1>\\n<p>Javaagent 是什么？</p>\\n<p>Javaagent 是 java 命令的一个参数。参数 javaagent 可以用于指定一个 jar 包，它利用 JVM 提供的 Instrumentation API 来更改加载 JVM 中的现有字节码。</p>\\n<ol>\\n<li>这个 jar 包的 MANIFEST.MF 文件必须指定 Premain-Class 项。</li>\\n<li>Premain-Class 指定的那个类必须实现 premain() 方法。</li>\\n</ol>\\n<p>premain 方法，从字面上理解，就是运行在 main 函数之前的的类。当 Java 虚拟机启动时，在执行 main 函数之前，JVM 会先运行<code>-javaagent</code>所指定 jar 包内 Premain-Class 这个类的 premain 方法 。</p>","autoDesc":true}');export{a as data};
