import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-b8b4ead8.js";const i={},u=p('<h1 id="dozer-快速入门" tabindex="-1"><a class="header-anchor" href="#dozer-快速入门" aria-hidden="true">#</a> Dozer 快速入门</h1><p>这篇文章是本人在阅读 Dozer 官方文档（5.5.1 版本，官网已经一年多没更新了）的过程中，整理下来我认为比较基础的应用场景。</p><p>本文中提到的例子应该能覆盖 JavaBean 映射的大部分场景，希望对你有所帮助。</p><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p><strong>Dozer 是什么?</strong></p><p><strong>Dozer 是一个 JavaBean 映射工具库。</strong></p><p>它支持简单的属性映射，复杂类型映射，双向映射，隐式显式的映射，以及递归映射。</p><p>它支持三种映射方式：注解、API、XML。</p>',8),r={href:"http://www.apache.org/licenses/LICENSE-2.0",target:"_blank",rel:"noopener noreferrer"},k=p(`<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><h3 id="引入-jar-包" tabindex="-1"><a class="header-anchor" href="#引入-jar-包" aria-hidden="true">#</a> 引入 jar 包</h3><p><strong>maven 方式</strong></p><p>如果你的项目使用 maven，添加以下依赖到你的 pom.xml 即可：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>net.sf.dozer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>dozer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.4.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>非 maven 方式</strong></p><p>如果你的项目不使用 maven，那就只能发扬不怕苦不怕累的精神了。</p><p>使用 Dozer 需要引入 Dozer 的 jar 包以及其依赖的第三方 jar 包。</p>`,8),d={href:"http://sourceforge.net/project/showfiles.php?group_id=133517",target:"_blank",rel:"noopener noreferrer"},g={href:"http://dozer.sourceforge.net/dependencies.html",target:"_blank",rel:"noopener noreferrer"},v=n("h3",{id:"eclipse-插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#eclipse-插件","aria-hidden":"true"},"#"),s(" Eclipse 插件")],-1),m=n("p",null,"Dozer 有插件可以在 Eclipse 中使用(不知道是否好用，反正我没用过)",-1),b={href:"http://dozer.sourceforge.net/eclipse-plugin",target:"_blank",rel:"noopener noreferrer"},h=p(`<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>将 Dozer 引入到工程中后，我们就可以来小试一番了。</p><p>实践出真知，先以一个最简单的例子来展示 Dozer 映射的处理过程。</p><h3 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h3><p>我们先准备两个要互相映射的类</p><p>NotSameAttributeA.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NotSameAttributeA</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> date<span class="token punctuation">;</span>

    <span class="token comment">// 省略getter/setter</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>NotSameAttributeB.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NotSameAttributeB</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> value<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> date<span class="token punctuation">;</span>

    <span class="token comment">// 省略getter/setter</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这两个类存在属性名不完全相同的情况：name 和 value。</p><h3 id="dozer-的配置" tabindex="-1"><a class="header-anchor" href="#dozer-的配置" aria-hidden="true">#</a> Dozer 的配置</h3><h4 id="为什么要有映射配置" tabindex="-1"><a class="header-anchor" href="#为什么要有映射配置" aria-hidden="true">#</a> 为什么要有映射配置?</h4><p>如果要映射的两个对象有完全相同的属性名，那么一切都很简单。</p><p>只需要直接使用 Dozer 的 API 即可：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Mapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DozerBeanMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">DestinationObject</span> destObject <span class="token operator">=</span>
    mapper<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>sourceObject<span class="token punctuation">,</span> <span class="token class-name">DestinationObject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但实际映射时，往往存在属性名不同的情况。</p><p>所以，你需要一些配置来告诉 Dozer 应该转换什么，怎么转换。</p><p><strong><em>注：官网着重建议：在现实应用中，最好不要每次映射对象时都创建一个<code>Mapper</code>实例来工作，这样会产生不必要的开销。如果你不使用 IoC 容器（如：spring）来管理你的项目，那么，最好将<code>Mapper</code>定义为单例模式。</em></strong></p><h4 id="映射配置文件" tabindex="-1"><a class="header-anchor" href="#映射配置文件" aria-hidden="true">#</a> 映射配置文件</h4><p>在<code>src/test/resources</code>目录下添加<code>dozer/dozer-mapping.xml</code>文件。<br><code>&lt;mapping&gt;</code>标签中允许你定义<code>&lt;class-a&gt;</code>和<code>&lt;class-b&gt;</code>，对应着相互映射的类。<br><code>&lt;field&gt;</code>标签里定义要映射的特殊属性。需要注意<code>&lt;a&gt;</code>和<code>&lt;class-a&gt;</code>对应，<code>&lt;b&gt;</code>和<code>&lt;class-b&gt;</code>对应，聪明的你，猜也猜出来了吧。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappings</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://dozer.sourceforge.net<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://dozer.sourceforge.net
          http://dozer.sourceforge.net/schema/beanmapping.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">date-format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>yyyy-MM-dd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-a</span><span class="token punctuation">&gt;</span></span>org.zp.notes.spring.common.dozer.vo.NotSameAttributeA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-b</span><span class="token punctuation">&gt;</span></span>org.zp.notes.spring.common.dozer.vo.NotSameAttributeB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-b</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>value<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappings</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="与-spring-整合" tabindex="-1"><a class="header-anchor" href="#与-spring-整合" aria-hidden="true">#</a> 与 Spring 整合</h3><h4 id="配置-dozerbeanmapperfactorybean" tabindex="-1"><a class="header-anchor" href="#配置-dozerbeanmapperfactorybean" aria-hidden="true">#</a> 配置 DozerBeanMapperFactoryBean</h4><p>在<code>src/test/resources</code>目录下添加<code>spring/spring-dozer.xml</code>文件。</p><p>Dozer 与 Spring 的整合很便利，你只需要声明一个<code>DozerBeanMapperFactoryBean</code>，<br> 将所有的 dozer 映射配置文件作为属性注入到<code>mappingFiles</code>，<br><code>DozerBeanMapperFactoryBean</code>会加载这些规则。</p><p>spring-dozer.xml 文件范例</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.0.xsd<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">default-autowire</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>byName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">default-lazy-init</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mapper<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.dozer.spring.DozerBeanMapperFactoryBean<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mappingFiles<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>classpath*:dozer/dozer-mapping.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自动装配" tabindex="-1"><a class="header-anchor" href="#自动装配" aria-hidden="true">#</a> 自动装配</h4><p>至此，万事具备，你只需要自动装配<code>mapper</code>。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringJUnit4ClassRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ContextConfiguration</span><span class="token punctuation">(</span>locations <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;classpath:spring/spring-dozer.xml&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@TransactionConfiguration</span><span class="token punctuation">(</span>defaultRollback <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DozerTest</span> <span class="token keyword">extends</span> <span class="token class-name">TestCase</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">Mapper</span> mapper<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testNotSameAttributeMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">NotSameAttributeA</span> src <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotSameAttributeA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        src<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">007</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        src<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;邦德&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        src<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">NotSameAttributeB</span> desc <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> <span class="token class-name">NotSameAttributeB</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行一下单元测试，绿灯通过。</p><h2 id="dozer-支持的数据类型转换" tabindex="-1"><a class="header-anchor" href="#dozer-支持的数据类型转换" aria-hidden="true">#</a> Dozer 支持的数据类型转换</h2><p>Dozer 可以自动做数据类型转换。当前，Dozer 支持以下数据类型转换（都是双向的）</p><ul><li><p><strong>Primitive to Primitive Wrapper</strong></p><p>原型(int、long 等)和原型包装类(Integer、Long)</p></li><li><p><strong>Primitive to Custom Wrapper</strong></p><p>原型和定制的包装</p></li><li><p><strong>Primitive Wrapper to Primitive Wrapper</strong></p><p>原型包装类和包装类</p></li><li><p><strong>Primitive to Primitive</strong></p><p>原型和原型</p></li><li><p><strong>Complex Type to Complex Type</strong></p><p>复杂类型和复杂类型</p></li><li><p><strong>String to Primitive</strong></p><p>字符串和原型</p></li><li><p><strong>String to Primitive Wrapper</strong></p><p>字符串和原型包装类</p></li><li><p><strong>String to Complex Type if the Complex Type contains a String constructor</strong></p><p>字符串和有字符串构造器的复杂类型（类）</p></li><li><p><strong>String to Map</strong></p><p>字符串和 Map</p></li><li><p><strong>Collection to Collection</strong></p><p>集合和集合</p></li><li><p><strong>Collection to Array</strong></p><p>集合和数组</p></li><li><p><strong>Map to Complex Type</strong></p><p>Map 和复杂类型</p></li><li><p><strong>Map to Custom Map Type</strong></p><p>Map 和定制 Map 类型</p></li><li><p><strong>Enum to Enum</strong></p><p>枚举和枚举</p></li><li><p><strong>Each of these can be mapped to one another: java.util.Date, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.Calendar, java.util.GregorianCalendar</strong></p><p>这些时间相关的常见类可以互换：java.util.Date, java.sql.Date, java.sql.Time, java.sql.Timestamp, java.util.Calendar, java.util.GregorianCalendar</p></li><li><p><strong>String to any of the supported Date/Calendar Objects.</strong></p><p>字符串和支持 Date/Calendar 的对象</p></li><li><p><strong>Objects containing a toString() method that produces a long representing time in (ms) to any supported Date/Calendar object.</strong></p><p>如果一个对象的 toString()方法返回的是一个代表 long 型的时间数值（单位：ms），就可以和任何支持 Date/Calendar 的对象转换。</p></li></ul><h2 id="dozer-的映射配置" tabindex="-1"><a class="header-anchor" href="#dozer-的映射配置" aria-hidden="true">#</a> Dozer 的映射配置</h2><p>在前面的简单例子中，我们体验了一把 Dozer 的映射流程。但是两个类进行映射，有很多复杂的情况，相应的，你也需要一些更复杂的配置。</p><p>Dozer 有三种映射配置方式：</p><ul><li><strong>注解方式</strong></li><li><strong>API 方式</strong></li><li><strong>XML 方式</strong></li></ul><h3 id="用注解来配置映射" tabindex="-1"><a class="header-anchor" href="#用注解来配置映射" aria-hidden="true">#</a> 用注解来配置映射</h3><p><strong>Dozer 5.3.2</strong>版本开始支持注解方式配置映射（只有一个注解：<code>@Mapping</code>）。可以应对一些简单的映射处理，复杂的就玩不转了。</p><p>看一下<code>@Mapping</code>的声明就可以知道，这个注解只能用于元素和方法。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">FIELD</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Mapping</span> <span class="token punctuation">{</span>
  <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们来试试吧：</p><p>TargetBean.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SourceBean</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span><span class="token string">&quot;binaryData&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> data<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Mapping</span><span class="token punctuation">(</span><span class="token string">&quot;pk&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Long</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//其余getter/setter方法略</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TargetBean.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TargetBean</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> pk<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> binaryData<span class="token punctuation">;</span>

    <span class="token comment">//getter/setter方法略</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>定义了两个相互映射的 Java 类，只需要在源类中用<code>@Mapping</code>标记和目标类中对应的属性就可以了。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAnnotationMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token class-name">SourceBean</span> src <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SourceBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 src<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">7L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 src<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;邦德&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 src<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&quot;00000111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token class-name">TargetBean</span> desc <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> <span class="token class-name">TargetBean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试一下，绿灯通过。</p><p>官方文档说，虽然当前版本（文档的版本对应 Dozer 5.5.1）仅支持<code>@Mapping</code>，但是在未来的发布版本会提供其他的注解功能，那就敬请期待吧（再次吐槽一下：一年多没更新了）。</p><h3 id="用-api-来配置映射" tabindex="-1"><a class="header-anchor" href="#用-api-来配置映射" aria-hidden="true">#</a> 用 API 来配置映射</h3><p>个人觉得这种方式比较麻烦，不推荐，也不想多做介绍，就是这么任性。</p><h3 id="用-xml-来配置映射" tabindex="-1"><a class="header-anchor" href="#用-xml-来配置映射" aria-hidden="true">#</a> 用 XML 来配置映射</h3><p>需要<strong>强调</strong>的是：如果两个类的所有属性都能很好的互转，可以你中有我，我中有你，不分彼此，那么就不要画蛇添足的在 xml 中去声明映射规则了。</p><h4 id="属性名不同时的映射-basic-property-mapping" tabindex="-1"><a class="header-anchor" href="#属性名不同时的映射-basic-property-mapping" aria-hidden="true">#</a> 属性名不同时的映射(Basic Property Mapping)</h4><p><strong>Dozer 会自动映射属性名相同的属性，所以不必添加在 xml 文件中。</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>one<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>onePrime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="字符串和日期映射-string-to-date-mapping" tabindex="-1"><a class="header-anchor" href="#字符串和日期映射-string-to-date-mapping" aria-hidden="true">#</a> 字符串和日期映射(String to Date Mapping)</h4><p>字符串在和日期进行映射时，允许用户指定日期的格式。</p><p>格式的设置分为三个作用域级别：</p><p><strong>属性级别</strong></p><p>对当前属性有效（这个属性必须是日期字符串）</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">date-format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MM/dd/yyyy HH:mm:ss:SS<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>dateString<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>dateObject<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>类级别</strong></p><p>对这个类中的所有日期相关的属性有效</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">date-format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MM-dd-yyyy HH:mm:ss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-a</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TestObject<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-b</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TestObjectPrime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>dateString<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>dateObject<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>全局级别</strong></p><p>对整个文件中的所有日期相关的属性有效。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappings</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>date-format</span><span class="token punctuation">&gt;</span></span>MM/dd/yyyy HH:mm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>date-format</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">wildcard</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-a</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TestObject<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-b</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TestObjectPrime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-b</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>dateString<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>dateObject<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappings</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="集合和数组映射-collection-and-array-mapping" tabindex="-1"><a class="header-anchor" href="#集合和数组映射-collection-and-array-mapping" aria-hidden="true">#</a> 集合和数组映射(Collection and Array Mapping)</h4><p>Dozer 可以自动处理以下类型的双向转换。</p><ul><li>List to List</li><li>List to Array</li><li>Array to Array</li><li>Set to Set</li><li>Set to Array</li><li>Set to List</li></ul><p><strong>使用 hint</strong></p><p>如果使用泛型或数组，没有必要使用 hint。</p><p>如果不使用泛型或数组。在处理集合或数组之间的转换时，你需要用<code>hint</code>指定目标列表的数据类型。</p><p>若你不指定<code>hint</code>，Dozer 将认为目标集合和源集合的类型是一致的。</p><p>使用 Hints 的范例：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>hintList<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>hintList<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-hint</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TheFirstSubClassPrime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-hint</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>累计映射和非累计映射（Cumulative vs. Non-Cumulative List Mapping）</strong></p><p>如果你要转换的目标类已经初始化，你可以选择让 Dozer 添加或更新对象到你的集合中。</p><p>而这取决于<code>relationship-type</code>配置，默认是累计。</p><p>它的设置有作用域级别：</p><ul><li>全局级</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;mappings&gt;
  &lt;configuration&gt;
     &lt;relationship-type&gt;non-cumulative&lt;/relationship-type&gt;
  &lt;/configuration&gt;
&lt;/mappings&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>类级别</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappings</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">relationship-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>non-cumulative<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 省略 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappings</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>属性级别</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span> <span class="token attr-name">relationship-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cumulative<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>hintList<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>hintList<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-hint</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TheFirstSubClass<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-hint</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-hint</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TheFirstSubClassPrime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-hint</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>移动孤儿(Removing Orphans)</strong></p><p>这里的孤儿是指目标集合中存在，但是源集合中不存在的元素。</p><p>你可以使用<code>remove-orphans</code>开关来选择是否移除这样的元素。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span> <span class="token attr-name">remove-orphans</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>srcList<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>destList<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="深度映射-deep-mapping" tabindex="-1"><a class="header-anchor" href="#深度映射-deep-mapping" aria-hidden="true">#</a> 深度映射(Deep Mapping)</h4><p>所谓深度映射，是指允许你指定属性的属性（比如一个类的属性本身也是一个类）。举例来说</p><p>Source.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Source</span> <span class="token punctuation">{</span>
 <span class="token keyword">private</span> <span class="token keyword">long</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> info<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Dest.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Dest</span> <span class="token punctuation">{</span>
 <span class="token keyword">private</span> <span class="token keyword">long</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Info</span> info<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Info</span> <span class="token punctuation">{</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>映射规则</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-a</span><span class="token punctuation">&gt;</span></span>org.zp.notes.spring.common.dozer.vo.Source<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-b</span><span class="token punctuation">&gt;</span></span>org.zp.notes.spring.common.dozer.vo.Dest<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>info.content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="排除属性-excluding-fields" tabindex="-1"><a class="header-anchor" href="#排除属性-excluding-fields" aria-hidden="true">#</a> 排除属性(Excluding Fields)</h4><p>就像任何团体都有捣乱分子，类之间转换时也有想要排除的因子。</p><p>如何在做类型转换时，自动排除一些属性，Dozer 提供了几种方法，这里只介绍一种比较通用的方法。</p>`,105),f={href:"http://dozer.sourceforge.net/documentation/exclude.html",target:"_blank",rel:"noopener noreferrer"},x=p(`<p>field-exclude 可以排除不需要映射的属性。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field-exclude</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>fieldToExclude<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>fieldToExclude<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field-exclude</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="单向映射-one-way-mapping" tabindex="-1"><a class="header-anchor" href="#单向映射-one-way-mapping" aria-hidden="true">#</a> 单向映射(One-Way Mapping)</h4><p><strong><em>注：本文的映射方式，无特殊说明，都是双向映射的。</em></strong></p><p>有的场景可能希望转换过程不可逆，即单向转换。</p><p>单向转换可以通过使用<code>one-way</code>来开启</p><p>类级别</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>one-way<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-a</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TestObjectFoo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-b</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TestObjectFooPrime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-b</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>oneFoo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>oneFooPrime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>属性级别</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-a</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TestObjectFoo2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-b</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TestObjectFooPrime2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>one-way<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>oneFoo2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>oneFooPrime2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>one-way<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>oneFoo3.prime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>oneFooPrime3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="全局配置-global-configuration" tabindex="-1"><a class="header-anchor" href="#全局配置-global-configuration" aria-hidden="true">#</a> 全局配置(Global Configuration)</h4><p>全局配置用来设置全局的配置信息。此外，任何定制转换都是在这里定义的。</p><p>全局配置都是可选的。</p><ul><li><code>&lt;date-format&gt;</code>表示日期格式</li><li><code>&lt;stop-on-errors&gt;</code>错误处理开关</li><li><code>&lt;wildcard&gt;</code>通配符</li><li><code>&lt;trim-strings&gt;</code>裁剪字符串开关</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span> <span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>date-format</span><span class="token punctuation">&gt;</span></span>MM/dd/yyyy HH:mm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>date-format</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stop-on-errors</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>stop-on-errors</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>wildcard</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>wildcard</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>trim-strings</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>trim-strings</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>custom-converters</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- these are always bi-directional --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>converter</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.dozer.converters.TestCustomConverter<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-a</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TestCustomConverterObject<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-a</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-b</span><span class="token punctuation">&gt;</span></span>another.type.to.Associate<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-b</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>converter</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>custom-converters</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>全局配置的作用是帮助你少配置一些参数，如果个别类的映射规则需要变更，你可以 mapping 中覆盖它。</p><p>覆盖的范例如下</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">date-format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MM-dd-yyyy HH:mm:ss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 省略 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">wildcard</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 省略 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">stop-on-errors</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 省略 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span> <span class="token attr-name">trim-strings</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 省略 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="定制转换-custom-converters" tabindex="-1"><a class="header-anchor" href="#定制转换-custom-converters" aria-hidden="true">#</a> 定制转换(Custom Converters)</h4><p>如果 Dozer 默认的转换规则不能满足实际需要，你可以选择定制转换。</p><p>定制转换通过配置 XML 来告诉 Dozer 如何去转换两个指定的类。当 Dozer 转换这两个指定类的时候，会调用你的映射规则去替换标准映射规则。</p><p>为了让 Dozer 识别，你必须实现<code>org.dozer.CustomConverter</code>接口。否则，Dozer 会抛异常。</p><p>具体做法：</p><p>(1) 创建一个类实现<code>org.dozer.CustomConverter</code>接口。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestCustomConverter</span> <span class="token keyword">implements</span> <span class="token class-name">CustomConverter</span> <span class="token punctuation">{</span>

  <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">Object</span> destination<span class="token punctuation">,</span> <span class="token class-name">Object</span> source<span class="token punctuation">,</span>
      <span class="token class-name">Class</span> destClass<span class="token punctuation">,</span> <span class="token class-name">Class</span> sourceClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>source <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">CustomDoubleObject</span> dest <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>source <span class="token keyword">instanceof</span> <span class="token class-name">Double</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// check to see if the object already exists</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>destination <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomDoubleObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        dest <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">CustomDoubleObject</span><span class="token punctuation">)</span> destination<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      dest<span class="token punctuation">.</span><span class="token function">setTheDouble</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">)</span> source<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> dest<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>source <span class="token keyword">instanceof</span> <span class="token class-name">CustomDoubleObject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">double</span> sourceObj <span class="token operator">=</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">CustomDoubleObject</span><span class="token punctuation">)</span> source<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTheDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Double</span><span class="token punctuation">(</span>sourceObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">MappingException</span><span class="token punctuation">(</span><span class="token string">&quot;Converter TestCustomConverter &quot;</span>
          <span class="token operator">+</span> <span class="token string">&quot;used incorrectly. Arguments passed in were:&quot;</span>
          <span class="token operator">+</span> destination <span class="token operator">+</span> <span class="token string">&quot; and &quot;</span> <span class="token operator">+</span> source<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(2) 在 xml 中引用定制的映射规则</p><p>引用定制的映射规则也是分级的，你可以酌情使用。</p><ul><li>全局级</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappings</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://dozer.sourceforge.net<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://dozer.sourceforge.net
          http://dozer.sourceforge.net/schema/beanmapping.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 总是双向转换的 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>custom-converters</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>converter</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.dozer.converters.TestCustomConverter<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-a</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.CustomDoubleObject<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-a</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-b</span><span class="token punctuation">&gt;</span></span>java.lang.Double<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-b</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>converter</span><span class="token punctuation">&gt;</span></span>

      <span class="token comment">&lt;!-- You are responsible for mapping everything between
           ClassA and ClassB --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>converter</span>
        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.dozer.converters.TestCustomHashMapConverter<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-a</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TestCustomConverterHashMapObject<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-a</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-b</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.TestCustomConverterHashMapPrimeObject<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-b</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>converter</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>custom-converters</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappings</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>属性级</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-a</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.SimpleObj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-b</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.SimpleObjPrime2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span> <span class="token attr-name">custom-converter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>
    <span class="token punctuation">&quot;</span>org.dozer.converters.TestCustomConverter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>field1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>field1Prime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="映射的继承-inheritance-mapping" tabindex="-1"><a class="header-anchor" href="#映射的继承-inheritance-mapping" aria-hidden="true">#</a> 映射的继承(Inheritance Mapping)</h4><p>Dozer 支持映射规则的继承机制。</p><p>属性如果有着相同的名字则不需要在 xml 中配置，除非使用了<code>hint</code></p><p>我们来看一个例子</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-a</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.SuperClass<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-b</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.SuperClassPrime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-b</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>superAttribute<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>superAttr<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-a</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.SubClass<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-b</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.SubClassPrime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-b</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>attribute<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>attributePrime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapping</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-a</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.SubClass2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>class-b</span><span class="token punctuation">&gt;</span></span>org.dozer.vo.SubClassPrime2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>class-b</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>field</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>attribute2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">&gt;</span></span>attributePrime2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>field</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapping</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的例子中 SubClass、SubClass2 是 SuperClass 的子类；</p><p>SubClassPrime 和 SubClassPrime2 是 SuperClassPrime 的子类。</p><p>superAttribute 和 superAttr 的映射规则会被子类所继承，所以不必再重复的在子类中去声明。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,40),y={href:"http://dozer.sourceforge.net/documentation/gettingstarted.html",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/DozerMapper/dozer",target:"_blank",rel:"noopener noreferrer"};function w(z,j){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[s("它是开源的，遵从"),n("a",r,[s("Apache 2.0 协议"),t(a)])]),k,n("ul",null,[n("li",null,[n("a",d,[s("Dozer"),t(a)])]),n("li",null,[n("a",g,[s("Dozer 依赖的第三方 jar 包"),t(a)])])]),v,m,n("p",null,[s("插件地址: "),n("a",b,[s("http://dozer.sourceforge.net/eclipse-plugin"),t(a)])]),h,n("p",null,[s("更多详情参考"),n("a",f,[s("官网"),t(a)]),s("。")]),x,n("p",null,[n("a",y,[s("Dozer 官方文档"),t(a)]),s(" | "),n("a",q,[s("Dozer 源码地址"),t(a)])])])}const S=e(i,[["render",w],["__file","index.html.vue"]]);export{S as default};
