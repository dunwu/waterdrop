const l=JSON.parse('{"key":"v-7c6f3874","path":"/pages/ede171bb/","title":"《极客时间教程 - 玩转 Spring 全家桶》笔记","lang":"zh-CN","frontmatter":{"title":"《极客时间教程 - 玩转 Spring 全家桶》笔记","date":"2023-07-29T15:25:09.000Z","order":1,"permalink":"/pages/ede171bb/","category":["笔记","Java"],"tag":["Java","框架","Spring","SpringBoot","SpringCloud"],"description":"《极客时间教程 - 玩转 Spring 全家桶》笔记 第一章：初识 Spring (4 讲) 01 | Spring 课程介绍 02 | 一起认识 Spring 家族的主要成员 Spring Framework - 用于构建企业级应用的轻量级一站式解决方案 Spring Boot - 快速构建基于 Spring 的应用程序 Spring Cloud - 简化分布式系统的开发 03 | 跟着 Spring 了解技术趋势 略 04 | 编写你的第一个 Spring 程序","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/ede171bb/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"《极客时间教程 - 玩转 Spring 全家桶》笔记"}],["meta",{"property":"og:description","content":"《极客时间教程 - 玩转 Spring 全家桶》笔记 第一章：初识 Spring (4 讲) 01 | Spring 课程介绍 02 | 一起认识 Spring 家族的主要成员 Spring Framework - 用于构建企业级应用的轻量级一站式解决方案 Spring Boot - 快速构建基于 Spring 的应用程序 Spring Cloud - 简化分布式系统的开发 03 | 跟着 Spring 了解技术趋势 略 04 | 编写你的第一个 Spring 程序"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-13T09:10:08.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"框架"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"SpringBoot"}],["meta",{"property":"article:tag","content":"SpringCloud"}],["meta",{"property":"article:published_time","content":"2023-07-29T15:25:09.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-13T09:10:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"《极客时间教程 - 玩转 Spring 全家桶》笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-29T15:25:09.000Z\\",\\"dateModified\\":\\"2025-09-13T09:10:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"第一章：初识 Spring (4 讲)","slug":"第一章-初识-spring-4-讲","link":"#第一章-初识-spring-4-讲","children":[{"level":3,"title":"01 | Spring 课程介绍","slug":"_01-spring-课程介绍","link":"#_01-spring-课程介绍","children":[]},{"level":3,"title":"02 | 一起认识 Spring 家族的主要成员","slug":"_02-一起认识-spring-家族的主要成员","link":"#_02-一起认识-spring-家族的主要成员","children":[]},{"level":3,"title":"03 | 跟着 Spring 了解技术趋势","slug":"_03-跟着-spring-了解技术趋势","link":"#_03-跟着-spring-了解技术趋势","children":[]},{"level":3,"title":"04 | 编写你的第一个 Spring 程序","slug":"_04-编写你的第一个-spring-程序","link":"#_04-编写你的第一个-spring-程序","children":[]}]},{"level":2,"title":"第二章：JDBC 必知必会 (10 讲)","slug":"第二章-jdbc-必知必会-10-讲","link":"#第二章-jdbc-必知必会-10-讲","children":[{"level":3,"title":"05 | 如何配置单数据源","slug":"_05-如何配置单数据源","link":"#_05-如何配置单数据源","children":[]},{"level":3,"title":"06 | 如何配置多数据源","slug":"_06-如何配置多数据源","link":"#_06-如何配置多数据源","children":[]},{"level":3,"title":"07 | 那些好用的连接池们：HikariCP","slug":"_07-那些好用的连接池们-hikaricp","link":"#_07-那些好用的连接池们-hikaricp","children":[]},{"level":3,"title":"08 | 那些好用的连接池们：Alibaba Druid","slug":"_08-那些好用的连接池们-alibaba-druid","link":"#_08-那些好用的连接池们-alibaba-druid","children":[]},{"level":3,"title":"09 | 如何通过 Spring JDBC 访问数据库","slug":"_09-如何通过-spring-jdbc-访问数据库","link":"#_09-如何通过-spring-jdbc-访问数据库","children":[]},{"level":3,"title":"10 | 什么是 Spring 的事务抽象（上）","slug":"_10-什么是-spring-的事务抽象-上","link":"#_10-什么是-spring-的事务抽象-上","children":[]},{"level":3,"title":"11 | 什么是 Spring 的事务抽象（下）","slug":"_11-什么是-spring-的事务抽象-下","link":"#_11-什么是-spring-的事务抽象-下","children":[]},{"level":3,"title":"12 | 了解 Spring 的 JDBC 异常抽象","slug":"_12-了解-spring-的-jdbc-异常抽象","link":"#_12-了解-spring-的-jdbc-异常抽象","children":[]},{"level":3,"title":"13 | 课程答疑（上）","slug":"_13-课程答疑-上","link":"#_13-课程答疑-上","children":[]},{"level":3,"title":"14 | 课程答疑（下）","slug":"_14-课程答疑-下","link":"#_14-课程答疑-下","children":[]}]},{"level":2,"title":"第三章：O/R Mapping 实践 (9 讲)","slug":"第三章-o-r-mapping-实践-9-讲","link":"#第三章-o-r-mapping-实践-9-讲","children":[{"level":3,"title":"15 | 认识 Spring Data JPA","slug":"_15-认识-spring-data-jpa","link":"#_15-认识-spring-data-jpa","children":[]},{"level":3,"title":"16 | 定义 JPA 的实体对象","slug":"_16-定义-jpa-的实体对象","link":"#_16-定义-jpa-的实体对象","children":[]},{"level":3,"title":"17 | 开始我们的线上咖啡馆实战项目：SpringBucks","slug":"_17-开始我们的线上咖啡馆实战项目-springbucks","link":"#_17-开始我们的线上咖啡馆实战项目-springbucks","children":[]},{"level":3,"title":"18 | 通过 Spring Data JPA 操作数据库","slug":"_18-通过-spring-data-jpa-操作数据库","link":"#_18-通过-spring-data-jpa-操作数据库","children":[]},{"level":3,"title":"19 | Spring Data JPA 的 Repository 是怎么从接口变成 Bean 的","slug":"_19-spring-data-jpa-的-repository-是怎么从接口变成-bean-的","link":"#_19-spring-data-jpa-的-repository-是怎么从接口变成-bean-的","children":[]},{"level":3,"title":"20 | 通过 MyBatis 操作数据库","slug":"_20-通过-mybatis-操作数据库","link":"#_20-通过-mybatis-操作数据库","children":[]},{"level":3,"title":"21 | 让 MyBatis 更好用的那些工具：MyBatis Generator","slug":"_21-让-mybatis-更好用的那些工具-mybatis-generator","link":"#_21-让-mybatis-更好用的那些工具-mybatis-generator","children":[]},{"level":3,"title":"22 | 让 MyBatis 更好用的那些工具：MyBatis PageHelper","slug":"_22-让-mybatis-更好用的那些工具-mybatis-pagehelper","link":"#_22-让-mybatis-更好用的那些工具-mybatis-pagehelper","children":[]},{"level":3,"title":"23 | SpringBucks 实战项目进度小结","slug":"_23-springbucks-实战项目进度小结","link":"#_23-springbucks-实战项目进度小结","children":[]}]},{"level":2,"title":"第四章：NoSQL 实践 (7 讲)","slug":"第四章-nosql-实践-7-讲","link":"#第四章-nosql-实践-7-讲","children":[{"level":3,"title":"24 | 通过 Docker 辅助开发","slug":"_24-通过-docker-辅助开发","link":"#_24-通过-docker-辅助开发","children":[]},{"level":3,"title":"25 | 在 Spring 中访问 MongoDB","slug":"_25-在-spring-中访问-mongodb","link":"#_25-在-spring-中访问-mongodb","children":[]},{"level":3,"title":"26 | 在 Spring 中访问 Redis","slug":"_26-在-spring-中访问-redis","link":"#_26-在-spring-中访问-redis","children":[]},{"level":3,"title":"27 | Redis 的哨兵与集群模式","slug":"_27-redis-的哨兵与集群模式","link":"#_27-redis-的哨兵与集群模式","children":[]},{"level":3,"title":"28 | 了解 Spring 的缓存抽象","slug":"_28-了解-spring-的缓存抽象","link":"#_28-了解-spring-的缓存抽象","children":[]},{"level":3,"title":"29 | Redis 在 Spring 中的其他用法","slug":"_29-redis-在-spring-中的其他用法","link":"#_29-redis-在-spring-中的其他用法","children":[]},{"level":3,"title":"30 | SpringBucks 实战项目进度小结","slug":"_30-springbucks-实战项目进度小结","link":"#_30-springbucks-实战项目进度小结","children":[]}]},{"level":2,"title":"第五章：数据访问进阶 (8 讲)","slug":"第五章-数据访问进阶-8-讲","link":"#第五章-数据访问进阶-8-讲","children":[{"level":3,"title":"31 | Project Reactor 介绍（上）","slug":"_31-project-reactor-介绍-上","link":"#_31-project-reactor-介绍-上","children":[]},{"level":3,"title":"32 | Project Reactor 介绍（下）","slug":"_32-project-reactor-介绍-下","link":"#_32-project-reactor-介绍-下","children":[]},{"level":3,"title":"33 | 通过 Reactive 的方式访问 Redis","slug":"_33-通过-reactive-的方式访问-redis","link":"#_33-通过-reactive-的方式访问-redis","children":[]},{"level":3,"title":"34 | 通过 Reactive 的方式访问 MongoDB","slug":"_34-通过-reactive-的方式访问-mongodb","link":"#_34-通过-reactive-的方式访问-mongodb","children":[]},{"level":3,"title":"35 | 通过 Reactive 的方式访问 RDBMS","slug":"_35-通过-reactive-的方式访问-rdbms","link":"#_35-通过-reactive-的方式访问-rdbms","children":[]},{"level":3,"title":"36 | 通过 AOP 打印数据访问层的摘要（上）","slug":"_36-通过-aop-打印数据访问层的摘要-上","link":"#_36-通过-aop-打印数据访问层的摘要-上","children":[]},{"level":3,"title":"37 | 通过 AOP 打印数据访问层的摘要（下）","slug":"_37-通过-aop-打印数据访问层的摘要-下","link":"#_37-通过-aop-打印数据访问层的摘要-下","children":[]},{"level":3,"title":"38 | SpringBucks 实战项目进度小结","slug":"_38-springbucks-实战项目进度小结","link":"#_38-springbucks-实战项目进度小结","children":[]}]},{"level":2,"title":"第六章：Spring MVC 实践 (14 讲)","slug":"第六章-spring-mvc-实践-14-讲","link":"#第六章-spring-mvc-实践-14-讲","children":[{"level":3,"title":"39 | 编写第一个 Spring MVC Controller","slug":"_39-编写第一个-spring-mvc-controller","link":"#_39-编写第一个-spring-mvc-controller","children":[]},{"level":3,"title":"认识 Spring MVC","slug":"认识-spring-mvc","link":"#认识-spring-mvc","children":[]},{"level":3,"title":"Spring MVC 中的常⽤用注解","slug":"spring-mvc-中的常用用注解","link":"#spring-mvc-中的常用用注解","children":[]},{"level":3,"title":"40 | 理解 Spring 的应用上下文","slug":"_40-理解-spring-的应用上下文","link":"#_40-理解-spring-的应用上下文","children":[]},{"level":3,"title":"Spring 的应用程序上下文","slug":"spring-的应用程序上下文","link":"#spring-的应用程序上下文","children":[]},{"level":3,"title":"41 | 理解请求的处理机制","slug":"_41-理解请求的处理机制","link":"#_41-理解请求的处理机制","children":[]},{"level":3,"title":"42 | 如何定义处理方法（上）","slug":"_42-如何定义处理方法-上","link":"#_42-如何定义处理方法-上","children":[]},{"level":3,"title":"定义映射关系","slug":"定义映射关系","link":"#定义映射关系","children":[]},{"level":3,"title":"定义处理方法","slug":"定义处理方法","link":"#定义处理方法","children":[]},{"level":3,"title":"定义类型转换","slug":"定义类型转换","link":"#定义类型转换","children":[]},{"level":3,"title":"定义校验","slug":"定义校验","link":"#定义校验","children":[]},{"level":3,"title":"Multipart 上传","slug":"multipart-上传","link":"#multipart-上传","children":[]},{"level":3,"title":"43 | 如何定义处理方法（下）","slug":"_43-如何定义处理方法-下","link":"#_43-如何定义处理方法-下","children":[]},{"level":3,"title":"44 | Spring MVC 中的视图解析机制（上）","slug":"_44-spring-mvc-中的视图解析机制-上","link":"#_44-spring-mvc-中的视图解析机制-上","children":[]},{"level":3,"title":"45 | Spring MVC 中的视图解析机制（下）","slug":"_45-spring-mvc-中的视图解析机制-下","link":"#_45-spring-mvc-中的视图解析机制-下","children":[]},{"level":3,"title":"46 | Spring MVC 中的常用视图（上）","slug":"_46-spring-mvc-中的常用视图-上","link":"#_46-spring-mvc-中的常用视图-上","children":[]},{"level":3,"title":"47 | Spring MVC 中的常用视图（下）","slug":"_47-spring-mvc-中的常用视图-下","link":"#_47-spring-mvc-中的常用视图-下","children":[]},{"level":3,"title":"48 | 静态资源与缓存","slug":"_48-静态资源与缓存","link":"#_48-静态资源与缓存","children":[]},{"level":3,"title":"49 | Spring MVC 中的异常处理机制","slug":"_49-spring-mvc-中的异常处理机制","link":"#_49-spring-mvc-中的异常处理机制","children":[]},{"level":3,"title":"50 | 了解 Spring MVC 的切入点","slug":"_50-了解-spring-mvc-的切入点","link":"#_50-了解-spring-mvc-的切入点","children":[]},{"level":3,"title":"51 | SpringBucks 实战项目进度小结","slug":"_51-springbucks-实战项目进度小结","link":"#_51-springbucks-实战项目进度小结","children":[]},{"level":3,"title":"52 | 课程答疑","slug":"_52-课程答疑","link":"#_52-课程答疑","children":[]}]},{"level":2,"title":"第七章：访问 Web 资源 (5 讲)","slug":"第七章-访问-web-资源-5-讲","link":"#第七章-访问-web-资源-5-讲","children":[{"level":3,"title":"53 | 通过 RestTemplate 访问 Web 资源","slug":"_53-通过-resttemplate-访问-web-资源","link":"#_53-通过-resttemplate-访问-web-资源","children":[]},{"level":3,"title":"54 | RestTemplate 的高阶用法","slug":"_54-resttemplate-的高阶用法","link":"#_54-resttemplate-的高阶用法","children":[]},{"level":3,"title":"55 | 简单定制 RestTemplate","slug":"_55-简单定制-resttemplate","link":"#_55-简单定制-resttemplate","children":[]},{"level":3,"title":"56 | 通过 WebClient 访问 Web 资源","slug":"_56-通过-webclient-访问-web-资源","link":"#_56-通过-webclient-访问-web-资源","children":[]},{"level":3,"title":"57 | SpringBucks 实战项目进度小结","slug":"_57-springbucks-实战项目进度小结","link":"#_57-springbucks-实战项目进度小结","children":[]}]},{"level":2,"title":"第八章： Web 开发进阶 (9 讲)","slug":"第八章-web-开发进阶-9-讲","link":"#第八章-web-开发进阶-9-讲","children":[{"level":3,"title":"58 | 设计好的 RESTful Web Service（上）","slug":"_58-设计好的-restful-web-service-上","link":"#_58-设计好的-restful-web-service-上","children":[]},{"level":3,"title":"59 | 设计好的 RESTful Web Service（下）","slug":"_59-设计好的-restful-web-service-下","link":"#_59-设计好的-restful-web-service-下","children":[]},{"level":3,"title":"资源的粒度","slug":"资源的粒度","link":"#资源的粒度","children":[]},{"level":3,"title":"60 | 什么是 HATEOAS","slug":"_60-什么是-hateoas","link":"#_60-什么是-hateoas","children":[]},{"level":3,"title":"61 | 使用 Spring Data REST 实现简单的超媒体服务（上）","slug":"_61-使用-spring-data-rest-实现简单的超媒体服务-上","link":"#_61-使用-spring-data-rest-实现简单的超媒体服务-上","children":[]},{"level":3,"title":"62 | 使用 Spring Data REST 实现简单的超媒体服务(下)","slug":"_62-使用-spring-data-rest-实现简单的超媒体服务-下","link":"#_62-使用-spring-data-rest-实现简单的超媒体服务-下","children":[]},{"level":3,"title":"63 | 分布式环境中如何解决 Session 的问题","slug":"_63-分布式环境中如何解决-session-的问题","link":"#_63-分布式环境中如何解决-session-的问题","children":[]},{"level":3,"title":"64 | 使用 WebFlux 代替 Spring MVC（上）","slug":"_64-使用-webflux-代替-spring-mvc-上","link":"#_64-使用-webflux-代替-spring-mvc-上","children":[]},{"level":3,"title":"65 | 使用 WebFlux 代替 Spring MVC（下）","slug":"_65-使用-webflux-代替-spring-mvc-下","link":"#_65-使用-webflux-代替-spring-mvc-下","children":[]},{"level":3,"title":"66 | SpringBucks 实战项目进度小结","slug":"_66-springbucks-实战项目进度小结","link":"#_66-springbucks-实战项目进度小结","children":[]}]},{"level":2,"title":"第九章：重新认识 Spring Boot (8 讲)","slug":"第九章-重新认识-spring-boot-8-讲","link":"#第九章-重新认识-spring-boot-8-讲","children":[{"level":3,"title":"67 | 认识 Spring Boot 的组成部分","slug":"_67-认识-spring-boot-的组成部分","link":"#_67-认识-spring-boot-的组成部分","children":[]},{"level":3,"title":"Spring Boot 的特性","slug":"spring-boot-的特性","link":"#spring-boot-的特性","children":[]},{"level":3,"title":"Spring Boot 的四大核心","slug":"spring-boot-的四大核心","link":"#spring-boot-的四大核心","children":[]},{"level":3,"title":"68 | 了解自动配置的实现原理","slug":"_68-了解自动配置的实现原理","link":"#_68-了解自动配置的实现原理","children":[]},{"level":3,"title":"了解自动配置","slug":"了解自动配置","link":"#了解自动配置","children":[]},{"level":3,"title":"自动配置的实现原理","slug":"自动配置的实现原理","link":"#自动配置的实现原理","children":[]},{"level":3,"title":"了解自动配置的情况","slug":"了解自动配置的情况","link":"#了解自动配置的情况","children":[]},{"level":3,"title":"69 | 动手实现自己的自动配置","slug":"_69-动手实现自己的自动配置","link":"#_69-动手实现自己的自动配置","children":[]},{"level":3,"title":"主要工作内容","slug":"主要工作内容","link":"#主要工作内容","children":[]},{"level":3,"title":"条件注解","slug":"条件注解","link":"#条件注解","children":[]},{"level":3,"title":"自动配置的执行顺序","slug":"自动配置的执行顺序","link":"#自动配置的执行顺序","children":[]},{"level":3,"title":"70 | 如何在低版本 Spring 中快速实现类似自动配置的功能","slug":"_70-如何在低版本-spring-中快速实现类似自动配置的功能","link":"#_70-如何在低版本-spring-中快速实现类似自动配置的功能","children":[]},{"level":3,"title":"需求与问题","slug":"需求与问题","link":"#需求与问题","children":[]},{"level":3,"title":"核心解决思路","slug":"核心解决思路","link":"#核心解决思路","children":[]},{"level":3,"title":"Spring 的扩展点","slug":"spring-的扩展点","link":"#spring-的扩展点","children":[]},{"level":3,"title":"关于 Bean 的一些定制","slug":"关于-bean-的一些定制","link":"#关于-bean-的一些定制","children":[]},{"level":3,"title":"一些常用操作","slug":"一些常用操作","link":"#一些常用操作","children":[]},{"level":3,"title":"71 | 了解起步依赖及其实现原理","slug":"_71-了解起步依赖及其实现原理","link":"#_71-了解起步依赖及其实现原理","children":[]},{"level":3,"title":"Maven 依赖管理技巧","slug":"maven-依赖管理技巧","link":"#maven-依赖管理技巧","children":[]},{"level":3,"title":"Spring Boot 的 starter 依赖","slug":"spring-boot-的-starter-依赖","link":"#spring-boot-的-starter-依赖","children":[]},{"level":3,"title":"72 | 定制自己的起步依赖","slug":"_72-定制自己的起步依赖","link":"#_72-定制自己的起步依赖","children":[]},{"level":3,"title":"73 | 深挖 Spring Boot 的配置加载机制","slug":"_73-深挖-spring-boot-的配置加载机制","link":"#_73-深挖-spring-boot-的配置加载机制","children":[]},{"level":3,"title":"外化配置加载顺序","slug":"外化配置加载顺序","link":"#外化配置加载顺序","children":[]},{"level":3,"title":"application.properties","slug":"application-properties","link":"#application-properties","children":[]},{"level":3,"title":"Relaxed Binding","slug":"relaxed-binding","link":"#relaxed-binding","children":[]},{"level":3,"title":"74 | 理解配置背后的 PropertySource 抽象","slug":"_74-理解配置背后的-propertysource-抽象","link":"#_74-理解配置背后的-propertysource-抽象","children":[]},{"level":3,"title":"添加 PropertySource","slug":"添加-propertysource","link":"#添加-propertysource","children":[]},{"level":3,"title":"Spring Boot 中的 @ConfigurationProperties","slug":"spring-boot-中的-configurationproperties","link":"#spring-boot-中的-configurationproperties","children":[]},{"level":3,"title":"定制 PropertySource","slug":"定制-propertysource","link":"#定制-propertysource","children":[]}]},{"level":2,"title":"第十章：运行中的 Spring Boot (11 讲)","slug":"第十章-运行中的-spring-boot-11-讲","link":"#第十章-运行中的-spring-boot-11-讲","children":[{"level":3,"title":"75 | 认识 Spring Boot 的各类 Actuator Endpoint","slug":"_75-认识-spring-boot-的各类-actuator-endpoint","link":"#_75-认识-spring-boot-的各类-actuator-endpoint","children":[]},{"level":3,"title":"Actuator","slug":"actuator","link":"#actuator","children":[]},{"level":3,"title":"一些常用 Endpoint","slug":"一些常用-endpoint","link":"#一些常用-endpoint","children":[]},{"level":3,"title":"如何访问 Actuator Endpoint","slug":"如何访问-actuator-endpoint","link":"#如何访问-actuator-endpoint","children":[]},{"level":3,"title":"76 | 动手定制自己的 Health Indicator","slug":"_76-动手定制自己的-health-indicator","link":"#_76-动手定制自己的-health-indicator","children":[]},{"level":3,"title":"Spring Boot 自带的 Health Indicator","slug":"spring-boot-自带的-health-indicator","link":"#spring-boot-自带的-health-indicator","children":[]},{"level":3,"title":"自定义 Health Indicator","slug":"自定义-health-indicator","link":"#自定义-health-indicator","children":[]},{"level":3,"title":"77 | 通过 Micrometer 获取运行数据","slug":"_77-通过-micrometer-获取运行数据","link":"#_77-通过-micrometer-获取运行数据","children":[]},{"level":3,"title":"认识 Micrometer","slug":"认识-micrometer","link":"#认识-micrometer","children":[]},{"level":3,"title":"一些核心度量指标","slug":"一些核心度量指标","link":"#一些核心度量指标","children":[]},{"level":3,"title":"Micrometer in Spring Boot 2.x","slug":"micrometer-in-spring-boot-2-x","link":"#micrometer-in-spring-boot-2-x","children":[]},{"level":3,"title":"78 | 通过 Spring Boot Admin 了解程序的运行状态","slug":"_78-通过-spring-boot-admin-了解程序的运行状态","link":"#_78-通过-spring-boot-admin-了解程序的运行状态","children":[]},{"level":3,"title":"Spring Boot Admin","slug":"spring-boot-admin","link":"#spring-boot-admin","children":[]},{"level":3,"title":"快速上手","slug":"快速上手","link":"#快速上手","children":[]},{"level":3,"title":"安全控制","slug":"安全控制","link":"#安全控制","children":[]},{"level":3,"title":"79 | 如何定制 Web 容器的运行参数","slug":"_79-如何定制-web-容器的运行参数","link":"#_79-如何定制-web-容器的运行参数","children":[]},{"level":3,"title":"内嵌 Web 容器","slug":"内嵌-web-容器","link":"#内嵌-web-容器","children":[]},{"level":3,"title":"修改容器器配置","slug":"修改容器器配置","link":"#修改容器器配置","children":[]},{"level":3,"title":"80 | 如何配置容器支持 HTTP/2（上）","slug":"_80-如何配置容器支持-http-2-上","link":"#_80-如何配置容器支持-http-2-上","children":[]},{"level":3,"title":"配置 HTTPS 支持","slug":"配置-https-支持","link":"#配置-https-支持","children":[]},{"level":3,"title":"生成证书文件","slug":"生成证书文件","link":"#生成证书文件","children":[]},{"level":3,"title":"客户端 HTTPS 支持","slug":"客户端-https-支持","link":"#客户端-https-支持","children":[]},{"level":3,"title":"81 | 如何配置容器支持 HTTP/2（下）","slug":"_81-如何配置容器支持-http-2-下","link":"#_81-如何配置容器支持-http-2-下","children":[]},{"level":3,"title":"配置 HTTP/2 支持","slug":"配置-http-2-支持","link":"#配置-http-2-支持","children":[]},{"level":3,"title":"客户端 HTTP/2 支持","slug":"客户端-http-2-支持","link":"#客户端-http-2-支持","children":[]},{"level":3,"title":"82 | 如何编写命令行运行的程序","slug":"_82-如何编写命令行运行的程序","link":"#_82-如何编写命令行运行的程序","children":[]},{"level":3,"title":"关闭 Web 容器","slug":"关闭-web-容器","link":"#关闭-web-容器","children":[]},{"level":3,"title":"常用工具类","slug":"常用工具类","link":"#常用工具类","children":[]},{"level":3,"title":"83 | 了解可执行 Jar 背后的秘密","slug":"_83-了解可执行-jar-背后的秘密","link":"#_83-了解可执行-jar-背后的秘密","children":[]},{"level":3,"title":"认识可执行 Jar","slug":"认识可执行-jar","link":"#认识可执行-jar","children":[]},{"level":3,"title":"如何找到程序的入口","slug":"如何找到程序的入口","link":"#如何找到程序的入口","children":[]},{"level":3,"title":"84 | 如何将 Spring Boot 应用打包成 Docker 镜像文件","slug":"_84-如何将-spring-boot-应用打包成-docker-镜像文件","link":"#_84-如何将-spring-boot-应用打包成-docker-镜像文件","children":[]},{"level":3,"title":"什么是 Docker 镜像","slug":"什么是-docker-镜像","link":"#什么是-docker-镜像","children":[]},{"level":3,"title":"Dockerfile","slug":"dockerfile","link":"#dockerfile","children":[]},{"level":3,"title":"通过 Maven 构建 Docker 镜像","slug":"通过-maven-构建-docker-镜像","link":"#通过-maven-构建-docker-镜像","children":[]},{"level":3,"title":"85 | SpringBucks 实战项目进度小结","slug":"_85-springbucks-实战项目进度小结","link":"#_85-springbucks-实战项目进度小结","children":[]}]},{"level":2,"title":"第十一章：Spring Cloud 及 Cloud Native 概述 (5 讲)","slug":"第十一章-spring-cloud-及-cloud-native-概述-5-讲","link":"#第十一章-spring-cloud-及-cloud-native-概述-5-讲","children":[{"level":3,"title":"86 | 简单理解微服务","slug":"_86-简单理解微服务","link":"#_86-简单理解微服务","children":[]},{"level":3,"title":"87 | 如何理解云原生(Cloud Native)","slug":"_87-如何理解云原生-cloud-native","link":"#_87-如何理解云原生-cloud-native","children":[]},{"level":3,"title":"88 | 12-Factor App（上）","slug":"_88-12-factor-app-上","link":"#_88-12-factor-app-上","children":[]},{"level":3,"title":"89 | 12-Factor App（下）","slug":"_89-12-factor-app-下","link":"#_89-12-factor-app-下","children":[]},{"level":3,"title":"90 | 认识 Spring Cloud 的组成部分","slug":"_90-认识-spring-cloud-的组成部分","link":"#_90-认识-spring-cloud-的组成部分","children":[]}]},{"level":2,"title":"第十二章：服务注册与发现 (9 讲)","slug":"第十二章-服务注册与发现-9-讲","link":"#第十二章-服务注册与发现-9-讲","children":[{"level":3,"title":"91 | 使用 Eureka 作为服务注册中心","slug":"_91-使用-eureka-作为服务注册中心","link":"#_91-使用-eureka-作为服务注册中心","children":[]},{"level":3,"title":"92 | 使用 Spring Cloud Loadbalancer 访问服务","slug":"_92-使用-spring-cloud-loadbalancer-访问服务","link":"#_92-使用-spring-cloud-loadbalancer-访问服务","children":[]},{"level":3,"title":"93 | 使用 Feign 访问服务","slug":"_93-使用-feign-访问服务","link":"#_93-使用-feign-访问服务","children":[]},{"level":3,"title":"94 | 深入理解服务发现背后的 DiscoveryClient","slug":"_94-深入理解服务发现背后的-discoveryclient","link":"#_94-深入理解服务发现背后的-discoveryclient","children":[]},{"level":3,"title":"95 | 使用 Zookeeper 作为服务注册中心","slug":"_95-使用-zookeeper-作为服务注册中心","link":"#_95-使用-zookeeper-作为服务注册中心","children":[]},{"level":3,"title":"96 | 使用 Consul 作为服务注册中心","slug":"_96-使用-consul-作为服务注册中心","link":"#_96-使用-consul-作为服务注册中心","children":[]},{"level":3,"title":"97 | 使用 Nacos 作为服务注册中心","slug":"_97-使用-nacos-作为服务注册中心","link":"#_97-使用-nacos-作为服务注册中心","children":[]},{"level":3,"title":"98 | 如何定制自己的 DiscoveryClient","slug":"_98-如何定制自己的-discoveryclient","link":"#_98-如何定制自己的-discoveryclient","children":[]},{"level":3,"title":"99 | SpringBucks 实战项目进度小结","slug":"_99-springbucks-实战项目进度小结","link":"#_99-springbucks-实战项目进度小结","children":[]}]},{"level":2,"title":"第十三章：服务熔断 (7 讲)","slug":"第十三章-服务熔断-7-讲","link":"#第十三章-服务熔断-7-讲","children":[{"level":3,"title":"100 | 使用 Hystrix 实现服务熔断（上）","slug":"_100-使用-hystrix-实现服务熔断-上","link":"#_100-使用-hystrix-实现服务熔断-上","children":[]},{"level":3,"title":"101 | 使用 Hystrix 实现服务熔断（下）","slug":"_101-使用-hystrix-实现服务熔断-下","link":"#_101-使用-hystrix-实现服务熔断-下","children":[]},{"level":3,"title":"102 | 如何观察服务熔断","slug":"_102-如何观察服务熔断","link":"#_102-如何观察服务熔断","children":[]},{"level":3,"title":"103 | 使用 Resilience4j 实现服务熔断","slug":"_103-使用-resilience4j-实现服务熔断","link":"#_103-使用-resilience4j-实现服务熔断","children":[]},{"level":3,"title":"104 | 使用 Resilience4j 实现服务限流（上）","slug":"_104-使用-resilience4j-实现服务限流-上","link":"#_104-使用-resilience4j-实现服务限流-上","children":[]},{"level":3,"title":"105 | 使用 Resilience4j 实现服务限流（下）","slug":"_105-使用-resilience4j-实现服务限流-下","link":"#_105-使用-resilience4j-实现服务限流-下","children":[]},{"level":3,"title":"106 | SpringBucks 实战项目进度小结","slug":"_106-springbucks-实战项目进度小结","link":"#_106-springbucks-实战项目进度小结","children":[]}]},{"level":2,"title":"第十四章：服务配置 (7 讲)","slug":"第十四章-服务配置-7-讲","link":"#第十四章-服务配置-7-讲","children":[{"level":3,"title":"107 | 基于 Git 的配置中心（上）","slug":"_107-基于-git-的配置中心-上","link":"#_107-基于-git-的配置中心-上","children":[]},{"level":3,"title":"108 | 基于 Git 的配置中心（下）","slug":"_108-基于-git-的配置中心-下","link":"#_108-基于-git-的配置中心-下","children":[]},{"level":3,"title":"109 | 基于 Zookeeper 的配置中心","slug":"_109-基于-zookeeper-的配置中心","link":"#_109-基于-zookeeper-的配置中心","children":[]},{"level":3,"title":"110 | 深入理解 Spring Cloud 的配置抽象","slug":"_110-深入理解-spring-cloud-的配置抽象","link":"#_110-深入理解-spring-cloud-的配置抽象","children":[]},{"level":3,"title":"111 | 基于 Consul 的配置中心","slug":"_111-基于-consul-的配置中心","link":"#_111-基于-consul-的配置中心","children":[]},{"level":3,"title":"112 | 基于 Nacos 的配置中心","slug":"_112-基于-nacos-的配置中心","link":"#_112-基于-nacos-的配置中心","children":[]},{"level":3,"title":"113 | SpringBucks 实战项目进度小结","slug":"_113-springbucks-实战项目进度小结","link":"#_113-springbucks-实战项目进度小结","children":[]}]},{"level":2,"title":"第十五章：Spring Cloud Stream (4 讲)","slug":"第十五章-spring-cloud-stream-4-讲","link":"#第十五章-spring-cloud-stream-4-讲","children":[{"level":3,"title":"114 | 认识 Spring Cloud Stream","slug":"_114-认识-spring-cloud-stream","link":"#_114-认识-spring-cloud-stream","children":[]},{"level":3,"title":"115 | 通过 Spring Cloud Stream 访问 RabbitMQ","slug":"_115-通过-spring-cloud-stream-访问-rabbitmq","link":"#_115-通过-spring-cloud-stream-访问-rabbitmq","children":[]},{"level":3,"title":"116 | 通过 Spring Cloud Stream 访问 Kafka","slug":"_116-通过-spring-cloud-stream-访问-kafka","link":"#_116-通过-spring-cloud-stream-访问-kafka","children":[]},{"level":3,"title":"117 | SpringBucks 实战项目进度小结","slug":"_117-springbucks-实战项目进度小结","link":"#_117-springbucks-实战项目进度小结","children":[]}]},{"level":2,"title":"第十六章：服务链路追踪 (6 讲)","slug":"第十六章-服务链路追踪-6-讲","link":"#第十六章-服务链路追踪-6-讲","children":[{"level":3,"title":"118 | 通过 Dapper 理解链路治理","slug":"_118-通过-dapper-理解链路治理","link":"#_118-通过-dapper-理解链路治理","children":[]},{"level":3,"title":"119 | 使用 Spring Cloud Sleuth 实现链路追踪","slug":"_119-使用-spring-cloud-sleuth-实现链路追踪","link":"#_119-使用-spring-cloud-sleuth-实现链路追踪","children":[]},{"level":3,"title":"120 | 如何追踪消息链路","slug":"_120-如何追踪消息链路","link":"#_120-如何追踪消息链路","children":[]},{"level":3,"title":"121 | 除了链路还要治理什么","slug":"_121-除了链路还要治理什么","link":"#_121-除了链路还要治理什么","children":[]},{"level":3,"title":"122 | SpringBucks 实战项目进度小结","slug":"_122-springbucks-实战项目进度小结","link":"#_122-springbucks-实战项目进度小结","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757754608000,"updatedTime":1757754608000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":28.98,"words":8695},"filePathRelative":"00.笔记/01.Java/极客时间教程-玩转Spring全家桶笔记.md","localizedDate":"2023年7月29日","excerpt":"<h1> 《极客时间教程 - 玩转 Spring 全家桶》笔记</h1>\\n<h2> 第一章：初识 Spring (4 讲)</h2>\\n<h3> 01 | Spring 课程介绍</h3>\\n<h3> 02 | 一起认识 Spring 家族的主要成员</h3>\\n<p>Spring Framework - 用于构建企业级应用的轻量级一站式解决方案</p>\\n<p>Spring Boot - 快速构建基于 Spring 的应用程序</p>\\n<p>Spring Cloud - 简化分布式系统的开发</p>\\n<h3> 03 | 跟着 Spring 了解技术趋势</h3>\\n<p>略</p>\\n<h3> 04 | 编写你的第一个 Spring 程序</h3>","autoDesc":true}');export{l as data};
