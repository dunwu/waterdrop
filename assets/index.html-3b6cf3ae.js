import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as e,e as t}from"./app-7555fb14.js";const l={},r=n("h1",{id:"springboot-之属性加载详解",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#springboot-之属性加载详解","aria-hidden":"true"},"#"),s(" SpringBoot 之属性加载详解")],-1),u=n("h2",{id:"加载-property-顺序",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#加载-property-顺序","aria-hidden":"true"},"#"),s(" 加载 property 顺序")],-1),d=n("p",null,"Spring Boot 加载 property 顺序如下：",-1),k={href:"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot-devtools-globalsettings",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"~/.spring-boot-devtools.properties",-1),m={href:"https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/test/context/TestPropertySource.html",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"@TestPropertySource",-1),h=n("code",null,"properties",-1),g={href:"https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/test/context/SpringBootTest.html",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"@SpringBootTest",-1),f={href:"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-testing-spring-boot-applications-testing-autoconfigured-tests",target:"_blank",rel:"noopener noreferrer"},w=t("<li>命令行参数</li><li><code>SPRING_APPLICATION_JSON</code> 属性</li><li><code>ServletConfig</code> 初始化参数</li><li><code>ServletContext</code> 初始化参数</li><li>JNDI attributes from 通过 <code>java:comp/env</code> 配置的 JNDI 属性</li><li>Java 系统属性 (<code>System.getProperties()</code>)</li><li>操作系统环境比那里</li><li><code>RandomValuePropertySource</code> 加载 <code>random.*</code> 形式的属性</li><li>jar 包外的 <code>application-{profile}.properties</code> 或 <code>application-{profile}.yml</code> 配置</li><li>jar 包内的 <code>application-{profile}.properties</code> 或 <code>application-{profile}.yml</code> 配置</li><li>jar 包外的 <code>application.properties</code> 或 <code>application.yml</code> 配置</li><li>jar 包内的 <code>application.properties</code> 或 <code>application.yml</code> 配置</li><li><code>@PropertySource</code> 绑定的配置</li><li>默认属性 (通过 <code>SpringApplication.setDefaultProperties</code> 指定)</li>",14),S=t('<h2 id="随机属性" tabindex="-1"><a class="header-anchor" href="#随机属性" aria-hidden="true">#</a> 随机属性</h2><p><code>RandomValuePropertySource</code> 类用于配置随机值。</p><p>示例：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">my.secret</span><span class="token punctuation">=</span><span class="token value attr-value">${random.value}</span>\n<span class="token key attr-name">my.number</span><span class="token punctuation">=</span><span class="token value attr-value">${random.int}</span>\n<span class="token key attr-name">my.bignumber</span><span class="token punctuation">=</span><span class="token value attr-value">${random.long}</span>\n<span class="token key attr-name">my.uuid</span><span class="token punctuation">=</span><span class="token value attr-value">${random.uuid}</span>\n<span class="token key attr-name">my.number.less.than.ten</span><span class="token punctuation">=</span><span class="token value attr-value">${random.int(10)}</span>\n<span class="token key attr-name">my.number.in.range</span><span class="token punctuation">=</span><span class="token value attr-value">${random.int[1024,65536]}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="命令行属性" tabindex="-1"><a class="header-anchor" href="#命令行属性" aria-hidden="true">#</a> 命令行属性</h2><p>默认情况下， <code>SpringApplication</code> 会获取 <code>--</code> 参数（例如 <code>--server.port=9000</code> ），并将这个 <code>property</code> 添加到 Spring 的 <code>Environment</code> 中。</p><p>如果不想加载命令行属性，可以通过 <code>SpringApplication.setAddCommandLineProperties(false)</code> 禁用。</p><h2 id="application-属性文件" tabindex="-1"><a class="header-anchor" href="#application-属性文件" aria-hidden="true">#</a> Application 属性文件</h2><p><code>SpringApplication</code> 会自动加载以下路径下的 <code>application.properties</code> 配置文件，将其中的属性读到 Spring 的 <code>Environment</code> 中。</p><ol><li>当前目录的 <code>/config</code> 子目录</li><li>当前目录</li><li>classpath 路径下的 <code>/config</code> package</li><li>classpath 根路径</li></ol>',10),_=n("p",null,"注：",-1),x=n("p",null,"以上列表的配置文件会根据顺序，后序的配置会覆盖前序的配置。",-1),A={href:"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-external-config-yaml",target:"_blank",rel:"noopener noreferrer"},j=t(`<p>如果不喜欢 <code>application.properties</code> 作为配置文件名，可以使用 <code>spring.config.name</code> 环境变量替换：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ java -jar myproject.jar --spring.config.name=myproject
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以使用 <code>spring.config.location</code> 环境变量指定配置文件路径：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">$</span> <span class="token value attr-value">java -jar myproject.jar --spring.config.location=classpath:/default.properties,classpath:/override.properties</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="profile-特定属性" tabindex="-1"><a class="header-anchor" href="#profile-特定属性" aria-hidden="true">#</a> Profile 特定属性</h2><p>如果定义 <code>application-{profile}.properties</code> 形式的配置文件，将被视为 <code>profile</code> 环境下的特定配置。</p><p>可以通过 <code>spring.profiles.active</code> 参数来激活 profile，如果没有激活的 profile,默认会加载 <code>application-default.properties</code> 中的配置。</p><h2 id="属性中的占位符" tabindex="-1"><a class="header-anchor" href="#属性中的占位符" aria-hidden="true">#</a> 属性中的占位符</h2><p><code>application.properties</code> 中的值会被 <code>Environment</code> 过滤，所以，可以引用之前定义的属性。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app.name=MyApp
app.description=\${app.name} is a Spring Boot application
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,10),P={href:"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-use-short-command-line-arguments",target:"_blank",rel:"noopener noreferrer"},D=t(`<h2 id="yaml-属性" tabindex="-1"><a class="header-anchor" href="#yaml-属性" aria-hidden="true">#</a> YAML 属性</h2><p>Spring 框架有两个类支持加载 YAML 文件。</p><ul><li><code>YamlPropertiesFactoryBean</code> 将 YAML 文件的配置加载为 <code>Properties</code> 。</li><li><code>YamlMapFactoryBean</code> 将 YAML 文件的配置加载为 <code>Map</code> 。</li></ul><p>示例 1</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">environments</span><span class="token punctuation">:</span>
	<span class="token key atrule">dev</span><span class="token punctuation">:</span>
		<span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//dev.example.com
		<span class="token key atrule">name</span><span class="token punctuation">:</span> Developer Setup
	<span class="token key atrule">prod</span><span class="token punctuation">:</span>
		<span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//another.example.com
		<span class="token key atrule">name</span><span class="token punctuation">:</span> My Cool App
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>等价于：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">environments.dev.url</span><span class="token punctuation">=</span><span class="token value attr-value">http://dev.example.com</span>
<span class="token key attr-name">environments.dev.name</span><span class="token punctuation">=</span><span class="token value attr-value">Developer Setup</span>
<span class="token key attr-name">environments.prod.url</span><span class="token punctuation">=</span><span class="token value attr-value">http://another.example.com</span>
<span class="token key attr-name">environments.prod.name</span><span class="token punctuation">=</span><span class="token value attr-value">My Cool App</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>YAML 支持列表形式，等价于 property 中的 <code>[index]</code> ：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">my</span><span class="token punctuation">:</span>
<span class="token key atrule">servers</span><span class="token punctuation">:</span>
	<span class="token punctuation">-</span> dev.example.com
	<span class="token punctuation">-</span> another.example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>等价于</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">my.servers[0]</span><span class="token punctuation">=</span><span class="token value attr-value">dev.example.com</span>
<span class="token key attr-name">my.servers[1]</span><span class="token punctuation">=</span><span class="token value attr-value">another.example.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="访问属性" tabindex="-1"><a class="header-anchor" href="#访问属性" aria-hidden="true">#</a> 访问属性</h3><p><code>YamlPropertySourceLoader</code> 类会将 YAML 配置转化为 Spring <code>Environment</code> 类中的 <code>PropertySource</code> 。然后，你可以如同 properties 文件中的属性一样，使用 <code>@Value</code> 注解来访问 YAML 中配置的属性。</p><h3 id="多-profile-配置" tabindex="-1"><a class="header-anchor" href="#多-profile-配置" aria-hidden="true">#</a> 多 profile 配置</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">address</span><span class="token punctuation">:</span> 192.168.1.100
<span class="token punctuation">---</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span> development
<span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">address</span><span class="token punctuation">:</span> 127.0.0.1
<span class="token punctuation">---</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span> production &amp; eu<span class="token punctuation">-</span>central
<span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">address</span><span class="token punctuation">:</span> 192.168.1.120
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="yaml-的缺点" tabindex="-1"><a class="header-anchor" href="#yaml-的缺点" aria-hidden="true">#</a> YAML 的缺点</h3><p>注：YAML 注解中的属性不能通过 <code>@PropertySource</code> 注解来访问。所以，如果你的项目中使用了一些自定义属性文件，建议不要用 YAML。</p><h2 id="属性前缀" tabindex="-1"><a class="header-anchor" href="#属性前缀" aria-hidden="true">#</a> 属性前缀</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetAddress</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">ConfigurationProperties</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix<span class="token operator">=</span><span class="token string">&quot;acme&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AcmeProperties</span> <span class="token punctuation">{</span>

	<span class="token keyword">private</span> <span class="token keyword">boolean</span> enabled<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">InetAddress</span> remoteAddress<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Security</span> security <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Security</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> enabled<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">InetAddress</span> <span class="token function">getRemoteAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRemoteAddress</span><span class="token punctuation">(</span><span class="token class-name">InetAddress</span> remoteAddress<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">Security</span> <span class="token function">getSecurity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Security</span> <span class="token punctuation">{</span>

		<span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>

		<span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>

		<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> roles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singleton</span><span class="token punctuation">(</span><span class="token string">&quot;USER&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRoles</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> roles<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相当于支持配置以下属性：</p><ul><li><code>acme.enabled</code></li><li><code>acme.remote-address</code></li><li><code>acme.security.username</code></li><li><code>acme.security.password</code></li><li><code>acme.security.roles</code></li></ul><p>然后，你需要使用 <code>@EnableConfigurationProperties</code> 注解将属性类注入配置类中。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token class-name">AcmeProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConfiguration</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性松散绑定规则" tabindex="-1"><a class="header-anchor" href="#属性松散绑定规则" aria-hidden="true">#</a> 属性松散绑定规则</h2><p>Spring Boot 属性名绑定比较松散。</p><p>以下属性 key 都是等价的：</p><table><thead><tr><th>Property</th><th>Note</th></tr></thead><tbody><tr><td><code>acme.my-project.person.first-name</code></td><td><code>-</code> 分隔</td></tr><tr><td><code>acme.myProject.person.firstName</code></td><td>驼峰命名</td></tr><tr><td><code>acme.my_project.person.first_name</code></td><td><code>_</code> 分隔</td></tr><tr><td><code>ACME_MYPROJECT_PERSON_FIRSTNAME</code></td><td>大写字母</td></tr></tbody></table><h2 id="属性转换" tabindex="-1"><a class="header-anchor" href="#属性转换" aria-hidden="true">#</a> 属性转换</h2><p>如果需要类型转换，你可以提供一个 <code>ConversionService</code> bean (一个名叫 <code>conversionService</code> 的 bean) 或自定义属性配置 (一个 <code>CustomEditorConfigurer</code> bean) 或自定义的 <code>Converters</code> (被 <code>@ConfigurationPropertiesBinding</code> 注解修饰的 bena)。</p><h3 id="时间单位转换" tabindex="-1"><a class="header-anchor" href="#时间单位转换" aria-hidden="true">#</a> 时间单位转换</h3><p>Spring 使用 <code>java.time.Duration</code> 类代表时间大小，以下场景适用：</p>`,31),T=n("li",null,[s("除非指定 "),n("code",null,"@DurationUnit"),s(" ，否则一个 long 代表的时间为毫秒。")],-1),C={href:"https://docs.oracle.com/javase/8/docs/api//java/time/Duration.html#parse-java.lang.CharSequence-",target:"_blank",rel:"noopener noreferrer"},B=n("code",null,"java.time.Duration",-1),z=t("<li>你也可以使用以下支持的单位： <ul><li><code>ns</code> - 纳秒</li><li><code>us</code> - 微秒</li><li><code>ms</code> - 毫秒</li><li><code>s</code> - 秒</li><li><code>m</code> - 分</li><li><code>h</code> - 时</li><li><code>d</code> - 天</li></ul></li>",1),M=t(`<p>示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span><span class="token string">&quot;app.system&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppSystemProperties</span> <span class="token punctuation">{</span>

	<span class="token annotation punctuation">@DurationUnit</span><span class="token punctuation">(</span><span class="token class-name">ChronoUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>
	<span class="token keyword">private</span> <span class="token class-name">Duration</span> sessionTimeout <span class="token operator">=</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">Duration</span> readTimeout <span class="token operator">=</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofMillis</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">Duration</span> <span class="token function">getSessionTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sessionTimeout<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSessionTimeout</span><span class="token punctuation">(</span><span class="token class-name">Duration</span> sessionTimeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>sessionTimeout <span class="token operator">=</span> sessionTimeout<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">Duration</span> <span class="token function">getReadTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>readTimeout<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setReadTimeout</span><span class="token punctuation">(</span><span class="token class-name">Duration</span> readTimeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>readTimeout <span class="token operator">=</span> readTimeout<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据大小转换" tabindex="-1"><a class="header-anchor" href="#数据大小转换" aria-hidden="true">#</a> 数据大小转换</h3><p>Spring 使用 <code>DataSize</code> 类代表数据大小，以下场景适用：</p><ul><li>long 值（默认视为 byte）</li><li>你也可以使用以下支持的单位： <ul><li><code>B</code></li><li><code>KB</code></li><li><code>MB</code></li><li><code>GB</code></li><li><code>TB</code></li></ul></li></ul><p>示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span><span class="token string">&quot;app.io&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppIoProperties</span> <span class="token punctuation">{</span>

	<span class="token annotation punctuation">@DataSizeUnit</span><span class="token punctuation">(</span><span class="token class-name">DataUnit</span><span class="token punctuation">.</span><span class="token constant">MEGABYTES</span><span class="token punctuation">)</span>
	<span class="token keyword">private</span> <span class="token class-name">DataSize</span> bufferSize <span class="token operator">=</span> <span class="token class-name">DataSize</span><span class="token punctuation">.</span><span class="token function">ofMegabytes</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">DataSize</span> sizeThreshold <span class="token operator">=</span> <span class="token class-name">DataSize</span><span class="token punctuation">.</span><span class="token function">ofBytes</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">DataSize</span> <span class="token function">getBufferSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bufferSize<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBufferSize</span><span class="token punctuation">(</span><span class="token class-name">DataSize</span> bufferSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>bufferSize <span class="token operator">=</span> bufferSize<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">DataSize</span> <span class="token function">getSizeThreshold</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sizeThreshold<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSizeThreshold</span><span class="token punctuation">(</span><span class="token class-name">DataSize</span> sizeThreshold<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>sizeThreshold <span class="token operator">=</span> sizeThreshold<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="校验属性" tabindex="-1"><a class="header-anchor" href="#校验属性" aria-hidden="true">#</a> 校验属性</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix<span class="token operator">=</span><span class="token string">&quot;acme&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Validated</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AcmeProperties</span> <span class="token punctuation">{</span>

	<span class="token annotation punctuation">@NotNull</span>
	<span class="token keyword">private</span> <span class="token class-name">InetAddress</span> remoteAddress<span class="token punctuation">;</span>

	<span class="token annotation punctuation">@Valid</span>
	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Security</span> security <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Security</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// ... getters and setters</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Security</span> <span class="token punctuation">{</span>

		<span class="token annotation punctuation">@NotEmpty</span>
		<span class="token keyword">public</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>

		<span class="token comment">// ... getters and setters</span>

	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你也可以自定义一个名为 <code>configurationPropertiesValidator</code> 的校验器 Bean。获取这个 <code>@Bean</code> 的方法必须声明为 <code>static</code>。</p><h2 id="示例源码" tabindex="-1"><a class="header-anchor" href="#示例源码" aria-hidden="true">#</a> 示例源码</h2>`,11),L={href:"https://github.com/dunwu/spring-boot-tutorial/tree/master/codes/spring-boot-property",target:"_blank",rel:"noopener noreferrer"},E=n("h2",{id:"参考资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考资料","aria-hidden":"true"},"#"),s(" 参考资料")],-1),N={href:"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-external-config",target:"_blank",rel:"noopener noreferrer"};function Y(I,q){const a=o("ExternalLinkIcon");return c(),i("div",null,[r,u,d,n("ol",null,[n("li",null,[n("a",k,[s("Devtools 全局配置"),e(a)]),s(" (当 devtools 被激活 "),v,s(").")]),n("li",null,[n("a",m,[s("测试环境中的 "),b,s(" 注解配置"),e(a)])]),n("li",null,[s("测试环境中的属性 "),h,s("："),n("a",g,[y,e(a)]),s(" 和 "),n("a",f,[s("测试注解"),e(a)]),s(".")]),w]),S,n("blockquote",null,[_,x,n("p",null,[s("你可以选择 "),n("a",A,[s("YAML(yml)"),e(a)]),s(" 配置文件替换 properties 配置文件。")])]),j,n("blockquote",null,[n("p",null,[s("注：你可以使用此技术来创建 Spring Boot 属性变量。请参考： "),n("a",P,[s("Section 77.4, “Use ‘Short’ Command Line Arguments"),e(a)])])]),D,n("ul",null,[T,n("li",null,[s("ISO-8601 标准格式（ "),n("a",C,[B,e(a)]),s(" 的实现就是参照此标准）")]),z]),M,n("blockquote",null,[n("p",null,[s("示例源码："),n("a",L,[s("spring-boot-property"),e(a)])])]),E,n("ul",null,[n("li",null,[n("a",N,[s("Spring Boot 官方文档之 boot-features-external-config"),e(a)])])])])}const U=p(l,[["render",Y],["__file","index.html.vue"]]);export{U as default};
