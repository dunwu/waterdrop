import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as r,c as d,f as i,a as t,d as o,b as e,e as s}from"./app-38fe414d.js";const c={},g=t("h1",{id:"mongodb-简介",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#mongodb-简介","aria-hidden":"true"},"#"),e(" MongoDB 简介")],-1),p=t("div",{class:"hint-container info"},[t("p",{class:"hint-container-title"},"概述"),t("p",null,[t("strong",null,"MongoDB 是一个流行的、开源的文档数据库"),e("。")]),t("p",null,"本文简单介绍了 MongoDB 的功能、特性、发行版本、简史、概念，可以让读者在短时间内对于 MongoDB 有一个初步的认识。")],-1),u=s('<h2 id="什么是-mongodb" tabindex="-1"><a class="header-anchor" href="#什么是-mongodb" aria-hidden="true">#</a> 什么是 MongoDB</h2><p>MongoDB 是一个<strong>面向文档</strong>的开源 NoSQL 数据库系统，由 <strong>C++</strong> 编写的。MongoDB 支持“<strong>无模式</strong>”的数据建模，可以存储比较复杂的数据类型，是一款非常流行的 <strong>文档类型数据库</strong> 。</p><p>在高负载的情况下，MongoDB 天然支持水平扩展和高可用，可以很方便地添加更多的节点/实例，以保证服务性能和可用性。在许多场景下，MongoDB 可以用于代替传统的关系型数据库或键/值存储方式，皆在为 Web 应用提供可扩展的高可用高性能数据存储解决方案。</p><p>MongoDB 提供了丰富的功能：</p>',4),h={href:"https://www.mongodb.com/zh-cn/docs/manual/crud/#std-label-crud",target:"_blank",rel:"noopener noreferrer"},m=t("strong",null,"读写操作 (CRUD)",-1),b={href:"https://www.mongodb.com/zh-cn/docs/manual/core/aggregation-pipeline/#std-label-aggregation-pipeline",target:"_blank",rel:"noopener noreferrer"},_=t("strong",null,"数据聚合",-1),f={href:"https://www.mongodb.com/zh-cn/docs/manual/text-search/#std-label-text-search",target:"_blank",rel:"noopener noreferrer"},y=t("strong",null,"文本搜索",-1),B={href:"https://www.mongodb.com/zh-cn/docs/manual/tutorial/geospatial-tutorial/",target:"_blank",rel:"noopener noreferrer"},D=t("strong",null,"地理空间搜索",-1),w=t("li",null,"...",-1),x=t("h2",{id:"mongodb-特性",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#mongodb-特性","aria-hidden":"true"},"#"),e(" MongoDB 特性")],-1),M=t("p",null,"MongoDB 主要有以下特性：",-1),k=t("strong",null,"面向文档",-1),v={href:"https://www.mongodb.com/zh-cn/docs/manual/core/document/#std-label-bson-document-format",target:"_blank",rel:"noopener noreferrer"},q={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/glossary/#std-term-JSON",target:"_blank",rel:"noopener noreferrer"},S=s("<li><strong>无模式</strong> - MongoDB 中没有预定义模式（predefined schema），文档键值的类型和大小不是固定的。由于没有固定的模式，因此按需添加或删除字段变得更容易。</li><li><strong>丰富的查询方式</strong> - MongoDB 支持基本的 CRUD 以及数据聚合、文本搜索和地理空间查询。</li><li><strong>丰富的索引类型</strong> - MongoDB 支持多种类型的索引，包括单字段索引、复合索引、多键索引、哈希索引、文本索引、 地理位置索引等，每种类型的索引有不同的使用场合。</li><li><strong>支持 ACID 事务</strong> - NoSQL 通常不支持事务，但 MongoDB 支持事务，且 MongoDB 支持 ACID。 <ul><li>MongoDB 单文档支持原子性，也具备事务的特性。</li><li>MongoDB 4.0 加入了对多文档事务的支持，但只支持复制集部署模式下的事务，也就是说事务的作用域限制为一个副本集内。</li><li>MongoDB 4.2 引入了分布式事务，增加了对分片集群上多文档事务的支持，并合并了对副本集上多文档事务的现有支持。</li></ul></li><li><strong>支持压缩</strong>：存储同样的数据所需的资源更少。</li>",5),z=t("strong",null,"支持 map-reduce",-1),N={href:"https://www.mongodb.com/docs/manual/core/aggregation-pipeline/",target:"_blank",rel:"noopener noreferrer"},O=t("li",null,[t("strong",null,"支持存储大文件"),e("：MongoDB 的单文档存储空间要求不超过 16MB。对于超过 16MB 的大文件，MongoDB 提供了 GridFS 来进行存储，通过 GridFS，可以将大型数据进行分块处理，然后将这些切分后的小文档保存在数据库中。")],-1),C=t("p",null,"MongoDB 作为分布式存储，自然也具备了分布式的一般特性：",-1),I=t("strong",null,"高可用",-1),j=t("strong",null,"复制",-1),J=t("strong",null,"高可用",-1),R=t("strong",null,"数据冗余",-1),L=t("strong",null,"自动故障转移",-1),T={href:"https://www.mongodb.com/zh-cn/docs/manual/replication/",target:"_blank",rel:"noopener noreferrer"},U=t("strong",null,"副本集",-1),$={href:"https://www.mongodb.com/zh-cn/docs/manual/replication/",target:"_blank",rel:"noopener noreferrer"},A=t("strong",null,"副本集",-1),Q=t("strong",null,"高性能",-1),E=t("strong",null,"分片",-1),F=t("strong",null,"水平扩容",-1),V={href:"https://www.mongodb.com/zh-cn/docs/manual/core/zone-sharding/#std-label-zone-sharding",target:"_blank",rel:"noopener noreferrer"},G=t("strong",null,"分片键",-1),H={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/glossary/#std-term-shard-key",target:"_blank",rel:"noopener noreferrer"},X=t("strong",null,"区域",-1),W=t("h2",{id:"mongodb-发行版本",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#mongodb-发行版本","aria-hidden":"true"},"#"),e(" MongoDB 发行版本")],-1),P=t("p",null,"MongoDB 有以下发行版本：",-1),K={href:"https://www.mongodb.com/zh-cn/docs/atlas?tck=docs_server",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://www.mongodb.com/zh-cn/docs/manual/administration/install-enterprise/#std-label-install-mdb-enterprise",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://www.mongodb.com/zh-cn/docs/manual/administration/install-community/#std-label-install-mdb-community-edition",target:"_blank",rel:"noopener noreferrer"},tt=s('<h2 id="mongodb-简史" tabindex="-1"><a class="header-anchor" href="#mongodb-简史" aria-hidden="true">#</a> MongoDB 简史</h2><p>MongoDB 是由 <strong>10gen</strong> 开发的 NoSQL 数据库，该公司由 Dwight Merriman 和 Eliot Horowitz 于 2007 年创立。2013 年，<strong>10gen 更名为 MongoDB Inc</strong>.。以更好地反映其对 MongoDB 数据库开发的关注。2017 年，MongoDB 公司上市。</p><p>里程碑版本：</p><ul><li><strong>1.0</strong> - 2009 年，MongoDB 发布第一版。</li><li><strong>1.6</strong> - 2010 年，引入分片机制（Sharding），支持水平扩展。</li><li><strong>2.2</strong> - 2012 年，引入了聚合管道（Pipeline）。</li><li><strong>2.4</strong> - 2013 年，引入了全文搜索。</li><li><strong>3.0</strong> - 2015 年，全面支持 <strong>WiredTiger</strong> 存储引擎，并支持可插拔存储引擎。</li><li><strong>4.0</strong> - 2019 年，支持 ACID 事务。</li><li><strong>4.2</strong> - 2020 年，支持分布式事务。</li></ul>',4),et=t("p",null,"扩展阅读：",-1),nt={href:"https://www.infoq.cn/article/3d4suwkc2fvikykemnvw",target:"_blank",rel:"noopener noreferrer"},ot={href:"https://blog.csdn.net/JiekeXu/article/details/143670868",target:"_blank",rel:"noopener noreferrer"},st=t("h2",{id:"mongodb-概念",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#mongodb-概念","aria-hidden":"true"},"#"),e(" MongoDB 概念")],-1),lt={href:"https://www.mongodb.com/zh-cn/docs/manual/core/document/#std-label-bson-document-format",target:"_blank",rel:"noopener noreferrer"},at={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/glossary/#std-term-JSON",target:"_blank",rel:"noopener noreferrer"},rt={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/glossary/#std-term-_id",target:"_blank",rel:"noopener noreferrer"},dt=t("code",null,"_id",-1),it={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/glossary/#std-term-primary-key",target:"_blank",rel:"noopener noreferrer"},ct=t("code",null,"_id",-1),gt=t("code",null,"_id",-1),pt={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/bson-types/#std-label-objectid",target:"_blank",rel:"noopener noreferrer"},ut={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/glossary/#std-term-document",target:"_blank",rel:"noopener noreferrer"},ht={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/glossary/#std-term-collection",target:"_blank",rel:"noopener noreferrer"},mt={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/glossary/#std-term-database",target:"_blank",rel:"noopener noreferrer"},bt=t("p",null,"为了方便理解 MongoDB 概念，下面将 MongoDB 概念和 RDBM 概念进行对比：",-1),_t=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"RDBM 概念"),t("th",{style:{"text-align":"left"}},"MongoDB 概念")])],-1),ft=t("tr",null,[t("td",{style:{"text-align":"left"}},"database（数据库）"),t("td",{style:{"text-align":"left"}},"database（数据库）")],-1),yt=t("tr",null,[t("td",{style:{"text-align":"left"}},"table（表）"),t("td",{style:{"text-align":"left"}},"collection（集合）")],-1),Bt=t("tr",null,[t("td",{style:{"text-align":"left"}},"row（行）"),t("td",{style:{"text-align":"left"}},"document（文档）")],-1),Dt=t("tr",null,[t("td",{style:{"text-align":"left"}},"column（列）"),t("td",{style:{"text-align":"left"}},"field（字段）")],-1),wt=t("tr",null,[t("td",{style:{"text-align":"left"}},"index（索引）"),t("td",{style:{"text-align":"left"}},"index（索引）")],-1),xt=t("td",{style:{"text-align":"left"}},"primary key",-1),Mt={style:{"text-align":"left"}},kt={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/glossary/#std-term-_id",target:"_blank",rel:"noopener noreferrer"},vt=t("code",null,"_id",-1),qt=s(`<h3 id="文档" tabindex="-1"><a class="header-anchor" href="#文档" aria-hidden="true">#</a> 文档</h3><p>文档是 MongoDB 中的<strong>基本数据单元</strong>。<strong>文档是一组有序键值对（即 BSON）</strong>。MongoDB 的文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型，这与关系型数据库有很大的区别，也是 MongoDB 非常突出的特点。</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/202503041024526.png" alt="MongoDB Document" tabindex="0" loading="lazy"><figcaption>MongoDB Document</figcaption></figure><p>需要注意的是：</p><ul><li><p><strong>文档中的键/值对是有序的</strong>。</p></li><li><p>文档的键是字符串。除了少数例外情况，<strong>键可以使用任意 UTF-8 字符</strong>。</p></li><li><p>文档中的值不仅可以是在双引号里面的字符串，还可以是其他几种数据类型（甚至可以是整个嵌入的文档）。</p></li><li><p><strong>MongoDB 区分类型和大小写</strong>。例如，下面这两对文档是不同的：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;count&quot;</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;count&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">}</span>

<span class="token punctuation">{</span><span class="token property">&quot;count&quot;</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token property">&quot;Count&quot;</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>MongoDB 的文档不能有重复的键。例如，下面这个文档是不合法的</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;greeting&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;Hello, world!&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;greeting&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;Hello, MongoDB!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>文档键命名规范：</p><ul><li>键不能含有 <code>\\0</code> （空字符）。这个字符用来表示键的结尾。</li><li><code>.</code> 和 <code>$</code> 有特别的意义，只有在特定环境下才能使用。</li><li>以下划线 <code>_</code> 开头的键是保留的（不是严格要求的）。</li></ul><h3 id="集合" tabindex="-1"><a class="header-anchor" href="#集合" aria-hidden="true">#</a> 集合</h3><p>集合就是 MongoDB 文档组，类似于 RDBMS （关系数据库管理系统：Relational Database Management System) 中的表（Table）。集合存在于数据库中，集合没有固定的结构，这意味着你在对集合可以插入不同格式和类型的数据，但通常情况下我们插入集合的数据都会有一定的关联性。</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/202503041024137.png" alt="MongoDB Collection" tabindex="0" loading="lazy"><figcaption>MongoDB Collection</figcaption></figure><p>集合不需要事先创建，当第一个文档插入或者第一个索引创建时，如果该集合不存在，则会创建一个新的集合。使用 <code>.</code> 字符分隔不同命名空间的子集合是一种组织集合的惯例。例如，有一个具有博客功能的应用程序，可能包含名为 <code>blog.posts</code> 和名为 <code>blog.authors</code> 的集合。</p><p>合法的集合名：</p><ul><li>集合名称不能是空字符串（&quot;&quot;）。</li><li>集合名称不能含有 <code>\\0</code>（空字符），因为这个字符用于表示一个集合名称的结束。</li><li>集合名称不能以 <code>system.</code> 开头，该前缀是为内部集合保留的。例如，<code>system.users</code> 集合中保存着数据库的用户，<code>system.namespaces</code> 集合中保存着有关数据库所有集合的信息。</li><li>用户创建的集合名称中不应包含保留字符 <code>$</code>。许多驱动程序确实支持在集合名称中使用 <code>$</code>，这是因为某些由系统生成的集合会包含它，但除非你要访问的是这些集合之一，否则不应在名称中使用 <code>$</code> 字符。</li></ul><h3 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库" aria-hidden="true">#</a> 数据库</h3><p>数据库用于存储所有集合，而集合又用于存储所有文档。一个 MongoDB 中可以创建多个数据库，每一个数据库都有自己的集合和权限。MongoDB 的单个实例可以容纳多个独立的数据库，每一个都有自己的集合和权限，不同的数据库也放置在不同的文件中。</p><p>MongoDB 的默认数据库为&quot;db&quot;，该数据库存储在 data 目录中。</p><p><strong>&quot;show dbs&quot;</strong> 命令可以显示所有数据的列表。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ ./mongo
MongoDBshell version: <span class="token number">3.0</span>.6
connecting to: <span class="token builtin class-name">test</span>
<span class="token operator">&gt;</span> show dbs
<span class="token builtin class-name">local</span>  <span class="token number">0</span>.078GB
<span class="token builtin class-name">test</span>   <span class="token number">0</span>.078GB
<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行 <strong>&quot;db&quot;</strong> 命令可以显示当前数据库对象或集合。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ ./mongo
MongoDBshell version: <span class="token number">3.0</span>.6
connecting to: <span class="token builtin class-name">test</span>
<span class="token operator">&gt;</span> db
<span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行&quot;use&quot;命令，可以连接到一个指定的数据库。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> use <span class="token builtin class-name">local</span>
switched to db <span class="token builtin class-name">local</span>
<span class="token operator">&gt;</span> db
<span class="token builtin class-name">local</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数据库按照名称进行标识的。数据库名称可以是任意 UTF-8 字符串，但有以下限制：</p><ul><li>数据库名称不能是空字符串（&quot;&quot;）。</li><li>数据库名称不能包含 <code>/</code>、<code>\\</code>、<code>.</code>、<code>&quot;</code>、<code>*</code>、<code>&lt;</code>、<code>&gt;</code>、<code>:</code>、<code>|</code>、<code>?</code>、<code>$</code>、单一的空格以及 <code>\\0</code>（空字符），基本上只能使用 ASCII 字母和数字。</li><li>数据库名称区分大小写。</li><li>数据库名称的长度限制为 64 字节。</li></ul><p>有一些数据库名是保留的，可以直接访问这些有特殊作用的数据库。</p><ul><li><strong>admin</strong>：admin 数据库会在身份验证和授权时被使用。此外，某些管理操作需要访问此数据库。</li><li><strong>local</strong>：这个数据永远不会被复制，可以用来存储限于本地单台服务器的任意集合</li><li><strong>config</strong>：当 Mongo 用于分片设置时，config 数据库在内部使用，用于保存分片的相关信息。</li></ul><h3 id="元数据" tabindex="-1"><a class="header-anchor" href="#元数据" aria-hidden="true">#</a> 元数据</h3><p>数据库的信息是存储在集合中。它们使用了系统的命名空间：<code>dbname.system.*</code></p><p>在 MongoDB 数据库中命名空间 <code>&lt;dbname&gt;.system.*</code> 是包含多种系统信息的特殊集合 (Collection)，如下：</p><table><thead><tr><th style="text-align:left;">集合命名空间</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>dbname.system.namespaces</code></td><td style="text-align:left;">列出所有命名空间。</td></tr><tr><td style="text-align:left;"><code>dbname.system.indexes</code></td><td style="text-align:left;">列出所有索引。</td></tr><tr><td style="text-align:left;"><code>dbname.system.profile</code></td><td style="text-align:left;">包含数据库概要 (profile) 信息。</td></tr><tr><td style="text-align:left;"><code>dbname.system.users</code></td><td style="text-align:left;">列出所有可访问数据库的用户。</td></tr><tr><td style="text-align:left;"><code>dbname.local.sources</code></td><td style="text-align:left;">包含复制对端（slave）的服务器信息和状态。</td></tr></tbody></table><p>对于修改系统集合中的对象有如下限制。</p><p>在 <code>system.indexes</code> 插入数据，可以创建索引。但除此之外该表信息是不可变的（特殊的 drop index 命令将自动更新相关信息）。<code>system.users</code> 是可修改的。<code>system.profile</code> 是可删除的。</p><h2 id="bson-数据类型" tabindex="-1"><a class="header-anchor" href="#bson-数据类型" aria-hidden="true">#</a> BSON 数据类型</h2>`,33),St={href:"https://www.mongodb.com/zh-cn/docs/manual/reference/bson-types/#std-label-bson-types",target:"_blank",rel:"noopener noreferrer"},zt=s('<table><thead><tr><th style="text-align:left;">数据类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">String</td><td style="text-align:left;">字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的。</td></tr><tr><td style="text-align:left;">Integer</td><td style="text-align:left;">整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。</td></tr><tr><td style="text-align:left;">Boolean</td><td style="text-align:left;">布尔值。用于存储布尔值（真/假）。</td></tr><tr><td style="text-align:left;">Double</td><td style="text-align:left;">双精度浮点值。用于存储浮点值。</td></tr><tr><td style="text-align:left;">Min/Max keys</td><td style="text-align:left;">将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比。</td></tr><tr><td style="text-align:left;">Array</td><td style="text-align:left;">用于将数组或列表或多个值存储为一个键。</td></tr><tr><td style="text-align:left;">Timestamp</td><td style="text-align:left;">时间戳。记录文档修改或添加的具体时间。</td></tr><tr><td style="text-align:left;">Object</td><td style="text-align:left;">用于内嵌文档。</td></tr><tr><td style="text-align:left;">Null</td><td style="text-align:left;">用于创建空值。</td></tr><tr><td style="text-align:left;">Symbol</td><td style="text-align:left;">符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言。</td></tr><tr><td style="text-align:left;">Date</td><td style="text-align:left;">日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息。</td></tr><tr><td style="text-align:left;">Object ID</td><td style="text-align:left;">对象 ID。用于创建文档的 ID。</td></tr><tr><td style="text-align:left;">Binary Data</td><td style="text-align:left;">二进制数据。用于存储二进制数据。</td></tr><tr><td style="text-align:left;">Code</td><td style="text-align:left;">代码类型。用于在文档中存储 JavaScript 代码。</td></tr><tr><td style="text-align:left;">Regular expression</td><td style="text-align:left;">正则表达式类型。用于存储正则表达式。</td></tr></tbody></table><h2 id="mongodb-vs-rdbm" tabindex="-1"><a class="header-anchor" href="#mongodb-vs-rdbm" aria-hidden="true">#</a> MongoDB vs.RDBM</h2><table><thead><tr><th>特性</th><th>MongoDB</th><th>RDBMS</th></tr></thead><tbody><tr><td>数据模型</td><td>文档模型</td><td>关系型</td></tr><tr><td>CRUD 操作</td><td>MQL/SQL</td><td>SQL</td></tr><tr><td>高可用</td><td>复制集</td><td>集群模式</td></tr><tr><td>扩展性</td><td>支持分片</td><td>数据分区</td></tr><tr><td>扩繁方式</td><td>垂直扩展+水平扩展</td><td>垂直扩展</td></tr><tr><td>索引类型</td><td>B 树、全文索引、地理位置索引、多键索引、TTL 索引</td><td>B 树</td></tr><tr><td>数据容量</td><td>没有理论上限</td><td>千万、亿</td></tr></tbody></table><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>',4),Nt={href:"https://www.mongodb.com/zh-cn/docs/manual/introduction/",target:"_blank",rel:"noopener noreferrer"},Ot={href:"https://www.infoq.cn/article/3d4suwkc2fvikykemnvw",target:"_blank",rel:"noopener noreferrer"},Ct={href:"https://blog.csdn.net/JiekeXu/article/details/143670868",target:"_blank",rel:"noopener noreferrer"};function It(jt,Jt){const n=a("ExternalLinkIcon");return r(),d("div",null,[g,p,i(" more "),u,t("ul",null,[t("li",null,[t("a",h,[m,o(n)])]),t("li",null,[t("a",b,[_,o(n)])]),t("li",null,[t("a",f,[y,o(n)])]),t("li",null,[t("a",B,[D,o(n)])]),w]),x,M,t("ul",null,[t("li",null,[k,e(" - MongoDB 将数据记录存储为 "),t("a",v,[e("BSON 文档"),o(n)]),e("。BSON 是 "),t("a",q,[e("JSON"),o(n)]),e(" 文档的二进制表示形式，尽管它包含的数据类型比 JSON 多。最大 BSON 文档大小为 16 MB。")]),S,t("li",null,[z,e(" - 通过分治的方式完成复杂的聚合任务。不过，从 MongoDB 5.0 开始，map-reduce 已经不被官方推荐使用了，替代方案是 "),t("a",N,[e("聚合管道"),o(n)]),e("。聚合管道提供比 map-reduce 更好的性能和可用性。")]),O]),C,t("ul",null,[t("li",null,[I,e(" - 通过"),j,e("机制实现"),J,e("，提供"),R,e("和"),L,e("能力。在 MongoDB 中，这种机制称为 "),t("a",T,[U,o(n)]),e("。"),t("a",$,[A,o(n)]),e(" 是一组 MongoDB 服务器，它们维护相同的数据集，并可提供冗余和提高数据可用性。")]),t("li",null,[Q,e(" - 通过"),E,e("机制提供"),F,e("能力，以支撑海量数据，海量并发。从 3.4 开始，MongoDB 支持基于 "),t("a",V,[G,o(n)]),e(" 创建数据的 "),t("a",H,[X,o(n)]),e("。在均衡的集群中，MongoDB 仅将区域覆盖的读写定向到区域内的那些分片。")])]),W,P,t("ul",null,[t("li",null,[t("a",K,[e("MongoDB Atlas"),o(n)]),e(" - 用于云端 MongoDB 部署的完全托管服务")]),t("li",null,[t("a",Y,[e("MongoDB Enterprise"),o(n)]),e(" - 基于订阅、自行管理的 MongoDB 版本")]),t("li",null,[t("a",Z,[e("MongoDB Community"),o(n)]),e(" - source-available、可免费使用以及自行管理的 MongoDB 版本")])]),tt,t("blockquote",null,[et,t("ul",null,[t("li",null,[t("a",nt,[e("MongoDB 简史"),o(n)])]),t("li",null,[t("a",ot,[e("MongoDB 发展历史及各主要版本新特性概述"),o(n)])])])]),st,t("p",null,[e("MongoDB 将数据记录存储为 "),t("a",lt,[e("BSON 文档"),o(n)]),e("。BSON 是 "),t("a",at,[e("JSON"),o(n)]),e(" 文档的二进制表示形式，尽管它包含的数据类型比 JSON 多。最大 BSON 文档大小为 16 MB。")]),t("p",null,[e("每个 MongoDB 文档都需要一个唯一的 "),t("a",rt,[dt,o(n)]),e(" 字段作为 "),t("a",it,[e("主键"),o(n)]),e("。如果插入的文档省略了 "),ct,e(" 字段，则 MongoDB 驱动程序会自动为 "),gt,e(" 字段生成 "),t("a",pt,[e("ObjectId"),o(n)]),e("。")]),t("p",null,[e("这些 "),t("a",ut,[e("MongoDB 文档"),o(n)]),e(" 收集在 "),t("a",ht,[e("集合"),o(n)]),e(" 中。"),t("a",mt,[e("数据库"),o(n)]),e(" 存储一个或多个文档集合。")]),bt,t("table",null,[_t,t("tbody",null,[ft,yt,Bt,Dt,wt,t("tr",null,[xt,t("td",Mt,[t("a",kt,[vt,o(n)])])])])]),qt,t("p",null,[e("MongoDB 文档由键值对组成。字段名称是字符串；字段的值可以是任何 "),t("a",St,[e("BSON 数据类型"),o(n)]),e("，包括其他文档、数组和文档数组。")]),zt,t("ul",null,[t("li",null,[t("a",Nt,[e("MongoDB 官方文档之 MongoDB 简介"),o(n)])]),t("li",null,[t("a",Ot,[e("MongoDB 简史"),o(n)])]),t("li",null,[t("a",Ct,[e("MongoDB 发展历史及各主要版本新特性概述"),o(n)])])])])}const Tt=l(c,[["render",It],["__file","index.html.vue"]]);export{Tt as default};
