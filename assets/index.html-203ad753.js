const e=JSON.parse('{"key":"v-3daccbf2","path":"/pages/001529b0/","title":"消息队列","lang":"zh-CN","frontmatter":{"title":"消息队列","date":"2022-02-17T22:34:30.000Z","permalink":"/pages/001529b0/","hidden":true,"index":false,"category":["分布式","分布式通信","MQ"],"tag":["Java","中间件","MQ"],"description":"消息队列 消息队列（Message Queue，简称 MQ）技术是分布式应用间交换信息的一种技术。 消息队列主要解决应用耦合，异步消息，流量削锋等问题，实现高性能，高可用，可伸缩和最终一致性架构。是大型分布式系统不可缺少的中间件。 如果想深入学习各种消息队列产品，建议先了解一下 消息队列基本原理 ，有助于理解消息队列特性的实现和设计思路。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/001529b0/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"消息队列"}],["meta",{"property":"og:description","content":"消息队列 消息队列（Message Queue，简称 MQ）技术是分布式应用间交换信息的一种技术。 消息队列主要解决应用耦合，异步消息，流量削锋等问题，实现高性能，高可用，可伸缩和最终一致性架构。是大型分布式系统不可缺少的中间件。 如果想深入学习各种消息队列产品，建议先了解一下 消息队列基本原理 ，有助于理解消息队列特性的实现和设计思路。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-06T23:46:06.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"中间件"}],["meta",{"property":"article:tag","content":"MQ"}],["meta",{"property":"article:published_time","content":"2022-02-17T22:34:30.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-06T23:46:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"消息队列\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-17T22:34:30.000Z\\",\\"dateModified\\":\\"2025-02-06T23:46:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"内容","slug":"内容","link":"#内容","children":[{"level":3,"title":"MQ 综合","slug":"mq-综合","link":"#mq-综合","children":[]},{"level":3,"title":"Kafka","slug":"kafka","link":"#kafka","children":[]},{"level":3,"title":"RocketMQ","slug":"rocketmq","link":"#rocketmq","children":[]},{"level":3,"title":"其他 MQ","slug":"其他-mq","link":"#其他-mq","children":[]}]},{"level":2,"title":"技术对比","slug":"技术对比","link":"#技术对比","children":[]},{"level":2,"title":"🚪 传送","slug":"🚪-传送","link":"#🚪-传送","children":[]}],"git":{"createdTime":1655247928000,"updatedTime":1738885566000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":6}]},"readingTime":{"minutes":3.41,"words":1023},"filePathRelative":"15.分布式/21.分布式通信/02.MQ/README.md","localizedDate":"2022年2月17日","excerpt":"<h1> 消息队列</h1>\\n<blockquote>\\n<p>消息队列（Message Queue，简称 MQ）技术是分布式应用间交换信息的一种技术。</p>\\n<p>消息队列主要解决应用耦合，异步消息，流量削锋等问题，实现高性能，高可用，可伸缩和最终一致性架构。是大型分布式系统不可缺少的中间件。</p>\\n<p>如果想深入学习各种消息队列产品，建议先了解一下 <a href=\\"https://dunwu.github.io/waterdrop/pages/214c1fa6/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">消息队列基本原理</a> ，有助于理解消息队列特性的实现和设计思路。</p>\\n</blockquote>","autoDesc":true}');export{e as data};
