const e=JSON.parse('{"key":"v-06f775d4","path":"/pages/a7d97a68/","title":"Dubbo 面试之服务治理","lang":"zh-CN","frontmatter":{"title":"Dubbo 面试之服务治理","date":"2025-05-29T23:27:50.000Z","permalink":"/pages/a7d97a68/","category":["分布式","分布式通信","RPC"],"tag":["分布式","通信","RPC","微服务","Dubbo","面试","服务治理"],"description":"Dubbo 面试之服务治理 服务注册和发现 【中等】什么是服务注册与发现？Dubbo 如何实现？ 什么是服务注册与发现？ 服务注册与发现是微服务的核心基础设施，通过解耦服务地址硬编码，实现动态扩缩容和故障自动恢复。 服务注册（Registration）：服务提供者（Provider）启动时，将自己的 IP、端口、接口名 等信息上报到注册中心（如 Zookeeper/Nacos）。举例：订单服务启动后，向注册中心注册：\\"order-service: 192.168.1.100:8080\\"。 服务发现（Discovery）：服务消费者（Consumer）从注册中心 拉取可用服务列表，并基于负载均衡策略选择目标实例。举例：支付服务需要调用订单服务时，从注册中心获取所有可用的order-service节点列表。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/a7d97a68/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Dubbo 面试之服务治理"}],["meta",{"property":"og:description","content":"Dubbo 面试之服务治理 服务注册和发现 【中等】什么是服务注册与发现？Dubbo 如何实现？ 什么是服务注册与发现？ 服务注册与发现是微服务的核心基础设施，通过解耦服务地址硬编码，实现动态扩缩容和故障自动恢复。 服务注册（Registration）：服务提供者（Provider）启动时，将自己的 IP、端口、接口名 等信息上报到注册中心（如 Zookeeper/Nacos）。举例：订单服务启动后，向注册中心注册：\\"order-service: 192.168.1.100:8080\\"。 服务发现（Discovery）：服务消费者（Consumer）从注册中心 拉取可用服务列表，并基于负载均衡策略选择目标实例。举例：支付服务需要调用订单服务时，从注册中心获取所有可用的order-service节点列表。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-29T15:30:35.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"分布式"}],["meta",{"property":"article:tag","content":"通信"}],["meta",{"property":"article:tag","content":"RPC"}],["meta",{"property":"article:tag","content":"微服务"}],["meta",{"property":"article:tag","content":"Dubbo"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:tag","content":"服务治理"}],["meta",{"property":"article:published_time","content":"2025-05-29T23:27:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-29T15:30:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dubbo 面试之服务治理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-29T23:27:50.000Z\\",\\"dateModified\\":\\"2025-05-29T15:30:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"服务注册和发现","slug":"服务注册和发现","link":"#服务注册和发现","children":[{"level":3,"title":"【中等】什么是服务注册与发现？Dubbo 如何实现？","slug":"【中等】什么是服务注册与发现-dubbo-如何实现","link":"#【中等】什么是服务注册与发现-dubbo-如何实现","children":[]},{"level":3,"title":"【简单】Dubbo 支持哪些注册中心？","slug":"【简单】dubbo-支持哪些注册中心","link":"#【简单】dubbo-支持哪些注册中心","children":[]},{"level":3,"title":"【简单】注册中心挂了可以继续通信吗？","slug":"【简单】注册中心挂了可以继续通信吗","link":"#【简单】注册中心挂了可以继续通信吗","children":[]},{"level":3,"title":"【中等】注册中心是选择 CP 还是 AP？","slug":"【中等】注册中心是选择-cp-还是-ap","link":"#【中等】注册中心是选择-cp-还是-ap","children":[]},{"level":3,"title":"【中等】Dubbo 的服务自动上线与下线机制是怎样的？","slug":"【中等】dubbo-的服务自动上线与下线机制是怎样的","link":"#【中等】dubbo-的服务自动上线与下线机制是怎样的","children":[]},{"level":3,"title":"【困难】Dubbo3 的应用级服务发现的工作原理是什么？","slug":"【困难】dubbo3-的应用级服务发现的工作原理是什么","link":"#【困难】dubbo3-的应用级服务发现的工作原理是什么","children":[]}]},{"level":2,"title":"负载均衡","slug":"负载均衡","link":"#负载均衡","children":[{"level":3,"title":"【中等】Dubbo 支持哪些负载均衡方式？各有什么利弊？","slug":"【中等】dubbo-支持哪些负载均衡方式-各有什么利弊","link":"#【中等】dubbo-支持哪些负载均衡方式-各有什么利弊","children":[]}]},{"level":2,"title":"服务路由","slug":"服务路由","link":"#服务路由","children":[{"level":3,"title":"【中等】Dubbo 如何进行服务路由控制？","slug":"【中等】dubbo-如何进行服务路由控制","link":"#【中等】dubbo-如何进行服务路由控制","children":[]},{"level":3,"title":"【中等】Dubbo 路由是怎样工作的？","slug":"【中等】dubbo-路由是怎样工作的","link":"#【中等】dubbo-路由是怎样工作的","children":[]},{"level":3,"title":"【中等】Dubbo 支持哪些路由方式？分别适用于什么场景？","slug":"【中等】dubbo-支持哪些路由方式-分别适用于什么场景","link":"#【中等】dubbo-支持哪些路由方式-分别适用于什么场景","children":[]},{"level":3,"title":"【中等】如何在 Dubbo 中使用直连提供者？","slug":"【中等】如何在-dubbo-中使用直连提供者","link":"#【中等】如何在-dubbo-中使用直连提供者","children":[]}]},{"level":2,"title":"流量控制","slug":"流量控制","link":"#流量控制","children":[{"level":3,"title":"【中等】Dubbo 中的流量控制策略有哪些？","slug":"【中等】dubbo-中的流量控制策略有哪些","link":"#【中等】dubbo-中的流量控制策略有哪些","children":[]},{"level":3,"title":"【中等】什么是 Dubbo 的 Mock 机制？如何使用？","slug":"【中等】什么是-dubbo-的-mock-机制-如何使用","link":"#【中等】什么是-dubbo-的-mock-机制-如何使用","children":[]}]},{"level":2,"title":"故障处理","slug":"故障处理","link":"#故障处理","children":[{"level":3,"title":"【中等】如何在 Dubbo 中使用健康检查？","slug":"【中等】如何在-dubbo-中使用健康检查","link":"#【中等】如何在-dubbo-中使用健康检查","children":[]},{"level":3,"title":"【中等】Dubbo 有哪些集群容错策略？","slug":"【中等】dubbo-有哪些集群容错策略","link":"#【中等】dubbo-有哪些集群容错策略","children":[]}]},{"level":2,"title":"可观测","slug":"可观测","link":"#可观测","children":[{"level":3,"title":"【中等】Dubbo 提供了哪些监控能力？","slug":"【中等】dubbo-提供了哪些监控能力","link":"#【中等】dubbo-提供了哪些监控能力","children":[]},{"level":3,"title":"【中等】Dubbo 的 Monitor 是如何工作的？","slug":"【中等】dubbo-的-monitor-是如何工作的","link":"#【中等】dubbo-的-monitor-是如何工作的","children":[]},{"level":3,"title":"【困难】如何在 Dubbo 中处理服务调用链路追踪？","slug":"【困难】如何在-dubbo-中处理服务调用链路追踪","link":"#【困难】如何在-dubbo-中处理服务调用链路追踪","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1748532635000,"updatedTime":1748532635000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":33.91,"words":10174},"filePathRelative":"15.分布式/21.分布式通信/01.RPC/Dubbo_面试_服务治理.md","localizedDate":"2025年5月29日","excerpt":"<h1> Dubbo 面试之服务治理</h1>\\n<h2> 服务注册和发现</h2>\\n<h3> 【中等】什么是服务注册与发现？Dubbo 如何实现？</h3>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">什么是服务注册与发现？</p>\\n</div>\\n<p>服务注册与发现是微服务的核心基础设施，通过<strong>解耦服务地址硬编码</strong>，实现<strong>动态扩缩容</strong>和<strong>故障自动恢复</strong>。</p>\\n<ul>\\n<li><strong>服务注册（Registration）</strong>：服务提供者（Provider）启动时，将自己的 <strong>IP、端口、接口名</strong> 等信息上报到<strong>注册中心</strong>（如 Zookeeper/Nacos）。<strong>举例</strong>：<code>订单服务</code>启动后，向注册中心注册：<code>\\"order-service: 192.168.1.100:8080\\"</code>。</li>\\n<li><strong>服务发现（Discovery）</strong>：服务消费者（Consumer）从注册中心 <strong>拉取可用服务列表</strong>，并基于负载均衡策略选择目标实例。<strong>举例</strong>：<code>支付服务</code>需要调用<code>订单服务</code>时，从注册中心获取所有可用的<code>order-service</code>节点列表。</li>\\n</ul>","autoDesc":true}');export{e as data};
