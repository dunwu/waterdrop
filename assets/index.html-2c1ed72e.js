const e=JSON.parse('{"key":"v-1e1a82dc","path":"/pages/7c4efd53/","title":"Dubbo 面试之应用","lang":"zh-CN","frontmatter":{"title":"Dubbo 面试之应用","date":"2025-05-29T23:27:50.000Z","permalink":"/pages/7c4efd53/","category":["分布式","分布式通信","RPC"],"tag":["分布式","通信","RPC","微服务","Dubbo","面试"],"description":"Dubbo 面试之应用 简介 【简单】Dubbo 是什么？为什么使用 Dubbo？ Dubbo 是一款高性能、轻量级的开源 Java RPC 框架。 Dubbo 提供了三大核心能力： 面向接口的远程过程调用（RPC）：提供高性能的基于代理的远程调用能力，服务以接口为粒度，为开发者屏蔽远程调用底层细节。 智能容错和负载均衡：内置多种负载均衡策略，智能感知下游节点健康状况，显著减少调用延迟，提高系统吞吐量。 服务自动注册和发现：支持多种注册中心服务，服务实例上下线实时感知。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/7c4efd53/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Dubbo 面试之应用"}],["meta",{"property":"og:description","content":"Dubbo 面试之应用 简介 【简单】Dubbo 是什么？为什么使用 Dubbo？ Dubbo 是一款高性能、轻量级的开源 Java RPC 框架。 Dubbo 提供了三大核心能力： 面向接口的远程过程调用（RPC）：提供高性能的基于代理的远程调用能力，服务以接口为粒度，为开发者屏蔽远程调用底层细节。 智能容错和负载均衡：内置多种负载均衡策略，智能感知下游节点健康状况，显著减少调用延迟，提高系统吞吐量。 服务自动注册和发现：支持多种注册中心服务，服务实例上下线实时感知。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-29T15:30:35.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"分布式"}],["meta",{"property":"article:tag","content":"通信"}],["meta",{"property":"article:tag","content":"RPC"}],["meta",{"property":"article:tag","content":"微服务"}],["meta",{"property":"article:tag","content":"Dubbo"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:published_time","content":"2025-05-29T23:27:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-29T15:30:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dubbo 面试之应用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-29T23:27:50.000Z\\",\\"dateModified\\":\\"2025-05-29T15:30:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[{"level":3,"title":"【简单】Dubbo 是什么？为什么使用 Dubbo？","slug":"【简单】dubbo-是什么-为什么使用-dubbo","link":"#【简单】dubbo-是什么-为什么使用-dubbo","children":[]},{"level":3,"title":"【简单】Dubbo3 有什么新特性？","slug":"【简单】dubbo3-有什么新特性","link":"#【简单】dubbo3-有什么新特性","children":[]},{"level":3,"title":"【简单】Dubbo 的配置方式有哪些？","slug":"【简单】dubbo-的配置方式有哪些","link":"#【简单】dubbo-的配置方式有哪些","children":[]}]},{"level":2,"title":"应用","slug":"应用","link":"#应用","children":[{"level":3,"title":"【中等】Dubbo 中如何实现服务端与客户端的版本兼容？","slug":"【中等】dubbo-中如何实现服务端与客户端的版本兼容","link":"#【中等】dubbo-中如何实现服务端与客户端的版本兼容","children":[]},{"level":3,"title":"【中等】Dubbo 中的分组（Group）是如何使用的？","slug":"【中等】dubbo-中的分组-group-是如何使用的","link":"#【中等】dubbo-中的分组-group-是如何使用的","children":[]},{"level":3,"title":"【中等】Dubbo 中如何配置多协议、多注册中心？","slug":"【中等】dubbo-中如何配置多协议、多注册中心","link":"#【中等】dubbo-中如何配置多协议、多注册中心","children":[]},{"level":3,"title":"【中等】Dubbo 中如何配置多注册中心？","slug":"【中等】dubbo-中如何配置多注册中心","link":"#【中等】dubbo-中如何配置多注册中心","children":[]}]},{"level":2,"title":"故障排查","slug":"故障排查","link":"#故障排查","children":[{"level":3,"title":"【中等】Dubbo 的超时问题如何排查与调优？","slug":"【中等】dubbo-的超时问题如何排查与调优","link":"#【中等】dubbo-的超时问题如何排查与调优","children":[]},{"level":3,"title":"【中等】如何在 Dubbo 中优化网络通信性能？","slug":"【中等】如何在-dubbo-中优化网络通信性能","link":"#【中等】如何在-dubbo-中优化网络通信性能","children":[]},{"level":3,"title":"【中等】如何调试 Dubbo 的服务调用失败问题？","slug":"【中等】如何调试-dubbo-的服务调用失败问题","link":"#【中等】如何调试-dubbo-的服务调用失败问题","children":[]},{"level":3,"title":"【中等】Dubbo 的序列化异常如何解决？","slug":"【中等】dubbo-的序列化异常如何解决","link":"#【中等】dubbo-的序列化异常如何解决","children":[]},{"level":3,"title":"【中等】Dubbo 的服务无法发现，可能的原因有哪些？","slug":"【中等】dubbo-的服务无法发现-可能的原因有哪些","link":"#【中等】dubbo-的服务无法发现-可能的原因有哪些","children":[]},{"level":3,"title":"【中等】Dubbo 的服务上线后无法调用，可能的原因有哪些？","slug":"【中等】dubbo-的服务上线后无法调用-可能的原因有哪些","link":"#【中等】dubbo-的服务上线后无法调用-可能的原因有哪些","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1748532635000,"updatedTime":1748532635000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":16.35,"words":4906},"filePathRelative":"15.分布式/21.分布式通信/01.RPC/Dubbo_面试_应用.md","localizedDate":"2025年5月29日","excerpt":"<h1> Dubbo 面试之应用</h1>\\n<h2> 简介</h2>\\n<h3> 【简单】Dubbo 是什么？为什么使用 Dubbo？</h3>\\n<p><a href=\\"https://dubbo.apache.org/zh-cn/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Dubbo</a> 是一款高性能、轻量级的开源 Java RPC 框架。</p>\\n<p>Dubbo 提供了三大核心能力：</p>\\n<ul>\\n<li><strong>面向接口的远程过程调用（RPC）</strong>：提供高性能的基于代理的远程调用能力，服务以接口为粒度，为开发者屏蔽远程调用底层细节。</li>\\n<li><strong>智能容错和负载均衡</strong>：内置多种负载均衡策略，智能感知下游节点健康状况，显著减少调用延迟，提高系统吞吐量。</li>\\n<li><strong>服务自动注册和发现</strong>：支持多种注册中心服务，服务实例上下线实时感知。</li>\\n</ul>","autoDesc":true}');export{e as data};
