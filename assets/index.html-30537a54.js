const e=JSON.parse('{"key":"v-37285d6b","path":"/pages/9f57a068/","title":"流量控制","lang":"zh-CN","frontmatter":{"title":"流量控制","date":"2020-01-20T11:06:00.000Z","permalink":"/pages/9f57a068/","category":["分布式","分布式调度"],"tag":["分布式","服务治理","调度","流量控制","限流","熔断","降级"],"description":"流量控制 在高并发场景下，为了应对瞬时海量请求的压力，保障系统的平稳运行，必须预估系统的流量阈值，通过限流规则阻断处理不过来的请求。 流量控制简介 什么是流量控制 流量控制（Flow Control），根据流量、并发线程数、响应时间等指标，把随机到来的流量调整成合适的形状，即流量塑形。避免应用被瞬时的流量高峰冲垮，从而保障应用的高可用性。 为什么需要流量控制 复杂的分布式系统架构中的应用程序往往具有数十个依赖项，每个依赖项都会不可避免地在某个时刻失败。 如果主机应用程序未与这些外部故障隔离开来，则可能会被波及。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/9f57a068/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"流量控制"}],["meta",{"property":"og:description","content":"流量控制 在高并发场景下，为了应对瞬时海量请求的压力，保障系统的平稳运行，必须预估系统的流量阈值，通过限流规则阻断处理不过来的请求。 流量控制简介 什么是流量控制 流量控制（Flow Control），根据流量、并发线程数、响应时间等指标，把随机到来的流量调整成合适的形状，即流量塑形。避免应用被瞬时的流量高峰冲垮，从而保障应用的高可用性。 为什么需要流量控制 复杂的分布式系统架构中的应用程序往往具有数十个依赖项，每个依赖项都会不可避免地在某个时刻失败。 如果主机应用程序未与这些外部故障隔离开来，则可能会被波及。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-29T23:17:22.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"分布式"}],["meta",{"property":"article:tag","content":"服务治理"}],["meta",{"property":"article:tag","content":"调度"}],["meta",{"property":"article:tag","content":"流量控制"}],["meta",{"property":"article:tag","content":"限流"}],["meta",{"property":"article:tag","content":"熔断"}],["meta",{"property":"article:tag","content":"降级"}],["meta",{"property":"article:published_time","content":"2020-01-20T11:06:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-29T23:17:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"流量控制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-20T11:06:00.000Z\\",\\"dateModified\\":\\"2024-12-29T23:17:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"流量控制简介","slug":"流量控制简介","link":"#流量控制简介","children":[{"level":3,"title":"什么是流量控制","slug":"什么是流量控制","link":"#什么是流量控制","children":[]},{"level":3,"title":"为什么需要流量控制","slug":"为什么需要流量控制","link":"#为什么需要流量控制","children":[]},{"level":3,"title":"流量控制有哪些保护机制","slug":"流量控制有哪些保护机制","link":"#流量控制有哪些保护机制","children":[]},{"level":3,"title":"流量控制有哪些衡量指标","slug":"流量控制有哪些衡量指标","link":"#流量控制有哪些衡量指标","children":[]}]},{"level":2,"title":"限流算法","slug":"限流算法","link":"#限流算法","children":[{"level":3,"title":"固定窗口限流算法","slug":"固定窗口限流算法","link":"#固定窗口限流算法","children":[]},{"level":3,"title":"滑动窗口限流算法","slug":"滑动窗口限流算法","link":"#滑动窗口限流算法","children":[]},{"level":3,"title":"漏桶限流算法","slug":"漏桶限流算法","link":"#漏桶限流算法","children":[]},{"level":3,"title":"令牌桶限流算法","slug":"令牌桶限流算法","link":"#令牌桶限流算法","children":[]},{"level":3,"title":"限流算法测试","slug":"限流算法测试","link":"#限流算法测试","children":[]}]},{"level":2,"title":"限流框架 - Hystrix","slug":"限流框架-hystrix","link":"#限流框架-hystrix","children":[{"level":3,"title":"Hystrix 原理","slug":"hystrix-原理","link":"#hystrix-原理","children":[]},{"level":3,"title":"断路器工作原理","slug":"断路器工作原理","link":"#断路器工作原理","children":[]}]},{"level":2,"title":"限流框架 - Sentinel","slug":"限流框架-sentinel","link":"#限流框架-sentinel","children":[]},{"level":2,"title":"其他限流解决方案","slug":"其他限流解决方案","link":"#其他限流解决方案","children":[{"level":3,"title":"Guava RateLimiter","slug":"guava-ratelimiter","link":"#guava-ratelimiter","children":[]},{"level":3,"title":"Redis + Lua","slug":"redis-lua","link":"#redis-lua","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1734395124000,"updatedTime":1735514242000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":2}]},"readingTime":{"minutes":25.94,"words":7783},"filePathRelative":"15.分布式/12.分布式调度/流量控制.md","localizedDate":"2020年1月20日","excerpt":"<h1> 流量控制</h1>\\n<blockquote>\\n<p>在高并发场景下，为了应对瞬时海量请求的压力，保障系统的平稳运行，必须预估系统的流量阈值，通过限流规则阻断处理不过来的请求。</p>\\n</blockquote>\\n<h2> 流量控制简介</h2>\\n<h3> 什么是流量控制</h3>\\n<p>流量控制（Flow Control），根据流量、并发线程数、响应时间等指标，把随机到来的流量调整成合适的形状，即流量塑形。避免应用被瞬时的流量高峰冲垮，从而保障应用的高可用性。</p>\\n<h3> 为什么需要流量控制</h3>\\n<p>复杂的分布式系统架构中的应用程序往往具有数十个依赖项，每个依赖项都会不可避免地在某个时刻失败。 如果主机应用程序未与这些外部故障隔离开来，则可能会被波及。</p>","autoDesc":true}');export{e as data};
