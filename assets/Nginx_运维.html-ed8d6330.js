import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as l,c as o,a as e,b as n,d as s,e as i}from"./app-c4d395b2.js";const d={},c=i('<h1 id="nginx-运维" tabindex="-1"><a class="header-anchor" href="#nginx-运维" aria-hidden="true">#</a> Nginx 运维</h1><h2 id="普通安装" tabindex="-1"><a class="header-anchor" href="#普通安装" aria-hidden="true">#</a> 普通安装</h2><h3 id="windows-安装" tabindex="-1"><a class="header-anchor" href="#windows-安装" aria-hidden="true">#</a> Windows 安装</h3>',3),p={href:"https://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"},u=i(`<figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20180920181023092347.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>（2）解压到本地</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20180920181023092044.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>（3）启动</p><p>下面以 C 盘根目录为例说明下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> C:
<span class="token builtin class-name">cd</span> C:<span class="token punctuation">\\</span>nginx-0.8.54 start nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注：Nginx / Win32 是运行在一个控制台程序，而非 windows 服务方式的。服务器方式目前还是开发尝试中。</p></blockquote><h3 id="linux-安装" tabindex="-1"><a class="header-anchor" href="#linux-安装" aria-hidden="true">#</a> Linux 安装</h3><h4 id="rpm-包方式-推荐" tabindex="-1"><a class="header-anchor" href="#rpm-包方式-推荐" aria-hidden="true">#</a> rpm 包方式（推荐）</h4>`,9),h={href:"http://nginx.org/packages/",target:"_blank",rel:"noopener noreferrer"},g=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">wget</span> http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（2）安装 nginx rpm 包</p><p>nginx rpm 包实际上安装的是 nginx 的 yum 源。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> nginx-*.rpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（3）正式安装 rpm 包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ yum <span class="token function">install</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（4）关闭防火墙</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">80</span>/tcp <span class="token parameter variable">--permanent</span>
$ firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="源码编译方式" tabindex="-1"><a class="header-anchor" href="#源码编译方式" aria-hidden="true">#</a> 源码编译方式</h4><h5 id="安装编译工具及库" tabindex="-1"><a class="header-anchor" href="#安装编译工具及库" aria-hidden="true">#</a> 安装编译工具及库</h5><p>Nginx 源码的编译依赖于 gcc 以及一些库文件，所以必须提前安装。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ yum <span class="token parameter variable">-y</span> <span class="token function">install</span> <span class="token function">make</span> zlib zlib-devel gcc-c++ libtool  openssl openssl-devel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Nginx 依赖 pcre 库，安装步骤如下：</p><p>（1）下载解压到本地</p>`,14),m={href:"https://sourceforge.net/projects/pcre/files/pcre/",target:"_blank",rel:"noopener noreferrer"},b=i(`<p>我选择的是 8.35 版本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-O</span> /opt/pcre/pcre-8.35.tar.gz http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz
<span class="token builtin class-name">cd</span> /opt/pcre
<span class="token function">tar</span> zxvf pcre-8.35.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）编译安装</p><p>执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /opt/pcre/pcre-8.35
./configure
<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）检验是否安装成功</p><p>执行 <code>pcre-config --version</code> 命令。</p><h5 id="编译安装-nginx" tabindex="-1"><a class="header-anchor" href="#编译安装-nginx" aria-hidden="true">#</a> 编译安装 Nginx</h5><p>安装步骤如下：</p><p>（1）下载解压到本地</p>`,10),v={href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"},x={href:"http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz",target:"_blank",rel:"noopener noreferrer"},f=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-O</span> /opt/nginx/nginx-1.12.2.tar.gz http://nginx.org/download/nginx-1.12.2.tar.gz
<span class="token builtin class-name">cd</span> /opt/nginx
<span class="token function">tar</span> zxvf nginx-1.12.2.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）编译安装</p><p>执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /opt/nginx/nginx-1.12.2
./configure --with-http_stub_status_module --with-http_ssl_module --with-pcre<span class="token operator">=</span>/opt/pcre/pcre-8.35
<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）关闭防火墙</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">80</span>/tcp <span class="token parameter variable">--permanent</span>
$ firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>（4） 启动 Nginx</p><p>安装成功后，直接执行 <code>nginx</code> 命令即可启动 nginx。</p><p>启动后，访问站点：</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20180920181016133223.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h4 id="linux-开机自启动" tabindex="-1"><a class="header-anchor" href="#linux-开机自启动" aria-hidden="true">#</a> Linux 开机自启动</h4><p>Centos7 以上是用 Systemd 进行系统初始化的，Systemd 是 Linux 系统中最新的初始化系统（init），它主要的设计目标是克服 sysvinit 固有的缺点，提高系统的启动速度。Systemd 服务文件以 .service 结尾。</p><h5 id="rpm-包方式" tabindex="-1"><a class="header-anchor" href="#rpm-包方式" aria-hidden="true">#</a> rpm 包方式</h5><p>如果是通过 rpm 包安装的，会自动创建 nginx.service 文件。</p><p>直接用命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ systemctl <span class="token builtin class-name">enable</span> nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置开机启动即可。</p><h5 id="源码编译方式-1" tabindex="-1"><a class="header-anchor" href="#源码编译方式-1" aria-hidden="true">#</a> 源码编译方式</h5><p>如果采用源码编译方式，需要手动创建 nginx.service 文件。</p><h2 id="docker-安装" tabindex="-1"><a class="header-anchor" href="#docker-安装" aria-hidden="true">#</a> Docker 安装</h2>`,20),k={href:"https://hub.docker.com/_/nginx/",target:"_blank",rel:"noopener noreferrer"},_=i("<li>下载镜像：<code>docker pull nginx</code></li><li>启动容器：<code>docker run --name my-nginx -p 80:80 -v /data/docker/nginx/logs:/var/log/nginx -v /data/docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro -d nginx</code></li><li>重新加载配置（目前测试无效，只能重启服务）：<code>docker exec -it my-nginx nginx -s reload</code></li><li>停止服务：<code>docker exec -it my-nginx nginx -s stop</code> 或者：<code>docker stop my-nginx</code></li><li>重新启动服务：<code>docker restart my-nginx</code></li>",5),w=e("h2",{id:"脚本",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#脚本","aria-hidden":"true"},"#"),n(" 脚本")],-1),y={href:"https://github.com/dunwu/linux-tutorial/tree/master/codes/linux/soft",target:"_blank",rel:"noopener noreferrer"},z=i(`<p><strong>安装说明</strong></p><ul><li>采用编译方式安装 Nginx, 并将其注册为 systemd 服务</li><li>安装路径为：<code>/usr/local/nginx</code></li><li>默认下载安装 <code>1.16.0</code> 版本</li></ul><p><strong>使用方法</strong></p><ul><li>默认安装 - 执行以下任意命令即可：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> -o- https://gitee.com/turnon/linux-tutorial/raw/master/codes/linux/soft/nginx-install.sh <span class="token operator">|</span> <span class="token function">bash</span>
<span class="token function">wget</span> -qO- https://gitee.com/turnon/linux-tutorial/raw/master/codes/linux/soft/nginx-install.sh <span class="token operator">|</span> <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>自定义安装 - 下载脚本到本地，并按照以下格式执行：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> nginx-install.sh <span class="token punctuation">[</span>version<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,8),N={href:"http://www.dohooe.com/2016/03/03/352.html?utm_source=tuicool&utm_medium=referral",target:"_blank",rel:"noopener noreferrer"},$={href:"https://blog.51cto.com/kling/1253474",target:"_blank",rel:"noopener noreferrer"};function C(S,L){const a=t("ExternalLinkIcon");return l(),o("div",null,[c,e("p",null,[n("（1）进入"),e("a",p,[n("官方下载地址"),s(a)]),n("，选择合适版本（nginx/Windows-xxx）。")]),u,e("p",null,[n("（1）进入"),e("a",h,[n("下载页面"),s(a)]),n("，选择合适版本下载。")]),g,e("p",null,[n("进入"),e("a",m,[n("pcre 官网下载页面"),s(a)]),n("，选择合适的版本下载。")]),b,e("p",null,[n("进入官网下载地址："),e("a",v,[n("http://nginx.org/en/download.html"),s(a)]),n(" ，选择合适的版本下载。")]),e("p",null,[n("我选择的是 1.12.2 版本："),e("a",x,[n("http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz"),s(a)])]),f,e("ul",null,[e("li",null,[n("官网镜像："),e("a",k,[n("https://hub.docker.com/_/nginx/"),s(a)])]),_]),w,e("blockquote",null,[e("p",null,[n("CentOS7 环境安装脚本："),e("a",y,[n("软件运维配置脚本集合"),s(a)])])]),z,e("ul",null,[e("li",null,[e("a",N,[n("http://www.dohooe.com/2016/03/03/352.html?utm_source=tuicool&utm_medium=referral"),s(a)])]),e("li",null,[e("a",$,[n("nginx+keepalived实现nginx双主高可用的负载均衡"),s(a)])])])])}const O=r(d,[["render",C],["__file","Nginx_运维.html.vue"]]);export{O as default};
