const e=JSON.parse('{"key":"v-39af8a42","path":"/pages/cce634a8/","title":"设计模式之中介者模式","lang":"zh-CN","frontmatter":{"title":"设计模式之中介者模式","date":"2015-01-22T13:34:00.000Z","order":19,"permalink":"/pages/cce634a8/","category":["设计","设计模式"],"tag":["设计","设计模式"],"description":"设计模式之中介者模式 意图 中介者模式（Mediator） 是一种行为设计模式， 能让你减少对象之间混乱无序的依赖关系。 该模式会限制对象之间的直接交互， 迫使它们通过一个中介者对象进行合作。 适用场景 当一些对象和其他对象紧密耦合以致难以对其进行修改时， 可使用中介者模式。 当组件因过于依赖其他组件而无法在不同应用中复用时， 可使用中介者模式。 如果为了能在不同情景下复用一些基本行为， 导致你需要被迫创建大量组件子类时， 可使用中介者模式。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/cce634a8/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"设计模式之中介者模式"}],["meta",{"property":"og:description","content":"设计模式之中介者模式 意图 中介者模式（Mediator） 是一种行为设计模式， 能让你减少对象之间混乱无序的依赖关系。 该模式会限制对象之间的直接交互， 迫使它们通过一个中介者对象进行合作。 适用场景 当一些对象和其他对象紧密耦合以致难以对其进行修改时， 可使用中介者模式。 当组件因过于依赖其他组件而无法在不同应用中复用时， 可使用中介者模式。 如果为了能在不同情景下复用一些基本行为， 导致你需要被迫创建大量组件子类时， 可使用中介者模式。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-14T13:48:12.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"设计"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2015-01-22T13:34:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-14T13:48:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计模式之中介者模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2015-01-22T13:34:00.000Z\\",\\"dateModified\\":\\"2025-09-14T13:48:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"意图","slug":"意图","link":"#意图","children":[]},{"level":2,"title":"适用场景","slug":"适用场景","link":"#适用场景","children":[]},{"level":2,"title":"结构","slug":"结构","link":"#结构","children":[{"level":3,"title":"结构说明","slug":"结构说明","link":"#结构说明","children":[]},{"level":3,"title":"结构代码范式","slug":"结构代码范式","link":"#结构代码范式","children":[]}]},{"level":2,"title":"伪代码","slug":"伪代码","link":"#伪代码","children":[]},{"level":2,"title":"与其他模式的关系","slug":"与其他模式的关系","link":"#与其他模式的关系","children":[]},{"level":2,"title":"案例","slug":"案例","link":"#案例","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757857692000,"updatedTime":1757857692000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":7.83,"words":2348},"filePathRelative":"03.设计/设计模式/中介者模式.md","localizedDate":"2015年1月22日","excerpt":"<h1> 设计模式之中介者模式</h1>\\n<h2> 意图</h2>\\n<p><strong>中介者模式</strong>（Mediator） 是一种行为设计模式， 能让你减少对象之间混乱无序的依赖关系。 该模式会限制对象之间的直接交互， 迫使它们通过一个中介者对象进行合作。</p>\\n<h2> 适用场景</h2>\\n<ul>\\n<li>当一些对象和其他对象紧密耦合以致难以对其进行修改时， 可使用中介者模式。</li>\\n<li>当组件因过于依赖其他组件而无法在不同应用中复用时， 可使用中介者模式。</li>\\n<li>如果为了能在不同情景下复用一些基本行为， 导致你需要被迫创建大量组件子类时， 可使用中介者模式。</li>\\n</ul>","autoDesc":true}');export{e as data};
