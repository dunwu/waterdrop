const e=JSON.parse('{"key":"v-1f5dc84e","path":"/pages/33a6956b/","title":"深入理解 Java 方法","lang":"zh-CN","frontmatter":{"title":"深入理解 Java 方法","date":"2019-05-06T15:02:02.000Z","order":4,"permalink":"/pages/33a6956b/","category":["Java","JavaCore","基础特性"],"tag":["Java","JavaCore","方法"],"description":"深入理解 Java 方法 方法（有的人喜欢叫函数）是一段可重用的代码段。 方法的使用 方法定义 方法定义语法格式： [修饰符] 返回值类型 方法名([参数类型 参数名]){ ... 方法体 ... return 返回值; }","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/33a6956b/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"深入理解 Java 方法"}],["meta",{"property":"og:description","content":"深入理解 Java 方法 方法（有的人喜欢叫函数）是一段可重用的代码段。 方法的使用 方法定义 方法定义语法格式： [修饰符] 返回值类型 方法名([参数类型 参数名]){ ... 方法体 ... return 返回值; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-13T09:28:24.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JavaCore"}],["meta",{"property":"article:tag","content":"方法"}],["meta",{"property":"article:published_time","content":"2019-05-06T15:02:02.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-13T09:28:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深入理解 Java 方法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-05-06T15:02:02.000Z\\",\\"dateModified\\":\\"2025-09-13T09:28:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"方法的使用","slug":"方法的使用","link":"#方法的使用","children":[{"level":3,"title":"方法定义","slug":"方法定义","link":"#方法定义","children":[]},{"level":3,"title":"方法的调用","slug":"方法的调用","link":"#方法的调用","children":[]}]},{"level":2,"title":"方法参数","slug":"方法参数","link":"#方法参数","children":[]},{"level":2,"title":"方法修饰符","slug":"方法修饰符","link":"#方法修饰符","children":[{"level":3,"title":"访问控制修饰符","slug":"访问控制修饰符","link":"#访问控制修饰符","children":[]},{"level":3,"title":"static","slug":"static","link":"#static","children":[]},{"level":3,"title":"final","slug":"final","link":"#final","children":[]},{"level":3,"title":"default","slug":"default","link":"#default","children":[]},{"level":3,"title":"abstract","slug":"abstract","link":"#abstract","children":[]},{"level":3,"title":"synchronized","slug":"synchronized","link":"#synchronized","children":[]}]},{"level":2,"title":"特殊方法","slug":"特殊方法","link":"#特殊方法","children":[{"level":3,"title":"main 方法","slug":"main-方法","link":"#main-方法","children":[]},{"level":3,"title":"构造方法","slug":"构造方法","link":"#构造方法","children":[]},{"level":3,"title":"变参方法","slug":"变参方法","link":"#变参方法","children":[]},{"level":3,"title":"finalize() 方法","slug":"finalize-方法","link":"#finalize-方法","children":[]}]},{"level":2,"title":"覆写和重载","slug":"覆写和重载","link":"#覆写和重载","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1743948422000,"updatedTime":1757755704000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":2}]},"readingTime":{"minutes":10.22,"words":3065},"filePathRelative":"01.Java/01.JavaCore/01.基础特性/Java_方法.md","localizedDate":"2019年5月6日","excerpt":"<h1> 深入理解 Java 方法</h1>\\n<blockquote>\\n<p><strong>方法（有的人喜欢叫函数）是一段可重用的代码段。</strong></p>\\n</blockquote>\\n<h2> 方法的使用</h2>\\n<h3> 方法定义</h3>\\n<p>方法定义语法格式：</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>[修饰符] 返回值类型 方法名([参数类型 参数名]){\\n    ...\\n    方法体\\n    ...\\n    return 返回值;\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
