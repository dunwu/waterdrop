import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-1d030542.js";const i={},u=p(`<h1 id="thumbnailator-快速入门" tabindex="-1"><a class="header-anchor" href="#thumbnailator-快速入门" aria-hidden="true">#</a> Thumbnailator 快速入门</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p><code>Thumbnailator</code> 是一个开源的 <strong>Java</strong> 项目，它提供了非常简单的 API 来对图片进行缩放、旋转以及加水印的处理。</p><p>有多简单呢？简单到一行代码就可以完成图片处理。形式如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Thumbnails</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;path/to/directory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">640</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">outputFormat</span><span class="token punctuation">(</span><span class="token string">&quot;jpg&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">toFiles</span><span class="token punctuation">(</span><span class="token class-name">Rename</span><span class="token punctuation">.</span><span class="token constant">PREFIX_DOT_THUMBNAIL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然，Thumbnailator 还有一些使用细节，下面我会一一道来。</p><h2 id="核心-api" tabindex="-1"><a class="header-anchor" href="#核心-api" aria-hidden="true">#</a> 核心 API</h2><h3 id="thumbnails" tabindex="-1"><a class="header-anchor" href="#thumbnails" aria-hidden="true">#</a> Thumbnails</h3><p><code>Thumbnails</code> 是使用 Thumbnailator 创建缩略图的主入口。</p><p>它提供了一组初始化 <code>Thumbnails.Builder</code> 的接口。</p><p>先看下这组接口的声明：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 可变长度参数列表</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span>URL<span class="token punctuation">&gt;</span></span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> urls<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">InputStream</span><span class="token punctuation">&gt;</span></span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> inputStreams<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BufferedImage</span><span class="token punctuation">&gt;</span></span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">BufferedImage</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> images<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token comment">// 迭代器（所有实现 Iterable 接口的 Java 对象都可以，当然也包括 List、Set）</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">fromFilenames</span><span class="token punctuation">(</span><span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">fromFiles</span><span class="token punctuation">(</span><span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span>URL<span class="token punctuation">&gt;</span></span> <span class="token function">fromURLs</span><span class="token punctuation">(</span><span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span>URL<span class="token punctuation">&gt;</span></span> urls<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InputStream</span><span class="token punctuation">&gt;</span></span> <span class="token function">fromInputStreams</span><span class="token punctuation">(</span><span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">InputStream</span><span class="token punctuation">&gt;</span></span> inputStreams<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BufferedImage</span><span class="token punctuation">&gt;</span></span> <span class="token function">fromImages</span><span class="token punctuation">(</span><span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BufferedImage</span><span class="token punctuation">&gt;</span></span> images<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>很显然，<strong>Thumbnails 允许通过传入文件名、文件、网络图的 URL、图片流、图片缓存多种方式来初始化构造器</strong>。</p><p>因此，你可以根据实际需求来灵活的选择图片的输入方式。</p><p>需要注意一点：<strong>如果输入是多个对象（无论你是直接输入容器对象或使用可变参数方式传入多个对象），则输出也必须选用输出多个对象的方式，否则会报异常。</strong></p><h3 id="thumbnails-builder" tabindex="-1"><a class="header-anchor" href="#thumbnails-builder" aria-hidden="true">#</a> Thumbnails.Builder</h3><p><code>Thumbnails.Builder</code> 是 <code>Thumbnails</code> 的内部静态类。它用于设置生成缩略图任务的相关参数。</p><p><strong><em>注：<code>Thumbnails.Builder</code> 的构造函数是私有函数。所以，它只允许通过 <code>Thumbnails</code> 的实例化函数来进行初始化。</em></strong></p><h4 id="设置参数的函数" tabindex="-1"><a class="header-anchor" href="#设置参数的函数" aria-hidden="true">#</a> 设置参数的函数</h4><p><code>Thumbnails.Builder</code> 提供了一组函数链形式的接口来设置缩放图参数。</p><p>以设置大小函数为例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
 <span class="token function">updateStatus</span><span class="token punctuation">(</span><span class="token class-name">Properties</span><span class="token punctuation">.</span><span class="token constant">SIZE</span><span class="token punctuation">,</span> <span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">ALREADY_SET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token function">updateStatus</span><span class="token punctuation">(</span><span class="token class-name">Properties</span><span class="token punctuation">.</span><span class="token constant">SCALE</span><span class="token punctuation">,</span> <span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">CANNOT_SET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token function">validateDimensions</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>

 <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过返回 this 指针，使得设置参数函数可以以链式调用的方式来使用，形式如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Thumbnails</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;original.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">watermark</span><span class="token punctuation">(</span><span class="token class-name">Positions</span><span class="token punctuation">.</span><span class="token constant">BOTTOM_RIGHT</span><span class="token punctuation">,</span> <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;watermark.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.5f</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">outputQuality</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;image-with-watermark.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>好处，不言自明：那就是大大简化了代码。</p><h4 id="输出函数" tabindex="-1"><a class="header-anchor" href="#输出函数" aria-hidden="true">#</a> 输出函数</h4><p><code>Thumbnails.Builder</code> 提供了一组重载函数来输出生成的缩放图。</p><p>函数声明如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 返回图片缓存</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BufferedImage</span><span class="token punctuation">&gt;</span></span> <span class="token function">asBufferedImages</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token class-name">BufferedImage</span> <span class="token function">asBufferedImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token comment">// 返回文件列表</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">asFiles</span><span class="token punctuation">(</span><span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> iterable<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">asFiles</span><span class="token punctuation">(</span><span class="token class-name">Rename</span> rename<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> <span class="token function">asFiles</span><span class="token punctuation">(</span><span class="token class-name">File</span> destinationDir<span class="token punctuation">,</span> <span class="token class-name">Rename</span> rename<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token comment">// 创建文件</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">toFile</span><span class="token punctuation">(</span><span class="token class-name">File</span> outFile<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">toFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> outFilepath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">toFiles</span><span class="token punctuation">(</span><span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">File</span><span class="token punctuation">&gt;</span></span> iterable<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">toFiles</span><span class="token punctuation">(</span><span class="token class-name">Rename</span> rename<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">toFiles</span><span class="token punctuation">(</span><span class="token class-name">File</span> destinationDir<span class="token punctuation">,</span> <span class="token class-name">Rename</span> rename<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token comment">// 创建输出流</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">toOutputStream</span><span class="token punctuation">(</span><span class="token class-name">OutputStream</span> os<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">toOutputStreams</span><span class="token punctuation">(</span><span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">OutputStream</span><span class="token punctuation">&gt;</span></span> iterable<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="工作流" tabindex="-1"><a class="header-anchor" href="#工作流" aria-hidden="true">#</a> 工作流</h3><p>Thumbnailator 的工作步骤十分简单，可分为三步：</p><ol><li><p><strong>输入</strong>：<code>Thumbnails</code> 根据输入初始化构造器—— <code>Thumbnails.Builder</code> 。</p></li><li><p><strong>设置</strong>：<code>Thumbnails.Builder</code> 设置缩放图片的参数。</p></li><li><p><strong>输出</strong>：<code>Thumbnails.Builder</code> 输出图片文件或图片流。</p></li></ol>`,32),k={href:"https://coobird.github.io/thumbnailator/javadoc/0.4.8/",target:"_blank",rel:"noopener noreferrer"},r=n("u",null,"Thumbnailator 官网 javadoc",-1),d=p(`<h2 id="实战" tabindex="-1"><a class="header-anchor" href="#实战" aria-hidden="true">#</a> 实战</h2><p>前文介绍了 Thumbnailator 的核心 API，接下来我们就可以通过实战来看看 Thumbnailator 究竟可以做些什么。</p><p>Thumbnailator 生成什么样的图片，是根据设置参数来决定的。</p><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><p>maven 项目中引入依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>net.coobird<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>thumbnailator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>[0.4, 0.5)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="图片缩放" tabindex="-1"><a class="header-anchor" href="#图片缩放" aria-hidden="true">#</a> 图片缩放</h3><p><code>Thumbnails.Builder</code> 的 <code>size</code> 函数可以设置新图片精确的宽度和高度，也可以用 <code>scale</code> 函数设置缩放比例。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Thumbnails</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;oldFile.png&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span><span class="token string">&quot;newFile_16_16.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Thumbnails</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;oldFile.png&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span><span class="token string">&quot;newFile_scale_2.0.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Thumbnails</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;oldFile.png&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span><span class="token string">&quot;newFile_scale_1.0_0.5.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>oldFile.png</strong></p><figure><img src="http://upload-images.jianshu.io/upload_images/3101171-ba63439898602e8f.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p><strong>newFile_scale_1.0_0.5.png</strong></p><figure><img src="http://upload-images.jianshu.io/upload_images/3101171-a01ea4515fff865d.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="图片旋转" tabindex="-1"><a class="header-anchor" href="#图片旋转" aria-hidden="true">#</a> 图片旋转</h3><p><code>Thumbnails.Builder</code> 的 <code>size</code> 函数可以设置新图片的旋转角度。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Thumbnails</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;oldFile.png&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span><span class="token string">&quot;newFile_rotate_90.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Thumbnails</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;oldFile.png&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span><span class="token string">&quot;newFile_rotate_180.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>newFile_rotate_90.png</strong></p><figure><img src="http://upload-images.jianshu.io/upload_images/3101171-17d54bc33b38d45b.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="加水印" tabindex="-1"><a class="header-anchor" href="#加水印" aria-hidden="true">#</a> 加水印</h3><p><code>Thumbnails.Builder</code> 的 <code>watermark</code> 函数可以为图片添加水印图片。第一个参数是水印的位置；第二个参数是水印图片的缓存数据；第三个参数是透明度。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BufferedImage</span> watermarkImage <span class="token operator">=</span> <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;wartermarkFile.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Thumbnails</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;oldFile.png&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">watermark</span><span class="token punctuation">(</span><span class="token class-name">Positions</span><span class="token punctuation">.</span><span class="token constant">BOTTOM_LEFT</span><span class="token punctuation">,</span> watermarkImage<span class="token punctuation">,</span> <span class="token number">0.5f</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span><span class="token string">&quot;newFile_watermark.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>wartermarkFile.png</strong></p><figure><img src="http://upload-images.jianshu.io/upload_images/3101171-97909ee6c066c195.png?imageMogr2/auto-orient/strip" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p><strong>newFile_watermark.png</strong></p><figure><img src="http://upload-images.jianshu.io/upload_images/3101171-93eb7ef71b811a0c.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="批量处理图片" tabindex="-1"><a class="header-anchor" href="#批量处理图片" aria-hidden="true">#</a> 批量处理图片</h3><p>下面以批量给图片加水印来展示一下如何处理多个图片文件。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BufferedImage</span> watermarkImage <span class="token operator">=</span> <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;wartermarkFile.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">File</span> destinationDir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\\\watermark\\\\&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Thumbnails</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;oldFile.png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;oldFile2.png&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">watermark</span><span class="token punctuation">(</span><span class="token class-name">Positions</span><span class="token punctuation">.</span><span class="token constant">BOTTOM_LEFT</span><span class="token punctuation">,</span> watermarkImage<span class="token punctuation">,</span> <span class="token number">0.5f</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">toFiles</span><span class="token punctuation">(</span>destinationDir<span class="token punctuation">,</span> <span class="token class-name">Rename</span><span class="token punctuation">.</span><span class="token constant">PREFIX_DOT_THUMBNAIL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),m=n("strong",null,"需要参考完整测试例代码请",-1),g={href:"https://github.com/dunwu/JavaParty/blob/master/toolbox/image/src/test/java/org/zp/image/ThumbnailatorTest.java",target:"_blank",rel:"noopener noreferrer"},v=n("u",null,[n("strong",null,"点击这里")],-1),b=n("h2",{id:"参考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),s(" 参考")],-1),h={href:"https://github.com/coobird/thumbnailator/wiki/Examples",target:"_blank",rel:"noopener noreferrer"};function f(w,y){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("blockquote",null,[n("p",null,[s("更多详情可以参考： "),n("a",k,[r,t(a)])])]),d,n("blockquote",null,[n("p",null,[m,s(),n("a",g,[v,t(a)])])]),b,n("p",null,[n("a",h,[s("Thumbnailator 官方示例文档"),t(a)])])])}const I=e(i,[["render",f],["__file","index.html.vue"]]);export{I as default};
