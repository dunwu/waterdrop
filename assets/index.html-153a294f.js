const t=JSON.parse('{"key":"v-0efb7638","path":"/pages/4a43f580/","title":"如何优雅的玩转 Git","lang":"zh-CN","frontmatter":{"icon":"logos:git-icon","title":"如何优雅的玩转 Git","date":"2019-03-09T00:25:13.000Z","order":1,"permalink":"/pages/4a43f580/","category":["DevOps","工具","Git"],"tag":["DevOps","Git"],"description":"如何优雅的玩转 Git Git 简介 Git 是什么 Git 是一个开源的分布式版本控制系统。 Git 和其它版本控制系统（包括 Subversion 和近似工具）的主要差别在于 Git 对待数据的方式。 从概念上来说，其它大部分系统以文件变更列表的方式存储信息，而 Git 是把数据看作是对小型文件系统的一系列快照。 什么是版本控制 版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。 集中化的版本控制系统 介绍分布式版本控制系统前，有必要先了解一下传统的集中式版本控制系统。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/4a43f580/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"如何优雅的玩转 Git"}],["meta",{"property":"og:description","content":"如何优雅的玩转 Git Git 简介 Git 是什么 Git 是一个开源的分布式版本控制系统。 Git 和其它版本控制系统（包括 Subversion 和近似工具）的主要差别在于 Git 对待数据的方式。 从概念上来说，其它大部分系统以文件变更列表的方式存储信息，而 Git 是把数据看作是对小型文件系统的一系列快照。 什么是版本控制 版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。 集中化的版本控制系统 介绍分布式版本控制系统前，有必要先了解一下传统的集中式版本控制系统。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-24T23:52:19.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"DevOps"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:published_time","content":"2019-03-09T00:25:13.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-24T23:52:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何优雅的玩转 Git\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-09T00:25:13.000Z\\",\\"dateModified\\":\\"2025-09-24T23:52:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"Git 简介","slug":"git-简介","link":"#git-简介","children":[{"level":3,"title":"Git 是什么","slug":"git-是什么","link":"#git-是什么","children":[]},{"level":3,"title":"什么是版本控制","slug":"什么是版本控制","link":"#什么是版本控制","children":[]},{"level":3,"title":"为什么使用 Git","slug":"为什么使用-git","link":"#为什么使用-git","children":[]},{"level":3,"title":"Git 的工作原理","slug":"git-的工作原理","link":"#git-的工作原理","children":[]}]},{"level":2,"title":"分支管理","slug":"分支管理","link":"#分支管理","children":[{"level":3,"title":"Git Flow","slug":"git-flow","link":"#git-flow","children":[]},{"level":3,"title":"Github Flow","slug":"github-flow","link":"#github-flow","children":[]}]},{"level":2,"title":"Git Commit 规范","slug":"git-commit-规范","link":"#git-commit-规范","children":[{"level":3,"title":"Commit message 的作用","slug":"commit-message-的作用","link":"#commit-message-的作用","children":[]},{"level":3,"title":"Commit message 的规范","slug":"commit-message-的规范","link":"#commit-message-的规范","children":[]},{"level":3,"title":"Git Commit Template","slug":"git-commit-template","link":"#git-commit-template","children":[]},{"level":3,"title":"生成 Change log","slug":"生成-change-log","link":"#生成-change-log","children":[]}]},{"level":2,"title":"Git 奇技淫巧","slug":"git-奇技淫巧","link":"#git-奇技淫巧","children":[{"level":3,"title":"生成 SSH 公钥","slug":"生成-ssh-公钥","link":"#生成-ssh-公钥","children":[]},{"level":3,"title":"使用 .gitignore 忽略不必提交内容","slug":"使用-gitignore-忽略不必提交内容","link":"#使用-gitignore-忽略不必提交内容","children":[]},{"level":3,"title":"使用 .gitattributes 解决 LF 和 CRLF 问题","slug":"使用-gitattributes-解决-lf-和-crlf-问题","link":"#使用-gitattributes-解决-lf-和-crlf-问题","children":[]},{"level":3,"title":"同时提交代码到不同的远程仓库","slug":"同时提交代码到不同的远程仓库","link":"#同时提交代码到不同的远程仓库","children":[]},{"level":3,"title":"Github Issue 和 Gitlab Issue","slug":"github-issue-和-gitlab-issue","link":"#github-issue-和-gitlab-issue","children":[]},{"level":3,"title":"Git Hook","slug":"git-hook","link":"#git-hook","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757896161000,"updatedTime":1758757939000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":2}]},"readingTime":{"minutes":22.99,"words":6896},"filePathRelative":"04.DevOps/工具/Git/如何优雅的玩转Git.md","localizedDate":"2019年3月9日","excerpt":"<h1> 如何优雅的玩转 Git</h1>\\n<h2> Git 简介</h2>\\n<h3> Git 是什么</h3>\\n<p>Git 是一个开源的分布式版本控制系统。</p>\\n<p>Git 和其它版本控制系统（包括 Subversion 和近似工具）的主要差别在于 Git 对待数据的方式。 从概念上来说，其它大部分系统以文件变更列表的方式存储信息，而 Git 是把数据看作是对小型文件系统的一系列快照。</p>\\n<h3> 什么是版本控制</h3>\\n<p>版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。</p>\\n<h4> 集中化的版本控制系统</h4>\\n<p>介绍分布式版本控制系统前，有必要先了解一下传统的集中式版本控制系统。</p>","autoDesc":true}');export{t as data};
