const l=JSON.parse('{"key":"v-5c12828c","path":"/pages/66cfdbd4/","title":"Java QA","lang":"zh-CN","frontmatter":{"title":"Java QA","date":"2025-09-13T23:04:28.000Z","permalink":"/pages/66cfdbd4/","category":["面试"],"tag":["QA","Java"],"description":"JVM 什么是字节码？采用字节码的最大好处是什么？ 字节码是可以在任何 JVM 平台上执行的，无关环境的中间代码。 采用字节码最大的好处是，Write Once, Running Anywhere 在什么情况下 Java 类会被加载？ new 一个对象 访问某个类或接口的静态变量、静态方法 子类被初始化时，会先初始化父类 反射（Class.forName(\\"xxx.Class\\")） JVM 的哪些内存区域可能会导致 OutOfMemoryError？","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/66cfdbd4/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Java QA"}],["meta",{"property":"og:description","content":"JVM 什么是字节码？采用字节码的最大好处是什么？ 字节码是可以在任何 JVM 平台上执行的，无关环境的中间代码。 采用字节码最大的好处是，Write Once, Running Anywhere 在什么情况下 Java 类会被加载？ new 一个对象 访问某个类或接口的静态变量、静态方法 子类被初始化时，会先初始化父类 反射（Class.forName(\\"xxx.Class\\")） JVM 的哪些内存区域可能会导致 OutOfMemoryError？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-13T15:15:47.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"QA"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2025-09-13T23:04:28.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-13T15:15:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java QA\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-09-13T23:04:28.000Z\\",\\"dateModified\\":\\"2025-09-13T15:15:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"JVM","slug":"jvm","link":"#jvm","children":[{"level":3,"title":"什么是字节码？采用字节码的最大好处是什么？","slug":"什么是字节码-采用字节码的最大好处是什么","link":"#什么是字节码-采用字节码的最大好处是什么","children":[]},{"level":3,"title":"在什么情况下 Java 类会被加载？","slug":"在什么情况下-java-类会被加载","link":"#在什么情况下-java-类会被加载","children":[]},{"level":3,"title":"JVM 的哪些内存区域可能会导致 OutOfMemoryError？","slug":"jvm-的哪些内存区域可能会导致-outofmemoryerror","link":"#jvm-的哪些内存区域可能会导致-outofmemoryerror","children":[]},{"level":3,"title":"Java 中的内存泄漏通常发生在哪些场景？","slug":"java-中的内存泄漏通常发生在哪些场景","link":"#java-中的内存泄漏通常发生在哪些场景","children":[]},{"level":3,"title":"请你介绍下 JVM 内存模型，分为哪些区域？各区域的作用是什么？","slug":"请你介绍下-jvm-内存模型-分为哪些区域-各区域的作用是什么","link":"#请你介绍下-jvm-内存模型-分为哪些区域-各区域的作用是什么","children":[]},{"level":3,"title":"常见的垃圾回收算法有几种类型？他们对应的优缺点是什么？","slug":"常见的垃圾回收算法有几种类型-他们对应的优缺点是什么","link":"#常见的垃圾回收算法有几种类型-他们对应的优缺点是什么","children":[]}]},{"level":2,"title":"Java 基础","slug":"java-基础","link":"#java-基础","children":[{"level":3,"title":"JDK 和 JRE 和 JVM 分别是什么，有什么区别？","slug":"jdk-和-jre-和-jvm-分别是什么-有什么区别","link":"#jdk-和-jre-和-jvm-分别是什么-有什么区别","children":[]},{"level":3,"title":"Java 和 C++、Go 语言的区别，各自的优缺点？","slug":"java-和-c-、go-语言的区别-各自的优缺点","link":"#java-和-c-、go-语言的区别-各自的优缺点","children":[]},{"level":3,"title":"Java 中 final 关键字有什么用？","slug":"java-中-final-关键字有什么用","link":"#java-中-final-关键字有什么用","children":[]},{"level":3,"title":"Java 中 hashCode 和 equals 方法是什么？它们与 == 操作符有什么区别？","slug":"java-中-hashcode-和-equals-方法是什么-它们与-操作符有什么区别","link":"#java-中-hashcode-和-equals-方法是什么-它们与-操作符有什么区别","children":[]},{"level":3,"title":"什么是反射机制？说说反射机制的优缺点、应用场景？","slug":"什么是反射机制-说说反射机制的优缺点、应用场景","link":"#什么是反射机制-说说反射机制的优缺点、应用场景","children":[]},{"level":3,"title":"String 和 StringBuffer、StringBuilder 的区别是什么？","slug":"string-和-stringbuffer、stringbuilder-的区别是什么","link":"#string-和-stringbuffer、stringbuilder-的区别是什么","children":[]},{"level":3,"title":"为什么 Java 中的 String 类被设计为 final？","slug":"为什么-java-中的-string-类被设计为-final","link":"#为什么-java-中的-string-类被设计为-final","children":[]},{"level":3,"title":"Java 中的值传递是什么意思？","slug":"java-中的值传递是什么意思","link":"#java-中的值传递是什么意思","children":[]},{"level":3,"title":"什么是 Java 的反射机制？","slug":"什么是-java-的反射机制","link":"#什么是-java-的反射机制","children":[]},{"level":3,"title":"什么是 Java 的语法糖？如何提高开发效率？","slug":"什么是-java-的语法糖-如何提高开发效率","link":"#什么是-java-的语法糖-如何提高开发效率","children":[]},{"level":3,"title":"Java 动态代理的原理是什么？","slug":"java-动态代理的原理是什么","link":"#java-动态代理的原理是什么","children":[]},{"level":3,"title":"你是否了解过新版本的 Java 特性？对 Java 未来的发展有什么看法？","slug":"你是否了解过新版本的-java-特性-对-java-未来的发展有什么看法","link":"#你是否了解过新版本的-java-特性-对-java-未来的发展有什么看法","children":[]},{"level":3,"title":"什么是 BIO、NIO、AIO？","slug":"什么是-bio、nio、aio","link":"#什么是-bio、nio、aio","children":[]}]},{"level":2,"title":"Java 面向对象","slug":"java-面向对象","link":"#java-面向对象","children":[{"level":3,"title":"Java 访问修饰符 public、private、protected，以及无修饰符（默认）的区别","slug":"java-访问修饰符-public、private、protected-以及无修饰符-默认-的区别","link":"#java-访问修饰符-public、private、protected-以及无修饰符-默认-的区别","children":[]},{"level":3,"title":"什么是 Java 内部类？ 内部类的分类有哪些 ？内部类有哪些优点和应用场景？","slug":"什么是-java-内部类-内部类的分类有哪些-内部类有哪些优点和应用场景","link":"#什么是-java-内部类-内部类的分类有哪些-内部类有哪些优点和应用场景","children":[]},{"level":3,"title":"Java 中的多态性是什么？如何理解？","slug":"java-中的多态性是什么-如何理解","link":"#java-中的多态性是什么-如何理解","children":[]}]},{"level":2,"title":"Java 并发","slug":"java-并发","link":"#java-并发","children":[{"level":3,"title":"synchronized 关键字是什么，有什么作用？","slug":"synchronized-关键字是什么-有什么作用","link":"#synchronized-关键字是什么-有什么作用","children":[]},{"level":3,"title":"Java 中的乐观锁与悲观锁的区别和应用场景是什么？","slug":"java-中的乐观锁与悲观锁的区别和应用场景是什么","link":"#java-中的乐观锁与悲观锁的区别和应用场景是什么","children":[]},{"level":3,"title":"什么是 Java 的线程池？如何提高并发性能？","slug":"什么是-java-的线程池-如何提高并发性能","link":"#什么是-java-的线程池-如何提高并发性能","children":[]},{"level":3,"title":"什么是 Java 的 Hashtable、HashMap 和 TreeMap？它们有什么区别？","slug":"什么是-java-的-hashtable、hashmap-和-treemap-它们有什么区别","link":"#什么是-java-的-hashtable、hashmap-和-treemap-它们有什么区别","children":[]},{"level":3,"title":"你真的理解 AQS 原理了吗？","slug":"你真的理解-aqs-原理了吗","link":"#你真的理解-aqs-原理了吗","children":[]},{"level":3,"title":"如何使用 Java 的 CompletableFuture 实现异步编排？","slug":"如何使用-java-的-completablefuture-实现异步编排","link":"#如何使用-java-的-completablefuture-实现异步编排","children":[]},{"level":3,"title":"Java 中 synchronized 的底层实现和锁的升降级机制是什么？","slug":"java-中-synchronized-的底层实现和锁的升降级机制是什么","link":"#java-中-synchronized-的底层实现和锁的升降级机制是什么","children":[]},{"level":3,"title":"Java 中 AtomicInteger 的实现原理是什么？如何使用 CAS？","slug":"java-中-atomicinteger-的实现原理是什么-如何使用-cas","link":"#java-中-atomicinteger-的实现原理是什么-如何使用-cas","children":[]},{"level":3,"title":"你了解哪些网关技术？请详细说明。","slug":"你了解哪些网关技术-请详细说明。","link":"#你了解哪些网关技术-请详细说明。","children":[]}]},{"level":2,"title":"MySQL","slug":"mysql","link":"#mysql","children":[{"level":3,"title":"什么是 MySQL 回表？","slug":"什么是-mysql-回表","link":"#什么是-mysql-回表","children":[]},{"level":3,"title":"什么样的字段适合加索引？索引失效了解吗？","slug":"什么样的字段适合加索引-索引失效了解吗","link":"#什么样的字段适合加索引-索引失效了解吗","children":[]},{"level":3,"title":"什么是数据库事务？讲一下事务的 ACID 特性？","slug":"什么是数据库事务-讲一下事务的-acid-特性","link":"#什么是数据库事务-讲一下事务的-acid-特性","children":[]},{"level":3,"title":"MySQL 中的日志类型有哪些？binlog、redo log 和 undo log 的作用和区别是什么？","slug":"mysql-中的日志类型有哪些-binlog、redo-log-和-undo-log-的作用和区别是什么","link":"#mysql-中的日志类型有哪些-binlog、redo-log-和-undo-log-的作用和区别是什么","children":[]},{"level":3,"title":"什么是数据库的索引？索引的作用是什么？索引适用于哪些场景？","slug":"什么是数据库的索引-索引的作用是什么-索引适用于哪些场景","link":"#什么是数据库的索引-索引的作用是什么-索引适用于哪些场景","children":[]},{"level":3,"title":"如何在 MySQL 中进行数据备份？如何恢复半个月前的数据？","slug":"如何在-mysql-中进行数据备份-如何恢复半个月前的数据","link":"#如何在-mysql-中进行数据备份-如何恢复半个月前的数据","children":[]},{"level":3,"title":"MySQL 事务的隔离级别有哪些？每个隔离级别的特点是什么？MySQL 默认的隔离级别是什么？","slug":"mysql-事务的隔离级别有哪些-每个隔离级别的特点是什么-mysql-默认的隔离级别是什么","link":"#mysql-事务的隔离级别有哪些-每个隔离级别的特点是什么-mysql-默认的隔离级别是什么","children":[]},{"level":3,"title":"MySQL 中的意向锁是什么？作用是什么？它是表级锁还是行级锁？","slug":"mysql-中的意向锁是什么-作用是什么-它是表级锁还是行级锁","link":"#mysql-中的意向锁是什么-作用是什么-它是表级锁还是行级锁","children":[]},{"level":3,"title":"MySQL 中的覆盖索引和联合索引是什么？索引的最左前缀匹配原则是什么？","slug":"mysql-中的覆盖索引和联合索引是什么-索引的最左前缀匹配原则是什么","link":"#mysql-中的覆盖索引和联合索引是什么-索引的最左前缀匹配原则是什么","children":[]},{"level":3,"title":"什么是 MySQL 的执行计划？如何获取执行计划并对其进行分析？","slug":"什么是-mysql-的执行计划-如何获取执行计划并对其进行分析","link":"#什么是-mysql-的执行计划-如何获取执行计划并对其进行分析","children":[]},{"level":3,"title":"MySQL 支持哪些存储引擎？默认使用哪个？MyISAM 和 InnoDB 引擎有什么区别，如何选择？","slug":"mysql-支持哪些存储引擎-默认使用哪个-myisam-和-innodb-引擎有什么区别-如何选择","link":"#mysql-支持哪些存储引擎-默认使用哪个-myisam-和-innodb-引擎有什么区别-如何选择","children":[]}]},{"level":2,"title":"Redis","slug":"redis","link":"#redis","children":[{"level":3,"title":"Redis 中的三种高效缓存读写策略是什么？","slug":"redis-中的三种高效缓存读写策略是什么","link":"#redis-中的三种高效缓存读写策略是什么","children":[]},{"level":3,"title":"Redis 的五种基本数据类型及其优化技巧是什么？","slug":"redis-的五种基本数据类型及其优化技巧是什么","link":"#redis-的五种基本数据类型及其优化技巧是什么","children":[]},{"level":3,"title":"Redis 中的跳表是什么？你了解多少？","slug":"redis-中的跳表是什么-你了解多少","link":"#redis-中的跳表是什么-你了解多少","children":[]},{"level":3,"title":"Redis 是什么？Redis 的特点和常见应用场景有哪些？","slug":"redis-是什么-redis-的特点和常见应用场景有哪些","link":"#redis-是什么-redis-的特点和常见应用场景有哪些","children":[]},{"level":3,"title":"Redis 的单线程模型是什么？IO 多路复用是什么？","slug":"redis-的单线程模型是什么-io-多路复用是什么","link":"#redis-的单线程模型是什么-io-多路复用是什么","children":[]},{"level":3,"title":"Redis 基础类型中的 String 底层实现是什么？","slug":"redis-基础类型中的-string-底层实现是什么","link":"#redis-基础类型中的-string-底层实现是什么","children":[]},{"level":3,"title":"如何使用 Redis 实现一个排行榜？","slug":"如何使用-redis-实现一个排行榜","link":"#如何使用-redis-实现一个排行榜","children":[]},{"level":3,"title":"Redis 的持久化机制有哪些？它们的优缺点和应用场景是什么？","slug":"redis-的持久化机制有哪些-它们的优缺点和应用场景是什么","link":"#redis-的持久化机制有哪些-它们的优缺点和应用场景是什么","children":[]},{"level":3,"title":"如何用 Redis 实现分布式 Session？","slug":"如何用-redis-实现分布式-session","link":"#如何用-redis-实现分布式-session","children":[]},{"level":3,"title":"Redis 的内存淘汰机制是什么？有哪些内存淘汰策略？","slug":"redis-的内存淘汰机制是什么-有哪些内存淘汰策略","link":"#redis-的内存淘汰机制是什么-有哪些内存淘汰策略","children":[]},{"level":3,"title":"Redis 中有哪些数据类型？基础数据结构有几种？有哪些高级数据结构？","slug":"redis-中有哪些数据类型-基础数据结构有几种-有哪些高级数据结构","link":"#redis-中有哪些数据类型-基础数据结构有几种-有哪些高级数据结构","children":[]},{"level":3,"title":"如何使用 Redis 实现分布式锁？","slug":"如何使用-redis-实现分布式锁","link":"#如何使用-redis-实现分布式锁","children":[]},{"level":3,"title":"如何使用 Redis 的 HyperLogLog 统计页面 UV？","slug":"如何使用-redis-的-hyperloglog-统计页面-uv","link":"#如何使用-redis-的-hyperloglog-统计页面-uv","children":[]}]},{"level":2,"title":"Java 框架 - Spring","slug":"java-框架-spring","link":"#java-框架-spring","children":[{"level":3,"title":"什么是 Spring 的 IOC 和 AOP？","slug":"什么是-spring-的-ioc-和-aop","link":"#什么是-spring-的-ioc-和-aop","children":[]},{"level":3,"title":"什么是 Spring 的事务管理？","slug":"什么是-spring-的事务管理","link":"#什么是-spring-的事务管理","children":[]},{"level":3,"title":"Spring 框架是什么？使用 Spring 框架有哪些好处？","slug":"spring-框架是什么-使用-spring-框架有哪些好处","link":"#spring-框架是什么-使用-spring-框架有哪些好处","children":[]},{"level":3,"title":"Spring 的两大核心概念是什么？简单讲一下你对它们的理解","slug":"spring-的两大核心概念是什么-简单讲一下你对它们的理解","link":"#spring-的两大核心概念是什么-简单讲一下你对它们的理解","children":[]},{"level":3,"title":"什么是 IOC，简单讲一下 Spring IOC 的实现机制？","slug":"什么是-ioc-简单讲一下-spring-ioc-的实现机制","link":"#什么是-ioc-简单讲一下-spring-ioc-的实现机制","children":[]},{"level":3,"title":"什么是 Spring 的依赖注入，依赖注入的基本原则以及好处？","slug":"什么是-spring-的依赖注入-依赖注入的基本原则以及好处","link":"#什么是-spring-的依赖注入-依赖注入的基本原则以及好处","children":[]},{"level":3,"title":"什么是 AOP？有哪些实现 AOP 的方式？Spring AOP 和 AspectJ AOP 有什么区别？","slug":"什么是-aop-有哪些实现-aop-的方式-spring-aop-和-aspectj-aop-有什么区别","link":"#什么是-aop-有哪些实现-aop-的方式-spring-aop-和-aspectj-aop-有什么区别","children":[]},{"level":3,"title":"Spring 框架中都用到了哪些设计模式？","slug":"spring-框架中都用到了哪些设计模式","link":"#spring-框架中都用到了哪些设计模式","children":[]},{"level":3,"title":"Spring、SpringMVC、SpringBoot 三者之间是什么关系？","slug":"spring、springmvc、springboot-三者之间是什么关系","link":"#spring、springmvc、springboot-三者之间是什么关系","children":[]},{"level":3,"title":"有哪些注解可以注入 Bean？@Autowired 和 @Resource 的区别？","slug":"有哪些注解可以注入-bean-autowired-和-resource-的区别","link":"#有哪些注解可以注入-bean-autowired-和-resource-的区别","children":[]},{"level":3,"title":"Spring 中的 BeanFactory 和 ApplicationContext 有什么区别和联系？","slug":"spring-中的-beanfactory-和-applicationcontext-有什么区别和联系","link":"#spring-中的-beanfactory-和-applicationcontext-有什么区别和联系","children":[]},{"level":3,"title":"讲一讲 Spring 框架中 Bean 的生命周期？","slug":"讲一讲-spring-框架中-bean-的生命周期","link":"#讲一讲-spring-框架中-bean-的生命周期","children":[]},{"level":3,"title":"Spring 支持哪几种事务管理类型，Spring 的事务实现方式和实现原理是？","slug":"spring-支持哪几种事务管理类型-spring-的事务实现方式和实现原理是","link":"#spring-支持哪几种事务管理类型-spring-的事务实现方式和实现原理是","children":[]}]},{"level":2,"title":"操作系统","slug":"操作系统","link":"#操作系统","children":[{"level":3,"title":"什么是进程和线程？它们有哪些区别和联系？","slug":"什么是进程和线程-它们有哪些区别和联系","link":"#什么是进程和线程-它们有哪些区别和联系","children":[]},{"level":3,"title":"死锁是什么？如何预防和避免死锁？","slug":"死锁是什么-如何预防和避免死锁","link":"#死锁是什么-如何预防和避免死锁","children":[]},{"level":3,"title":"线程间有哪些通信方式？","slug":"线程间有哪些通信方式","link":"#线程间有哪些通信方式","children":[]},{"level":3,"title":"什么是零拷贝？说一说你对零拷贝的理解？","slug":"什么是零拷贝-说一说你对零拷贝的理解","link":"#什么是零拷贝-说一说你对零拷贝的理解","children":[]},{"level":3,"title":"并发和并行有什么区别？同步和异步有什么区别？","slug":"并发和并行有什么区别-同步和异步有什么区别","link":"#并发和并行有什么区别-同步和异步有什么区别","children":[]}]},{"level":2,"title":"分布式","slug":"分布式","link":"#分布式","children":[{"level":3,"title":"什么是分布式？为什么需要分布式？","slug":"什么是分布式-为什么需要分布式","link":"#什么是分布式-为什么需要分布式","children":[]},{"level":3,"title":"什么是网关，网关有哪些作用？","slug":"什么是网关-网关有哪些作用","link":"#什么是网关-网关有哪些作用","children":[]},{"level":3,"title":"什么是分布式的 CAP 理论？","slug":"什么是分布式的-cap-理论","link":"#什么是分布式的-cap-理论","children":[]},{"level":3,"title":"什么是分布式的 BASE 理论，它与 CAP 理论有什么联系？","slug":"什么是分布式的-base-理论-它与-cap-理论有什么联系","link":"#什么是分布式的-base-理论-它与-cap-理论有什么联系","children":[]},{"level":3,"title":"什么是消息队列？消息队列有哪些应用场景？","slug":"什么是消息队列-消息队列有哪些应用场景","link":"#什么是消息队列-消息队列有哪些应用场景","children":[]},{"level":3,"title":"有哪些主流的消息队列，它们分别有什么优缺点、各自的适用场景是什么？","slug":"有哪些主流的消息队列-它们分别有什么优缺点、各自的适用场景是什么","link":"#有哪些主流的消息队列-它们分别有什么优缺点、各自的适用场景是什么","children":[]},{"level":3,"title":"有哪些常见的消息队列模型？分别适用于什么场景？","slug":"有哪些常见的消息队列模型-分别适用于什么场景","link":"#有哪些常见的消息队列模型-分别适用于什么场景","children":[]}]},{"level":2,"title":"微服务","slug":"微服务","link":"#微服务","children":[{"level":3,"title":"Dubbo 是什么？是否了解过它的架构设计？","slug":"dubbo-是什么-是否了解过它的架构设计","link":"#dubbo-是什么-是否了解过它的架构设计","children":[]},{"level":3,"title":"什么是云原生？它有哪些优缺点？","slug":"什么是云原生-它有哪些优缺点","link":"#什么是云原生-它有哪些优缺点","children":[]},{"level":3,"title":"什么是 RPC？目前有哪些常见的 RPC 框架？实现 RPC 框架的核心原理是什么？","slug":"什么是-rpc-目前有哪些常见的-rpc-框架-实现-rpc-框架的核心原理是什么","link":"#什么是-rpc-目前有哪些常见的-rpc-框架-实现-rpc-框架的核心原理是什么","children":[]},{"level":3,"title":"什么是注册中心？如何实现一个注册中心？","slug":"什么是注册中心-如何实现一个注册中心","link":"#什么是注册中心-如何实现一个注册中心","children":[]}]},{"level":2,"title":"DevOps","slug":"devops","link":"#devops","children":[{"level":3,"title":"Nginx 是什么？它有哪些应用场景？","slug":"nginx-是什么-它有哪些应用场景","link":"#nginx-是什么-它有哪些应用场景","children":[]},{"level":3,"title":"什么是正向代理和反向代理，如何使用 Nginx 做反向代理？","slug":"什么是正向代理和反向代理-如何使用-nginx-做反向代理","link":"#什么是正向代理和反向代理-如何使用-nginx-做反向代理","children":[]},{"level":3,"title":"如何用 Nginx 做限流，有几种限流算法，分别如何实现？","slug":"如何用-nginx-做限流-有几种限流算法-分别如何实现","link":"#如何用-nginx-做限流-有几种限流算法-分别如何实现","children":[]},{"level":3,"title":"什么是 Git 的 fork 命令？它和 clone 命令有什么区别？","slug":"什么是-git-的-fork-命令-它和-clone-命令有什么区别","link":"#什么是-git-的-fork-命令-它和-clone-命令有什么区别","children":[]},{"level":3,"title":"什么是 Git 的 cherry-pick？","slug":"什么是-git-的-cherry-pick","link":"#什么是-git-的-cherry-pick","children":[]},{"level":3,"title":"Linux 中的硬链接和软连接是什么，二者有什么区别？","slug":"linux-中的硬链接和软连接是什么-二者有什么区别","link":"#linux-中的硬链接和软连接是什么-二者有什么区别","children":[]},{"level":3,"title":"CC 攻击是什么？什么叫 DDOS 攻击？什么是网站数据库注入？","slug":"cc-攻击是什么-什么叫-ddos-攻击-什么是网站数据库注入","link":"#cc-攻击是什么-什么叫-ddos-攻击-什么是网站数据库注入","children":[]},{"level":3,"title":"如何在 Linux 中查看系统资源使用情况？比如内存、CPU、网络端口。","slug":"如何在-linux-中查看系统资源使用情况-比如内存、cpu、网络端口。","link":"#如何在-linux-中查看系统资源使用情况-比如内存、cpu、网络端口。","children":[]}]},{"level":2,"title":"设计","slug":"设计","link":"#设计","children":[{"level":3,"title":"设计模式是什么？为什么要学习和使用设计模式？","slug":"设计模式是什么-为什么要学习和使用设计模式","link":"#设计模式是什么-为什么要学习和使用设计模式","children":[]},{"level":3,"title":"什么是单例模式？使用单例模式有什么好处？有哪些常用的单例模式实现方式？各自的应用场景是什么？","slug":"什么是单例模式-使用单例模式有什么好处-有哪些常用的单例模式实现方式-各自的应用场景是什么","link":"#什么是单例模式-使用单例模式有什么好处-有哪些常用的单例模式实现方式-各自的应用场景是什么","children":[]},{"level":3,"title":"设计模式可以分为哪几类？一共有多少种主流的设计模式？","slug":"设计模式可以分为哪几类-一共有多少种主流的设计模式","link":"#设计模式可以分为哪几类-一共有多少种主流的设计模式","children":[]},{"level":3,"title":"什么是工厂模式？使用工厂模式有什么好处？工厂模式有哪些分类？各自的应用场景是什么？","slug":"什么是工厂模式-使用工厂模式有什么好处-工厂模式有哪些分类-各自的应用场景是什么","link":"#什么是工厂模式-使用工厂模式有什么好处-工厂模式有哪些分类-各自的应用场景是什么","children":[]},{"level":3,"title":"如何设计一个点赞系统？","slug":"如何设计一个点赞系统","link":"#如何设计一个点赞系统","children":[]},{"level":3,"title":"如何在 10 亿个数据中找到最大的 1 万个？","slug":"如何在-10-亿个数据中找到最大的-1-万个","link":"#如何在-10-亿个数据中找到最大的-1-万个","children":[]},{"level":3,"title":"有几台机器存储着几亿的淘宝搜索日志，假设你只有一台 2g 的电脑，如何选出搜索热度最高的十个关键词？","slug":"有几台机器存储着几亿的淘宝搜索日志-假设你只有一台-2g-的电脑-如何选出搜索热度最高的十个关键词","link":"#有几台机器存储着几亿的淘宝搜索日志-假设你只有一台-2g-的电脑-如何选出搜索热度最高的十个关键词","children":[]}]},{"level":2,"title":"网络","slug":"网络","link":"#网络","children":[{"level":3,"title":"TCP 的三次握手和四次挥手","slug":"tcp-的三次握手和四次挥手","link":"#tcp-的三次握手和四次挥手","children":[]},{"level":3,"title":"HTTPS 的加密过程了解吗？","slug":"https-的加密过程了解吗","link":"#https-的加密过程了解吗","children":[]},{"level":3,"title":"面试官：TCP 的半包和粘包了解多少？详细介绍下。。","slug":"面试官-tcp-的半包和粘包了解多少-详细介绍下。。","link":"#面试官-tcp-的半包和粘包了解多少-详细介绍下。。","children":[]},{"level":3,"title":"面试官：常见的网络攻击手段有哪些？解决方案了解吗？","slug":"面试官-常见的网络攻击手段有哪些-解决方案了解吗","link":"#面试官-常见的网络攻击手段有哪些-解决方案了解吗","children":[]},{"level":3,"title":"简述计算机网络七层模型和各自的作用？","slug":"简述计算机网络七层模型和各自的作用","link":"#简述计算机网络七层模型和各自的作用","children":[]},{"level":3,"title":"HTTP 是哪一层的协议？简述它的作用？","slug":"http-是哪一层的协议-简述它的作用","link":"#http-是哪一层的协议-简述它的作用","children":[]},{"level":3,"title":"TCP 和 UDP 协议有什么区别，分别适用于什么场景？","slug":"tcp-和-udp-协议有什么区别-分别适用于什么场景","link":"#tcp-和-udp-协议有什么区别-分别适用于什么场景","children":[]},{"level":3,"title":"HTTP 协议中 GET 和 POST 有什么区别？分别适用于什么场景？","slug":"http-协议中-get-和-post-有什么区别-分别适用于什么场景","link":"#http-协议中-get-和-post-有什么区别-分别适用于什么场景","children":[]},{"level":3,"title":"简述 TCP 三次握手、四次挥手的流程？为什么需要三次握手？为什么需要四次挥手？","slug":"简述-tcp-三次握手、四次挥手的流程-为什么需要三次握手-为什么需要四次挥手","link":"#简述-tcp-三次握手、四次挥手的流程-为什么需要三次握手-为什么需要四次挥手","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757776547000,"updatedTime":1757776547000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":23.54,"words":7061},"filePathRelative":"99.面试/JavaQA.md","localizedDate":"2025年9月13日","excerpt":"<h2> JVM</h2>\\n<h3> 什么是字节码？采用字节码的最大好处是什么？</h3>\\n<p>字节码是可以在任何 JVM 平台上执行的，无关环境的中间代码。</p>\\n<p>采用字节码最大的好处是，Write Once, Running Anywhere</p>\\n<h3> 在什么情况下 Java 类会被加载？</h3>\\n<ul>\\n<li><code>new</code> 一个对象</li>\\n<li>访问某个类或接口的静态变量、静态方法</li>\\n<li>子类被初始化时，会先初始化父类</li>\\n<li>反射（Class.forName(\\"xxx.Class\\")）</li>\\n</ul>\\n<h3> JVM 的哪些内存区域可能会导致 OutOfMemoryError？</h3>","autoDesc":true}');export{l as data};
