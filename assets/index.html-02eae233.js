const e=JSON.parse('{"key":"v-98176856","path":"/pages/e90e4e73/","title":"《数据密集型应用系统设计》笔记二","lang":"zh-CN","frontmatter":{"title":"《数据密集型应用系统设计》笔记二","date":"2021-08-26T23:32:00.000Z","order":1,"permalink":"/pages/e90e4e73/","category":["笔记","分布式","分布式综合"],"tag":["数据库","原理"],"description":"《数据密集型应用系统设计》笔记二 第五章：数据复制 复制主要指通过网络在多台机器上保存相同数据的副本。通过复制，可以达到以下目的： 使数据在地理位置上更接近用户，从而降低访问延迟。如：CDN 当部分组件出现故障，系统依然可以继续工作，从而提高可用性。 扩展至多台机器以同事提供数据访问服务，从而提高读吞吐量。 主流的复制模式：主从复制、多主复制、无主复制。 复制需要考虑的细节：同步复制还是异步复制？如何处理失败的副本（故障转移）？处理策略通常采用可配置项来调整。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/e90e4e73/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"《数据密集型应用系统设计》笔记二"}],["meta",{"property":"og:description","content":"《数据密集型应用系统设计》笔记二 第五章：数据复制 复制主要指通过网络在多台机器上保存相同数据的副本。通过复制，可以达到以下目的： 使数据在地理位置上更接近用户，从而降低访问延迟。如：CDN 当部分组件出现故障，系统依然可以继续工作，从而提高可用性。 扩展至多台机器以同事提供数据访问服务，从而提高读吞吐量。 主流的复制模式：主从复制、多主复制、无主复制。 复制需要考虑的细节：同步复制还是异步复制？如何处理失败的副本（故障转移）？处理策略通常采用可配置项来调整。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-13T09:10:08.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"原理"}],["meta",{"property":"article:published_time","content":"2021-08-26T23:32:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-13T09:10:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"《数据密集型应用系统设计》笔记二\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-08-26T23:32:00.000Z\\",\\"dateModified\\":\\"2025-09-13T09:10:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"第五章：数据复制","slug":"第五章-数据复制","link":"#第五章-数据复制","children":[{"level":3,"title":"主节点与从节点","slug":"主节点与从节点","link":"#主节点与从节点","children":[]},{"level":3,"title":"复制滞后问题","slug":"复制滞后问题","link":"#复制滞后问题","children":[]},{"level":3,"title":"多主节点复制","slug":"多主节点复制","link":"#多主节点复制","children":[]},{"level":3,"title":"拓扑结构","slug":"拓扑结构","link":"#拓扑结构","children":[]},{"level":3,"title":"无主复制","slug":"无主复制","link":"#无主复制","children":[]}]},{"level":2,"title":"第六章：分区","slug":"第六章-分区","link":"#第六章-分区","children":[{"level":3,"title":"数据分区与数据复制","slug":"数据分区与数据复制","link":"#数据分区与数据复制","children":[]},{"level":3,"title":"键－值数据的分区","slug":"键-值数据的分区","link":"#键-值数据的分区","children":[]},{"level":3,"title":"分区与二级索引","slug":"分区与二级索引","link":"#分区与二级索引","children":[]},{"level":3,"title":"分区再均衡","slug":"分区再均衡","link":"#分区再均衡","children":[]},{"level":3,"title":"请求路由","slug":"请求路由","link":"#请求路由","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}]},{"level":2,"title":"第七章：事务","slug":"第七章-事务","link":"#第七章-事务","children":[{"level":3,"title":"深入理解事务","slug":"深入理解事务","link":"#深入理解事务","children":[]},{"level":3,"title":"弱隔离级别","slug":"弱隔离级别","link":"#弱隔离级别","children":[]},{"level":3,"title":"串行化","slug":"串行化","link":"#串行化","children":[]}]},{"level":2,"title":"第八章：分布式系统的挑战","slug":"第八章-分布式系统的挑战","link":"#第八章-分布式系统的挑战","children":[]},{"level":2,"title":"第九章：一致性与共识","slug":"第九章-一致性与共识","link":"#第九章-一致性与共识","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757754608000,"updatedTime":1757754608000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":46.57,"words":13971},"filePathRelative":"00.笔记/15.分布式/00.分布式综合/数据密集型应用系统设计笔记二.md","localizedDate":"2021年8月26日","excerpt":"<h1> 《数据密集型应用系统设计》笔记二</h1>\\n<h2> 第五章：数据复制</h2>\\n<p><strong>复制</strong>主要指通过网络在多台机器上保存相同数据的副本。通过复制，可以达到以下目的：</p>\\n<ul>\\n<li>使数据在地理位置上更接近用户，从而降低访问延迟。如：CDN</li>\\n<li>当部分组件出现故障，系统依然可以继续工作，从而提高可用性。</li>\\n<li>扩展至多台机器以同事提供数据访问服务，从而提高读吞吐量。</li>\\n</ul>\\n<p>主流的复制模式：主从复制、多主复制、无主复制。</p>\\n<p>复制需要考虑的细节：同步复制还是异步复制？如何处理失败的副本（故障转移）？处理策略通常采用可配置项来调整。</p>","autoDesc":true}');export{e as data};
