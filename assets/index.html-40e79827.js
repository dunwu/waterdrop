const e=JSON.parse('{"key":"v-2143ed5d","path":"/pages/af40de5a/","title":"RPC 面试","lang":"zh-CN","frontmatter":{"title":"RPC 面试","date":"2025-01-22T08:08:21.000Z","permalink":"/pages/af40de5a/","category":["分布式","分布式通信","RPC"],"tag":["分布式","通信","微服务","RPC"],"description":"RPC 面试 RPC 简介 【基础】什么是 RPC？RPC 有什么用？ RPC 的全称是 Remote Procedure Call，即远程过程调用。 RPC 的主要作用是： 屏蔽远程调用跟本地调用的差异，让用户像调用本地一样去调用远程方法。 隐藏底层网络通信的复杂性，让用户更聚焦于业务逻辑。 RPC 是微服务架构的基石，它提供了一种应用间通信的方式。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/af40de5a/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"RPC 面试"}],["meta",{"property":"og:description","content":"RPC 面试 RPC 简介 【基础】什么是 RPC？RPC 有什么用？ RPC 的全称是 Remote Procedure Call，即远程过程调用。 RPC 的主要作用是： 屏蔽远程调用跟本地调用的差异，让用户像调用本地一样去调用远程方法。 隐藏底层网络通信的复杂性，让用户更聚焦于业务逻辑。 RPC 是微服务架构的基石，它提供了一种应用间通信的方式。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-23T15:53:48.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"分布式"}],["meta",{"property":"article:tag","content":"通信"}],["meta",{"property":"article:tag","content":"微服务"}],["meta",{"property":"article:tag","content":"RPC"}],["meta",{"property":"article:published_time","content":"2025-01-22T08:08:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-23T15:53:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RPC 面试\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-22T08:08:21.000Z\\",\\"dateModified\\":\\"2025-09-23T15:53:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"RPC 简介","slug":"rpc-简介","link":"#rpc-简介","children":[{"level":3,"title":"【基础】什么是 RPC？RPC 有什么用？","slug":"【基础】什么是-rpc-rpc-有什么用","link":"#【基础】什么是-rpc-rpc-有什么用","children":[]},{"level":3,"title":"【中级】RPC 是怎样工作的？","slug":"【中级】rpc-是怎样工作的","link":"#【中级】rpc-是怎样工作的","children":[]}]},{"level":2,"title":"协议","slug":"协议","link":"#协议","children":[{"level":3,"title":"【中级】为何需要 RPC 协议？","slug":"【中级】为何需要-rpc-协议","link":"#【中级】为何需要-rpc-协议","children":[]},{"level":3,"title":"【中级】设计一个 RPC 协议的要点？","slug":"【中级】设计一个-rpc-协议的要点","link":"#【中级】设计一个-rpc-协议的要点","children":[]}]},{"level":2,"title":"序列化","slug":"序列化","link":"#序列化","children":[{"level":3,"title":"【基础】什么是序列化？有哪些常见的序列化方式？","slug":"【基础】什么是序列化-有哪些常见的序列化方式","link":"#【基础】什么是序列化-有哪些常见的序列化方式","children":[]},{"level":3,"title":"【基础】序列化的使用中需要注意哪些问题？","slug":"【基础】序列化的使用中需要注意哪些问题","link":"#【基础】序列化的使用中需要注意哪些问题","children":[]}]},{"level":2,"title":"通信","slug":"通信","link":"#通信","children":[{"level":3,"title":"【中级】RPC 在网络通信上倾向选择哪种网络 IO 模型？","slug":"【中级】rpc-在网络通信上倾向选择哪种网络-io-模型","link":"#【中级】rpc-在网络通信上倾向选择哪种网络-io-模型","children":[]},{"level":3,"title":"【高级】什么是零拷贝？","slug":"【高级】什么是零拷贝","link":"#【高级】什么是零拷贝","children":[]}]},{"level":2,"title":"动态代理","slug":"动态代理","link":"#动态代理","children":[{"level":3,"title":"【中级】RPC 如何将远程调用转为本地调用的？","slug":"【中级】rpc-如何将远程调用转为本地调用的","link":"#【中级】rpc-如何将远程调用转为本地调用的","children":[]}]},{"level":2,"title":"服务注册发现","slug":"服务注册发现","link":"#服务注册发现","children":[{"level":3,"title":"【中级】如何实现一个注册中心？","slug":"【中级】如何实现一个注册中心","link":"#【中级】如何实现一个注册中心","children":[]}]},{"level":2,"title":"负载均衡","slug":"负载均衡","link":"#负载均衡","children":[{"level":3,"title":"【中级】负载均衡有哪些策略？","slug":"【中级】负载均衡有哪些策略","link":"#【中级】负载均衡有哪些策略","children":[]},{"level":3,"title":"【中级】如何设计自适应的负载均衡？","slug":"【中级】如何设计自适应的负载均衡","link":"#【中级】如何设计自适应的负载均衡","children":[]}]},{"level":2,"title":"路由","slug":"路由","link":"#路由","children":[{"level":3,"title":"【中级】什么是服务路由？有哪些常见的路由规则？","slug":"【中级】什么是服务路由-有哪些常见的路由规则","link":"#【中级】什么是服务路由-有哪些常见的路由规则","children":[]}]},{"level":2,"title":"监控","slug":"监控","link":"#监控","children":[{"level":3,"title":"【中级】如何实现 RPC 的健康检查？","slug":"【中级】如何实现-rpc-的健康检查","link":"#【中级】如何实现-rpc-的健康检查","children":[]},{"level":3,"title":"链路跟踪","slug":"链路跟踪","link":"#链路跟踪","children":[]}]},{"level":2,"title":"优雅启停","slug":"优雅启停","link":"#优雅启停","children":[{"level":3,"title":"【中级】如何实现 RPC 优雅关闭？","slug":"【中级】如何实现-rpc-优雅关闭","link":"#【中级】如何实现-rpc-优雅关闭","children":[]},{"level":3,"title":"【中级】如何实现 RPC 优雅启动？","slug":"【中级】如何实现-rpc-优雅启动","link":"#【中级】如何实现-rpc-优雅启动","children":[]}]},{"level":2,"title":"流量回放","slug":"流量回放","link":"#流量回放","children":[]},{"level":2,"title":"架构","slug":"架构","link":"#架构","children":[{"level":3,"title":"【高级】如何设计一个 RPC 框架？","slug":"【高级】如何设计一个-rpc-框架","link":"#【高级】如何设计一个-rpc-框架","children":[]},{"level":3,"title":"【高级】如何实现 RPC 异步调用？","slug":"【高级】如何实现-rpc-异步调用","link":"#【高级】如何实现-rpc-异步调用","children":[]},{"level":3,"title":"【高级】Dubbo 中的时间轮机制是如何设计的？","slug":"【高级】dubbo-中的时间轮机制是如何设计的","link":"#【高级】dubbo-中的时间轮机制是如何设计的","children":[]},{"level":3,"title":"【中级】RPC 如何实现那泛化调用？","slug":"【中级】rpc-如何实现那泛化调用","link":"#【中级】rpc-如何实现那泛化调用","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1758642828000,"updatedTime":1758642828000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":40.15,"words":12044},"filePathRelative":"15.分布式/分布式通信/RPC/RPC_面试.md","localizedDate":"2025年1月22日","excerpt":"<h1> RPC 面试</h1>\\n<h2> RPC 简介</h2>\\n<h3> 【基础】什么是 RPC？RPC 有什么用？</h3>\\n<p>RPC 的全称是 <strong>Remote Procedure Call</strong>，即<strong>远程过程调用</strong>。</p>\\n<p>RPC 的主要作用是：</p>\\n<ul>\\n<li><strong>屏蔽远程调用跟本地调用的差异</strong>，让用户像调用本地一样去调用远程方法。</li>\\n<li><strong>隐藏底层网络通信的复杂性</strong>，让用户更聚焦于业务逻辑。</li>\\n</ul>\\n<p>RPC 是微服务架构的基石，它提供了一种应用间通信的方式。</p>","autoDesc":true}');export{e as data};
