const e=JSON.parse('{"key":"v-87fa2e86","path":"/pages/5a3b8061/","title":"Java 基础面试二","lang":"zh-CN","frontmatter":{"title":"Java 基础面试二","cover":"https://raw.githubusercontent.com/dunwu/images/master/snap/202503110803916.jpg","date":"2024-07-03T07:44:02.000Z","order":2,"permalink":"/pages/5a3b8061/","category":["Java","JavaCore","面试"],"tag":["Java","JavaCore","面试"],"description":"Java 基础面试二 Java 面向对象 【简单】public、private、protected，以及无修饰符有什么区别？ private 只允许当前类可以访问。 无修饰只允许同一个包中的类访问。 protected 只允许当前类、子类和同一个包中的类访问。 public 允许任意类和对象访问。 【简单】对象实体与对象引用有何不同？ （1）对象是用来描述客观事物的一个抽象。一个对象由一组属性和对这组属性进行操作的一组服务组成。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/5a3b8061/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Java 基础面试二"}],["meta",{"property":"og:description","content":"Java 基础面试二 Java 面向对象 【简单】public、private、protected，以及无修饰符有什么区别？ private 只允许当前类可以访问。 无修饰只允许同一个包中的类访问。 protected 只允许当前类、子类和同一个包中的类访问。 public 允许任意类和对象访问。 【简单】对象实体与对象引用有何不同？ （1）对象是用来描述客观事物的一个抽象。一个对象由一组属性和对这组属性进行操作的一组服务组成。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dunwu/images/master/snap/202503110803916.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-15T00:29:21.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Java 基础面试二"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JavaCore"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:published_time","content":"2024-07-03T07:44:02.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-15T00:29:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 基础面试二\\",\\"image\\":[\\"https://raw.githubusercontent.com/dunwu/images/master/snap/202503110803916.jpg\\"],\\"datePublished\\":\\"2024-07-03T07:44:02.000Z\\",\\"dateModified\\":\\"2025-09-15T00:29:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"Java 面向对象","slug":"java-面向对象","link":"#java-面向对象","children":[{"level":3,"title":"【简单】public、private、protected，以及无修饰符有什么区别？","slug":"【简单】public、private、protected-以及无修饰符有什么区别","link":"#【简单】public、private、protected-以及无修饰符有什么区别","children":[]},{"level":3,"title":"【简单】对象实体与对象引用有何不同？","slug":"【简单】对象实体与对象引用有何不同","link":"#【简单】对象实体与对象引用有何不同","children":[]},{"level":3,"title":"【简单】接口和抽象类有什么区别？","slug":"【简单】接口和抽象类有什么区别","link":"#【简单】接口和抽象类有什么区别","children":[]},{"level":3,"title":"【中等】什么是 Java 内部类？内部类有什么作用？","slug":"【中等】什么是-java-内部类-内部类有什么作用","link":"#【中等】什么是-java-内部类-内部类有什么作用","children":[]},{"level":3,"title":"【简单】为什么 Java 不支持多重继承？","slug":"【简单】为什么-java-不支持多重继承","link":"#【简单】为什么-java-不支持多重继承","children":[]},{"level":3,"title":"【中等】深拷贝和浅拷贝有什么区别？","slug":"【中等】深拷贝和浅拷贝有什么区别","link":"#【中等】深拷贝和浅拷贝有什么区别","children":[]},{"level":3,"title":"【简单】面向对象和面向过程有什么区别？","slug":"【简单】面向对象和面向过程有什么区别","link":"#【简单】面向对象和面向过程有什么区别","children":[]},{"level":3,"title":"【中等】面向对象三大特征和五大原则是什么？","slug":"【中等】面向对象三大特征和五大原则是什么","link":"#【中等】面向对象三大特征和五大原则是什么","children":[]},{"level":3,"title":"【简单】Java 中 final 关键字有什么用？","slug":"【简单】java-中-final-关键字有什么用","link":"#【简单】java-中-final-关键字有什么用","children":[]}]},{"level":2,"title":"Object","slug":"object","link":"#object","children":[{"level":3,"title":"【简单】Object 类的常见方法有哪些？","slug":"【简单】object-类的常见方法有哪些","link":"#【简单】object-类的常见方法有哪些","children":[]},{"level":3,"title":"【简单】== 和 equals() 有什么区别？","slug":"【简单】-和-equals-有什么区别","link":"#【简单】-和-equals-有什么区别","children":[]},{"level":3,"title":"【简单】为什么重写 equals() 时必须重写 hashCode() 方法？","slug":"【简单】为什么重写-equals-时必须重写-hashcode-方法","link":"#【简单】为什么重写-equals-时必须重写-hashcode-方法","children":[]},{"level":3,"title":"【简单】finalize 有什么用？","slug":"【简单】finalize-有什么用","link":"#【简单】finalize-有什么用","children":[]}]},{"level":2,"title":"String","slug":"string","link":"#string","children":[{"level":3,"title":"【简单】String、StringBuffer、StringBuilder 有什么区别？","slug":"【简单】string、stringbuffer、stringbuilder-有什么区别","link":"#【简单】string、stringbuffer、stringbuilder-有什么区别","children":[]},{"level":3,"title":"【简单】String 为什么是不可变的？","slug":"【简单】string-为什么是不可变的","link":"#【简单】string-为什么是不可变的","children":[]},{"level":3,"title":"【简单】字符串拼接用“+” 还是 StringBuilder?","slug":"【简单】字符串拼接用-还是-stringbuilder","link":"#【简单】字符串拼接用-还是-stringbuilder","children":[]},{"level":3,"title":"【简单】String#equals() 和 Object#equals() 有何区别？","slug":"【简单】string-equals-和-object-equals-有何区别","link":"#【简单】string-equals-和-object-equals-有何区别","children":[]},{"level":3,"title":"【简单】字符串常量池有什么用？","slug":"【简单】字符串常量池有什么用","link":"#【简单】字符串常量池有什么用","children":[]},{"level":3,"title":"【简单】String s = new String(\\"abc\\") 创建了几个字符串对象？","slug":"【简单】string-s-new-string-abc-创建了几个字符串对象","link":"#【简单】string-s-new-string-abc-创建了几个字符串对象","children":[]},{"level":3,"title":"【简单】String#intern 方法有什么用？","slug":"【简单】string-intern-方法有什么用","link":"#【简单】string-intern-方法有什么用","children":[]},{"level":3,"title":"【简单】String 类型的变量和常量做“+”运算时会发生什么？","slug":"【简单】string-类型的变量和常量做-运算时会发生什么","link":"#【简单】string-类型的变量和常量做-运算时会发生什么","children":[]}]}],"git":{"createdTime":1757896161000,"updatedTime":1757896161000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":16.65,"words":4994},"filePathRelative":"01.Java/01.JavaCore/面试/Java_面试_基础（二）.md","localizedDate":"2024年7月3日","excerpt":"<h1> Java 基础面试二</h1>\\n<h2> Java 面向对象</h2>\\n<h3> 【简单】public、private、protected，以及无修饰符有什么区别？</h3>\\n<ul>\\n<li><code>private</code> 只允许当前类可以访问。</li>\\n<li>无修饰只允许同一个包中的类访问。</li>\\n<li><code>protected</code> 只允许当前类、子类和同一个包中的类访问。</li>\\n<li><code>public</code> 允许任意类和对象访问。</li>\\n</ul>\\n<h3> 【简单】对象实体与对象引用有何不同？</h3>\\n<p>（1）<strong>对象是用来描述客观事物的一个抽象</strong>。一个对象由一组属性和对这组属性进行操作的一组服务组成。</p>","autoDesc":true}');export{e as data};
