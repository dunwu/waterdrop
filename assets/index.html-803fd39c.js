const e=JSON.parse('{"key":"v-1a87e4cb","path":"/pages/a4de9eff/","title":"网络技术之 Websocket","lang":"zh-CN","frontmatter":{"title":"网络技术之 Websocket","date":"2019-05-31T11:51:00.000Z","order":1,"permalink":"/pages/a4de9eff/","category":["网络","网络技术"],"tag":["网络","网络技术","WebSocket"],"description":"网络技术之 WebSocket Socket Socket 作为一种抽象层，应用程序通过它来发送和接收数据，使用 Socket 可以将应用程序与处于同一网络中的其他应用程序进行通信交互。简而言之，Socket 提供了应用程序内部与外界通信的端口以及为通信双方提供了数据传输的通道。 Socket 用法 很多编程语言都支持 Socket。这里以 Java 的 Socket 用法为例。 在 Java 的 SDK 中，socket 的共有两个接口：用于监听客户连接的 ServerSocket 和用于通信的 Socket。使用 socket 的步骤如下：","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/a4de9eff/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"网络技术之 Websocket"}],["meta",{"property":"og:description","content":"网络技术之 WebSocket Socket Socket 作为一种抽象层，应用程序通过它来发送和接收数据，使用 Socket 可以将应用程序与处于同一网络中的其他应用程序进行通信交互。简而言之，Socket 提供了应用程序内部与外界通信的端口以及为通信双方提供了数据传输的通道。 Socket 用法 很多编程语言都支持 Socket。这里以 Java 的 Socket 用法为例。 在 Java 的 SDK 中，socket 的共有两个接口：用于监听客户连接的 ServerSocket 和用于通信的 Socket。使用 socket 的步骤如下："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-14T13:48:12.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"网络"}],["meta",{"property":"article:tag","content":"网络技术"}],["meta",{"property":"article:tag","content":"WebSocket"}],["meta",{"property":"article:published_time","content":"2019-05-31T11:51:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-14T13:48:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"网络技术之 Websocket\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-05-31T11:51:00.000Z\\",\\"dateModified\\":\\"2025-09-14T13:48:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"Socket","slug":"socket","link":"#socket","children":[{"level":3,"title":"Socket 用法","slug":"socket-用法","link":"#socket-用法","children":[]},{"level":3,"title":"Socket 长连接","slug":"socket-长连接","link":"#socket-长连接","children":[]}]},{"level":2,"title":"WebSocket","slug":"websocket","link":"#websocket","children":[{"level":3,"title":"WebSocket 简介","slug":"websocket-简介","link":"#websocket-简介","children":[]},{"level":3,"title":"WebSocket 使用","slug":"websocket-使用","link":"#websocket-使用","children":[]}]},{"level":2,"title":"FAQ","slug":"faq","link":"#faq","children":[{"level":3,"title":"Http vs. Socket","slug":"http-vs-socket","link":"#http-vs-socket","children":[]},{"level":3,"title":"HTTP 和 WebSocket 有什么关系？","slug":"http-和-websocket-有什么关系","link":"#http-和-websocket-有什么关系","children":[]},{"level":3,"title":"Html 和 HTTP 有什么关系？","slug":"html-和-http-有什么关系","link":"#html-和-http-有什么关系","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757857692000,"updatedTime":1757857692000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":9.18,"words":2754},"filePathRelative":"13.网络/网络技术/WebSocket.md","localizedDate":"2019年5月31日","excerpt":"<h1> 网络技术之 WebSocket</h1>\\n<h2> Socket</h2>\\n<p>Socket 作为一种抽象层，应用程序通过它来发送和接收数据，使用 Socket 可以将应用程序与处于同一网络中的其他应用程序进行通信交互。简而言之，Socket 提供了应用程序内部与外界通信的端口以及为通信双方提供了数据传输的通道。</p>\\n<h3> Socket 用法</h3>\\n<p>很多编程语言都支持 Socket。这里以 Java 的 Socket 用法为例。</p>\\n<p>在 Java 的 SDK 中，socket 的共有两个接口：用于监听客户连接的 <code>ServerSocket</code> 和用于通信的 <code>Socket</code>。使用 socket 的步骤如下：</p>","autoDesc":true}');export{e as data};
