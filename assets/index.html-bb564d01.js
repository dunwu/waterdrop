const e=JSON.parse('{"key":"v-5f03d76c","path":"/pages/03c7e4fa/","title":"Java 国际化","lang":"zh-CN","frontmatter":{"title":"Java 国际化","date":"2017-11-08T14:38:26.000Z","order":3,"permalink":"/pages/03c7e4fa/","category":["Java","JavaCore","高级特性"],"tag":["Java","JavaCore","国际化"],"description":"Java 国际化 背景知识 通讯的发达，使得世界各地交流越来越紧密。许多的软件产品也要面向世界上不同国家的用户。其中，语言障碍显然是产品在不同语种用户中进行推广的一个重要问题。 本文围绕国际化这一主题，先介绍国际标准的语言编码，然后讲解在 Java 应用中如何去实现国际化。 语言编码、国家/地区编码 做 web 开发的朋友可能多多少少接触过类似 zh-cn, en-us 这样的编码字样。 这些编码是用来表示指定的国家地区的语言类型的。那么，这些含有特殊含义的编码是如何产生的呢？","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/03c7e4fa/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Java 国际化"}],["meta",{"property":"og:description","content":"Java 国际化 背景知识 通讯的发达，使得世界各地交流越来越紧密。许多的软件产品也要面向世界上不同国家的用户。其中，语言障碍显然是产品在不同语种用户中进行推广的一个重要问题。 本文围绕国际化这一主题，先介绍国际标准的语言编码，然后讲解在 Java 应用中如何去实现国际化。 语言编码、国家/地区编码 做 web 开发的朋友可能多多少少接触过类似 zh-cn, en-us 这样的编码字样。 这些编码是用来表示指定的国家地区的语言类型的。那么，这些含有特殊含义的编码是如何产生的呢？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-15T23:50:15.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JavaCore"}],["meta",{"property":"article:tag","content":"国际化"}],["meta",{"property":"article:published_time","content":"2017-11-08T14:38:26.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-15T23:50:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 国际化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2017-11-08T14:38:26.000Z\\",\\"dateModified\\":\\"2025-09-15T23:50:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"背景知识","slug":"背景知识","link":"#背景知识","children":[{"level":3,"title":"语言编码、国家/地区编码","slug":"语言编码、国家-地区编码","link":"#语言编码、国家-地区编码","children":[]},{"level":3,"title":"字符编码","slug":"字符编码","link":"#字符编码","children":[]}]},{"level":2,"title":"Java 中实现国际化","slug":"java-中实现国际化","link":"#java-中实现国际化","children":[{"level":3,"title":"定义不同语种的模板","slug":"定义不同语种的模板","link":"#定义不同语种的模板","children":[]},{"level":3,"title":"选择语种","slug":"选择语种","link":"#选择语种","children":[]},{"level":3,"title":"加载指定语种的模板","slug":"加载指定语种的模板","link":"#加载指定语种的模板","children":[]}]},{"level":2,"title":"支持国际化的工具类","slug":"支持国际化的工具类","link":"#支持国际化的工具类","children":[{"level":3,"title":"NumberFormat","slug":"numberformat","link":"#numberformat","children":[]},{"level":3,"title":"DateFormat","slug":"dateformat","link":"#dateformat","children":[]},{"level":3,"title":"MessageFormat","slug":"messageformat","link":"#messageformat","children":[]}]}],"git":{"createdTime":1757980215000,"updatedTime":1757980215000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":9.5,"words":2850},"filePathRelative":"01.Java/JavaCore/高级特性/Java_国际化.md","localizedDate":"2017年11月8日","excerpt":"<h1> Java 国际化</h1>\\n<h2> 背景知识</h2>\\n<p>通讯的发达，使得世界各地交流越来越紧密。许多的软件产品也要面向世界上不同国家的用户。其中，语言障碍显然是产品在不同语种用户中进行推广的一个重要问题。</p>\\n<p>本文围绕国际化这一主题，先介绍国际标准的语言编码，然后讲解在 Java 应用中如何去实现国际化。</p>\\n<h3> 语言编码、国家/地区编码</h3>\\n<p>做 web 开发的朋友可能多多少少接触过类似 <strong>zh-cn</strong>, <strong>en-us</strong> 这样的编码字样。</p>\\n<p>这些编码是用来表示指定的国家地区的语言类型的。那么，这些含有特殊含义的编码是如何产生的呢？</p>","autoDesc":true}');export{e as data};
