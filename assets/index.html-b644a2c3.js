import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as r,c as e,e as n}from"./app-f29527f5.js";const s={},o=n('<h1 id="devops-面试" tabindex="-1"><a class="header-anchor" href="#devops-面试" aria-hidden="true">#</a> DevOps 面试</h1><h2 id="devops-简介" tabindex="-1"><a class="header-anchor" href="#devops-简介" aria-hidden="true">#</a> DevOps 简介</h2><h3 id="【简单】什么是-devops" tabindex="-1"><a class="header-anchor" href="#【简单】什么是-devops" aria-hidden="true">#</a> 【简单】什么是 DevOps？</h3><p><strong>DevOps是通过平台（Platform）、流程（Process）和人（People）的有机整合，以C（协作）A（自动化）L（精益）M（度量）S（共享）文化为指引，旨在建立一种可以快速交付价值并且具有持续改进能力的现代化IT组织。</strong></p><p>简单来说，<strong>DevOps 就是让构建、发布和运行软件的过程变得更快、更顺、更稳</strong>。</p><h3 id="【中等】列举一下-devops-各环节的主流工具" tabindex="-1"><a class="header-anchor" href="#【中等】列举一下-devops-各环节的主流工具" aria-hidden="true">#</a> 【中等】列举一下 DevOps 各环节的主流工具？</h3><figure><img src="https://miro.medium.com/v2/resize:fit:4800/format:webp/1*hnrlp3W6kfInWHtJd9Vvag.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th style="text-align:left;">阶段 (Phase)</th><th style="text-align:left;">核心任务与功能</th><th style="text-align:left;">主流工具</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>计划与协作</strong> (Plan &amp; Collaborate)</td><td style="text-align:left;">需求管理、任务拆分、项目跟踪、文档协作</td><td style="text-align:left;"><strong>Jira</strong>、<strong>Confluence</strong></td></tr><tr><td style="text-align:left;"><strong>代码与版本控制</strong> (Code &amp; Version Control)</td><td style="text-align:left;">源代码管理、代码审查、分支策略</td><td style="text-align:left;"><strong>代码托管</strong>：<strong>Git</strong>、<strong>GitHub</strong>、<strong>GitLab</strong>、<strong>Svn</strong><br><strong>分支策略</strong>：<strong>Gitflow</strong></td></tr><tr><td style="text-align:left;"><strong>构建与持续集成 (CI)</strong> (Build &amp; CI)</td><td style="text-align:left;">自动编译、运行单元测试、打包制品</td><td style="text-align:left;"><strong>CI</strong>：<strong>Jenkins</strong>、<strong>GitLab CI/CD</strong>、<strong>GitHub Actions</strong>、<strong>CircleCI</strong><br><strong>Java 构建</strong>：<strong>Maven</strong>、<strong>Gradle</strong><br><strong>JS 构建</strong>：<strong>npm</strong>、<strong>yarn</strong><br><strong>仓库</strong>：<strong>Nexus</strong>、<strong>JFrog</strong></td></tr><tr><td style="text-align:left;"><strong>测试和质量</strong> (Test)</td><td style="text-align:left;">自动化测试、代码质量与安全扫描</td><td style="text-align:left;"><strong>测试</strong>：<strong>Selenium</strong>、<strong>Cypress</strong>、<strong>JUnit</strong><br><strong>质量</strong>：<strong>SonarQube</strong></td></tr><tr><td style="text-align:left;"><strong>发布与持续部署 (CD)</strong> (Release &amp; CD)</td><td style="text-align:left;">自动化部署、发布策略管理</td><td style="text-align:left;"><strong>Jenkins</strong>、<strong>GitLab CI/CD</strong>、<strong>GitHub Actions</strong>（通用CD） <strong>云原生CD:</strong> <strong>ArgoCD</strong>（GitOps理念）、<strong>Spinnaker</strong>（复杂部署策略）、Tekton</td></tr><tr><td style="text-align:left;"><strong>运维与配置</strong> (Operate &amp; Configure)</td><td style="text-align:left;">基础设施自动化、配置管理、容器编排</td><td style="text-align:left;"><strong>IaC工具</strong>：<strong>Terraform</strong>（多云标准）、Ansible（无代理配置）<br><strong>容器化:</strong> <strong>Docker</strong>、<strong>Kubernetes</strong>、Helm</td></tr><tr><td style="text-align:left;"><strong>监控与反馈</strong> (Monitor &amp; Feedback)</td><td style="text-align:left;">性能监控、日志管理、故障告警、用户反馈</td><td style="text-align:left;"><strong>监控</strong>：<strong>Prometheus</strong>、<strong>Grafana</strong><br><strong>日志</strong>：<strong>ELK Stack</strong>（Elasticsearch, Logstash, Kibana）<br><strong>链路追踪</strong>：Jaeger、Zipkin、Skywalking、OpenTelemetry</td></tr></tbody></table><h2 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> Git</h2><h3 id="【中等】什么是-git-的-fork-命令-它和-clone-命令有什么区别" tabindex="-1"><a class="header-anchor" href="#【中等】什么是-git-的-fork-命令-它和-clone-命令有什么区别" aria-hidden="true">#</a> 【中等】什么是 Git 的 fork 命令？它和 clone 命令有什么区别？</h3><p>创建一个新的工程空间</p><h3 id="【中等】什么是-git-的-cherry-pick" tabindex="-1"><a class="header-anchor" href="#【中等】什么是-git-的-cherry-pick" aria-hidden="true">#</a> 【中等】什么是 Git 的 cherry-pick？</h3><p>单独将某一次提交合入其他分支</p><h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h2><h3 id="【中等】linux-中的硬链接和软连接是什么-二者有什么区别" tabindex="-1"><a class="header-anchor" href="#【中等】linux-中的硬链接和软连接是什么-二者有什么区别" aria-hidden="true">#</a> 【中等】Linux 中的硬链接和软连接是什么，二者有什么区别？</h3><h3 id="【中等】cc-攻击是什么-什么叫-ddos-攻击-什么是网站数据库注入" tabindex="-1"><a class="header-anchor" href="#【中等】cc-攻击是什么-什么叫-ddos-攻击-什么是网站数据库注入" aria-hidden="true">#</a> 【中等】CC 攻击是什么？什么叫 DDOS 攻击？什么是网站数据库注入？</h3><h3 id="【中等】如何在-linux-中查看系统资源使用情况-比如内存、cpu、网络端口。" tabindex="-1"><a class="header-anchor" href="#【中等】如何在-linux-中查看系统资源使用情况-比如内存、cpu、网络端口。" aria-hidden="true">#</a> 【中等】如何在 Linux 中查看系统资源使用情况？比如内存、CPU、网络端口。</h3><ul><li><p>top 查资源占用排名</p></li><li><p>free 查内存占用</p></li><li><p>df 查磁盘占用</p></li><li><p>iostat 查 IO</p></li><li><p>netstat 查网络</p></li><li><p>ping、traceroute 查网络链路</p></li></ul>',18),a=[o];function g(i,l){return r(),e("div",null,a)}const c=t(s,[["render",g],["__file","index.html.vue"]]);export{c as default};
