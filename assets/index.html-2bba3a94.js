const e=JSON.parse('{"key":"v-773322ac","path":"/pages/e23abd68/","title":"Spring AOP","lang":"zh-CN","frontmatter":{"title":"Spring AOP","date":"2020-02-26T23:47:47.000Z","order":10,"permalink":"/pages/e23abd68/","category":["Java","框架","Spring","Spring核心"],"tag":["Java","框架","Spring","AOP"],"description":"Spring AOP AOP 概念 什么是 AOP AOP(Aspect-Oriented Programming，即 面向切面编程)与 OOP( Object-Oriented Programming，面向对象编程) 相辅相成，提供了与 OOP 不同的抽象软件结构的视角。 在 OOP 中，我们以类(class)作为我们的基本单元，而 AOP 中的基本单元是 Aspect(切面) 术语 Aspect(切面)","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/e23abd68/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"Spring AOP"}],["meta",{"property":"og:description","content":"Spring AOP AOP 概念 什么是 AOP AOP(Aspect-Oriented Programming，即 面向切面编程)与 OOP( Object-Oriented Programming，面向对象编程) 相辅相成，提供了与 OOP 不同的抽象软件结构的视角。 在 OOP 中，我们以类(class)作为我们的基本单元，而 AOP 中的基本单元是 Aspect(切面) 术语 Aspect(切面)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-14T13:48:12.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"框架"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"AOP"}],["meta",{"property":"article:published_time","content":"2020-02-26T23:47:47.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-14T13:48:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring AOP\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-02-26T23:47:47.000Z\\",\\"dateModified\\":\\"2025-09-14T13:48:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"AOP 概念","slug":"aop-概念","link":"#aop-概念","children":[{"level":3,"title":"什么是 AOP","slug":"什么是-aop","link":"#什么是-aop","children":[]},{"level":3,"title":"术语","slug":"术语","link":"#术语","children":[]},{"level":3,"title":"advice 的类型","slug":"advice-的类型","link":"#advice-的类型","children":[]},{"level":3,"title":"关于 AOP Proxy","slug":"关于-aop-proxy","link":"#关于-aop-proxy","children":[]},{"level":3,"title":"彻底理解 aspect, join point, point cut, advice","slug":"彻底理解-aspect-join-point-point-cut-advice","link":"#彻底理解-aspect-join-point-point-cut-advice","children":[]}]},{"level":2,"title":"@AspectJ 支持","slug":"aspectj-支持","link":"#aspectj-支持","children":[{"level":3,"title":"使能 @AspectJ 支持","slug":"使能-aspectj-支持","link":"#使能-aspectj-支持","children":[]},{"level":3,"title":"定义 aspect(切面)","slug":"定义-aspect-切面","link":"#定义-aspect-切面","children":[]},{"level":3,"title":"声明 pointcut","slug":"声明-pointcut","link":"#声明-pointcut","children":[]},{"level":3,"title":"声明 advice","slug":"声明-advice","link":"#声明-advice","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1757857692000,"updatedTime":1757857692000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":1}]},"readingTime":{"minutes":13.7,"words":4109},"filePathRelative":"01.Java/13.框架/Spring/Spring核心/SpringAop.md","localizedDate":"2020年2月26日","excerpt":"<h1> Spring AOP</h1>\\n<h2> AOP 概念</h2>\\n<h3> 什么是 AOP</h3>\\n<p>AOP(Aspect-Oriented Programming，即 <strong>面向切面编程</strong>)与 OOP( Object-Oriented Programming，面向对象编程) 相辅相成，提供了与 OOP 不同的抽象软件结构的视角。</p>\\n<p>在 OOP 中，我们以类(class)作为我们的基本单元，而 AOP 中的基本单元是 <strong>Aspect(切面)</strong></p>\\n<h3> 术语</h3>\\n<h4> Aspect(切面)</h4>","autoDesc":true}');export{e as data};
