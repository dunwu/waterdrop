const e=JSON.parse('{"key":"v-5dd94883","path":"/pages/e162d7d1/","title":"RocketMQ 面试","lang":"zh-CN","frontmatter":{"icon":"simple-icons:apacherocketmq","title":"RocketMQ 面试","date":"2022-07-12T07:49:48.000Z","order":99,"permalink":"/pages/e162d7d1/","category":["分布式","分布式通信","MQ","RocketMQ"],"tag":["分布式","通信","MQ","RocketMQ","面试"],"description":"RocketMQ 面试 RocketMQ 简介 【简单】RocketMQ 是什么？🌟 RocketMQ 是一个开源分布式消息中间件。最初由阿里巴巴开发，现在是 Apache 顶级项目。 RocketMQ 核心组件 组件 功能 命名服务（Name Server） 负责管理所有 Broker 的地址信息（路由表），实现服务发现。客户端通过它找到对应的 Broker。它本身是无状态的，集群间不互相通信，因此非常简单高效。 代理（Broker） RocketMQ 的核心，负责消息的存储、投递和查询。为了保证高可用，通常采用主从结构。 生产者（Producer） 创建并发送消息的客户端。它从 Name Server 获取路由信息，然后将消息发送到合适的 Broker。 消费者（Consumer） 从 Broker 拉取消息并进行消费的客户端。它同样从 Name Server 获取路由信息。","head":[["meta",{"property":"og:url","content":"https://dunwu.github.io/waterdrop/waterdrop/pages/e162d7d1/"}],["meta",{"property":"og:site_name","content":"钝悟"}],["meta",{"property":"og:title","content":"RocketMQ 面试"}],["meta",{"property":"og:description","content":"RocketMQ 面试 RocketMQ 简介 【简单】RocketMQ 是什么？🌟 RocketMQ 是一个开源分布式消息中间件。最初由阿里巴巴开发，现在是 Apache 顶级项目。 RocketMQ 核心组件 组件 功能 命名服务（Name Server） 负责管理所有 Broker 的地址信息（路由表），实现服务发现。客户端通过它找到对应的 Broker。它本身是无状态的，集群间不互相通信，因此非常简单高效。 代理（Broker） RocketMQ 的核心，负责消息的存储、投递和查询。为了保证高可用，通常采用主从结构。 生产者（Producer） 创建并发送消息的客户端。它从 Name Server 获取路由信息，然后将消息发送到合适的 Broker。 消费者（Consumer） 从 Broker 拉取消息并进行消费的客户端。它同样从 Name Server 获取路由信息。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-28T14:55:50.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"分布式"}],["meta",{"property":"article:tag","content":"通信"}],["meta",{"property":"article:tag","content":"MQ"}],["meta",{"property":"article:tag","content":"RocketMQ"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:published_time","content":"2022-07-12T07:49:48.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-28T14:55:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RocketMQ 面试\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-12T07:49:48.000Z\\",\\"dateModified\\":\\"2025-09-28T14:55:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/waterdrop\\"}]}"]]},"headers":[{"level":2,"title":"RocketMQ 简介","slug":"rocketmq-简介","link":"#rocketmq-简介","children":[{"level":3,"title":"【简单】RocketMQ 是什么？🌟","slug":"【简单】rocketmq-是什么-🌟","link":"#【简单】rocketmq-是什么-🌟","children":[]},{"level":3,"title":"【简单】RocketMQ 有哪些核心组件？🌟","slug":"【简单】rocketmq-有哪些核心组件-🌟","link":"#【简单】rocketmq-有哪些核心组件-🌟","children":[]}]},{"level":2,"title":"RocketMQ 存储","slug":"rocketmq-存储","link":"#rocketmq-存储","children":[{"level":3,"title":"【中等】RocketMQ 如何存储消息？🌟🌟","slug":"【中等】rocketmq-如何存储消息-🌟🌟","link":"#【中等】rocketmq-如何存储消息-🌟🌟","children":[]},{"level":3,"title":"【中等】RocketMQ 如何实现持久化？🌟","slug":"【中等】rocketmq-如何实现持久化-🌟","link":"#【中等】rocketmq-如何实现持久化-🌟","children":[]}]},{"level":2,"title":"RocketMQ 生产消费","slug":"rocketmq-生产消费","link":"#rocketmq-生产消费","children":[{"level":3,"title":"【中等】RocketMQ 发送消息的工作流程是怎样的？🌟🌟","slug":"【中等】rocketmq-发送消息的工作流程是怎样的-🌟🌟","link":"#【中等】rocketmq-发送消息的工作流程是怎样的-🌟🌟","children":[]},{"level":3,"title":"【中等】RocketMQ 有几种发送消息方式？🌟","slug":"【中等】rocketmq-有几种发送消息方式-🌟","link":"#【中等】rocketmq-有几种发送消息方式-🌟","children":[]},{"level":3,"title":"【中等】RocketMQ 消费消息的工作流程是怎样的？🌟🌟","slug":"【中等】rocketmq-消费消息的工作流程是怎样的-🌟🌟","link":"#【中等】rocketmq-消费消息的工作流程是怎样的-🌟🌟","children":[]},{"level":3,"title":"【简单】RocketMQ 支持哪几种消费方式？🌟","slug":"【简单】rocketmq-支持哪几种消费方式-🌟","link":"#【简单】rocketmq-支持哪几种消费方式-🌟","children":[]},{"level":3,"title":"【简单】RocketMQ 如何实现批量消息？","slug":"【简单】rocketmq-如何实现批量消息","link":"#【简单】rocketmq-如何实现批量消息","children":[]}]},{"level":2,"title":"RocketMQ 集群","slug":"rocketmq-集群","link":"#rocketmq-集群","children":[{"level":3,"title":"【中等】RocketMQ 如何实现主从复制？🌟🌟","slug":"【中等】rocketmq-如何实现主从复制-🌟🌟","link":"#【中等】rocketmq-如何实现主从复制-🌟🌟","children":[]},{"level":3,"title":"【中等】RocketMQ 如何实现故障转移？🌟🌟","slug":"【中等】rocketmq-如何实现故障转移-🌟🌟","link":"#【中等】rocketmq-如何实现故障转移-🌟🌟","children":[]},{"level":3,"title":"【中等】RocketMQ 中的消费负载均衡是如何工作的？🌟🌟🌟","slug":"【中等】rocketmq-中的消费负载均衡是如何工作的-🌟🌟🌟","link":"#【中等】rocketmq-中的消费负载均衡是如何工作的-🌟🌟🌟","children":[]},{"level":3,"title":"【中等】RocketMQ 的 NameServer 有什么作用？🌟🌟","slug":"【中等】rocketmq-的-nameserver-有什么作用-🌟🌟","link":"#【中等】rocketmq-的-nameserver-有什么作用-🌟🌟","children":[]},{"level":3,"title":"【中等】为什么 RocketMQ 不用 ZooKeeper，而是自己开发 NameServer？🌟🌟","slug":"【中等】为什么-rocketmq-不用-zookeeper-而是自己开发-nameserver-🌟🌟","link":"#【中等】为什么-rocketmq-不用-zookeeper-而是自己开发-nameserver-🌟🌟","children":[]}]},{"level":2,"title":"RocketMQ 可靠传输","slug":"rocketmq-可靠传输","link":"#rocketmq-可靠传输","children":[{"level":3,"title":"【困难】如何保证 RocketMQ 消息不丢失？🌟🌟🌟","slug":"【困难】如何保证-rocketmq-消息不丢失-🌟🌟🌟","link":"#【困难】如何保证-rocketmq-消息不丢失-🌟🌟🌟","children":[]},{"level":3,"title":"【困难】如何保证 RocketMQ 消息不重复？🌟🌟🌟","slug":"【困难】如何保证-rocketmq-消息不重复-🌟🌟🌟","link":"#【困难】如何保证-rocketmq-消息不重复-🌟🌟🌟","children":[]},{"level":3,"title":"【困难】如何保证 RocketMQ 消息有序？🌟🌟🌟","slug":"【困难】如何保证-rocketmq-消息有序-🌟🌟🌟","link":"#【困难】如何保证-rocketmq-消息有序-🌟🌟🌟","children":[]},{"level":3,"title":"【困难】如何处理 RocketMQ 消息积压？🌟🌟","slug":"【困难】如何处理-rocketmq-消息积压-🌟🌟","link":"#【困难】如何处理-rocketmq-消息积压-🌟🌟","children":[]},{"level":3,"title":"【中等】RocketMQ 中如何配置并发消费和顺序消费？🌟","slug":"【中等】rocketmq-中如何配置并发消费和顺序消费-🌟","link":"#【中等】rocketmq-中如何配置并发消费和顺序消费-🌟","children":[]}]},{"level":2,"title":"RocketMQ 架构","slug":"rocketmq-架构","link":"#rocketmq-架构","children":[{"level":3,"title":"【简单】RocketMQ 如何实现消息过滤？🌟","slug":"【简单】rocketmq-如何实现消息过滤-🌟","link":"#【简单】rocketmq-如何实现消息过滤-🌟","children":[]},{"level":3,"title":"【简单】RocketMQ 支持哪几种消息传输模式？🌟","slug":"【简单】rocketmq-支持哪几种消息传输模式-🌟","link":"#【简单】rocketmq-支持哪几种消息传输模式-🌟","children":[]},{"level":3,"title":"【中等】RocketMQ 如何实现延迟消息？🌟","slug":"【中等】rocketmq-如何实现延迟消息-🌟","link":"#【中等】rocketmq-如何实现延迟消息-🌟","children":[]},{"level":3,"title":"【中等】RocketMQ 的消息轨迹如何启用？","slug":"【中等】rocketmq-的消息轨迹如何启用","link":"#【中等】rocketmq-的消息轨迹如何启用","children":[]}]},{"level":2,"title":"RocketMQ 事务","slug":"rocketmq-事务","link":"#rocketmq-事务","children":[{"level":3,"title":"【中等】RocketMQ 如何实现幂等性？🌟","slug":"【中等】rocketmq-如何实现幂等性-🌟","link":"#【中等】rocketmq-如何实现幂等性-🌟","children":[]},{"level":3,"title":"【困难】事务消息是如何工作的？🌟🌟🌟","slug":"【困难】事务消息是如何工作的-🌟🌟🌟","link":"#【困难】事务消息是如何工作的-🌟🌟🌟","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1758642828000,"updatedTime":1759071350000,"contributors":[{"name":"dunwu","email":"forbreak@163.com","commits":2}]},"readingTime":{"minutes":32.28,"words":9684},"filePathRelative":"15.分布式/分布式通信/MQ/RocketMQ/RocketMQ_面试.md","localizedDate":"2022年7月12日","excerpt":"<h1> RocketMQ 面试</h1>\\n<h2> RocketMQ 简介</h2>\\n<h3> 【简单】RocketMQ 是什么？🌟</h3>\\n<p><strong>RocketMQ 是一个开源分布式消息中间件</strong>。最初由阿里巴巴开发，现在是 Apache 顶级项目。</p>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">RocketMQ 核心组件</p>\\n</div>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\">组件</th>\\n<th style=\\"text-align:left\\">功能</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>命名服务（Name Server）</strong></td>\\n<td style=\\"text-align:left\\">负责管理所有 Broker 的地址信息（路由表），实现服务发现。客户端通过它找到对应的 Broker。<strong>它本身是无状态的，集群间不互相通信</strong>，因此非常简单高效。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>代理（Broker）</strong></td>\\n<td style=\\"text-align:left\\">RocketMQ 的核心，负责消息的存储、投递和查询。为了保证高可用，通常采用<strong>主从结构</strong>。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>生产者（Producer）</strong></td>\\n<td style=\\"text-align:left\\">创建并发送消息的客户端。它从 Name Server 获取路由信息，然后将消息发送到合适的 Broker。</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>消费者（Consumer）</strong></td>\\n<td style=\\"text-align:left\\">从 Broker 拉取消息并进行消费的客户端。它同样从 Name Server 获取路由信息。</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{e as data};
